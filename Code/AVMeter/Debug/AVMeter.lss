
AVMeter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  00001294  00001308  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001294  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00001342  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000013a0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  000013dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001076  00000000  00000000  00001464  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000809  00000000  00000000  000024da  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000622  00000000  00000000  00002ce3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000164  00000000  00000000  00003308  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000540  00000000  00000000  0000346c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a2f  00000000  00000000  000039ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  000043db  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
       8:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
       c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      10:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      14:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      18:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      1c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      20:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      24:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      28:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      2c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      30:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      34:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      38:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      3c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      40:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      44:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      48:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      4c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      50:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      54:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      58:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      5c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      60:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      64:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e4 e9       	ldi	r30, 0x94	; 148
     17e:	f2 e1       	ldi	r31, 0x12	; 18
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	aa 33       	cpi	r26, 0x3A	; 58
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>
     18c:	0e 94 87 02 	call	0x50e	; 0x50e <main>
     190:	0c 94 48 09 	jmp	0x1290	; 0x1290 <_exit>

00000194 <__bad_interrupt>:
     194:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000198 <LCD_Command>:
		Call it at program startup.

********************************************************************/
void InitADCEx()
{
	SPIInit();
     198:	8b b9       	out	0x0b, r24	; 11
     19a:	28 98       	cbi	0x05, 0	; 5
     19c:	29 9a       	sbi	0x05, 1	; 5
     19e:	00 00       	nop
     1a0:	29 98       	cbi	0x05, 1	; 5
     1a2:	83 ef       	ldi	r24, 0xF3	; 243
     1a4:	91 e0       	ldi	r25, 0x01	; 1
     1a6:	01 97       	sbiw	r24, 0x01	; 1
     1a8:	f1 f7       	brne	.-4      	; 0x1a6 <LCD_Command+0xe>
     1aa:	00 c0       	rjmp	.+0      	; 0x1ac <LCD_Command+0x14>
     1ac:	00 00       	nop
     1ae:	08 95       	ret

000001b0 <LCD_Char>:
     1b0:	8b b9       	out	0x0b, r24	; 11
     1b2:	28 9a       	sbi	0x05, 0	; 5
     1b4:	29 9a       	sbi	0x05, 1	; 5
     1b6:	00 00       	nop
     1b8:	29 98       	cbi	0x05, 1	; 5
     1ba:	83 ef       	ldi	r24, 0xF3	; 243
     1bc:	91 e0       	ldi	r25, 0x01	; 1
     1be:	01 97       	sbiw	r24, 0x01	; 1
     1c0:	f1 f7       	brne	.-4      	; 0x1be <LCD_Char+0xe>
     1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <LCD_Char+0x14>
     1c4:	00 00       	nop
     1c6:	08 95       	ret

000001c8 <LCD_Init>:
     1c8:	8f ef       	ldi	r24, 0xFF	; 255
     1ca:	8a b9       	out	0x0a, r24	; 10
     1cc:	84 b9       	out	0x04, r24	; 4
     1ce:	87 e8       	ldi	r24, 0x87	; 135
     1d0:	93 e1       	ldi	r25, 0x13	; 19
     1d2:	01 97       	sbiw	r24, 0x01	; 1
     1d4:	f1 f7       	brne	.-4      	; 0x1d2 <LCD_Init+0xa>
     1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <LCD_Init+0x10>
     1d8:	00 00       	nop
     1da:	82 e0       	ldi	r24, 0x02	; 2
     1dc:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
     1e0:	88 e3       	ldi	r24, 0x38	; 56
     1e2:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
     1e6:	8c e0       	ldi	r24, 0x0C	; 12
     1e8:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
     1ec:	86 e0       	ldi	r24, 0x06	; 6
     1ee:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
     1f2:	81 e0       	ldi	r24, 0x01	; 1
     1f4:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
     1f8:	83 ef       	ldi	r24, 0xF3	; 243
     1fa:	91 e0       	ldi	r25, 0x01	; 1
     1fc:	01 97       	sbiw	r24, 0x01	; 1
     1fe:	f1 f7       	brne	.-4      	; 0x1fc <LCD_Init+0x34>
     200:	00 c0       	rjmp	.+0      	; 0x202 <LCD_Init+0x3a>
     202:	00 00       	nop
     204:	08 95       	ret

00000206 <LCD_String>:
     206:	cf 93       	push	r28
     208:	df 93       	push	r29
     20a:	ec 01       	movw	r28, r24
     20c:	88 81       	ld	r24, Y
     20e:	88 23       	and	r24, r24
     210:	31 f0       	breq	.+12     	; 0x21e <LCD_String+0x18>
     212:	21 96       	adiw	r28, 0x01	; 1
     214:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_Char>
     218:	89 91       	ld	r24, Y+
     21a:	81 11       	cpse	r24, r1
     21c:	fb cf       	rjmp	.-10     	; 0x214 <LCD_String+0xe>
     21e:	df 91       	pop	r29
     220:	cf 91       	pop	r28
     222:	08 95       	ret

00000224 <LCD_Custom_Char>:
     224:	0f 93       	push	r16
     226:	1f 93       	push	r17
     228:	cf 93       	push	r28
     22a:	df 93       	push	r29
     22c:	88 30       	cpi	r24, 0x08	; 8
     22e:	80 f4       	brcc	.+32     	; 0x250 <LCD_Custom_Char+0x2c>
     230:	8b 01       	movw	r16, r22
     232:	88 0f       	add	r24, r24
     234:	88 0f       	add	r24, r24
     236:	88 0f       	add	r24, r24
     238:	80 5c       	subi	r24, 0xC0	; 192
     23a:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
     23e:	e8 01       	movw	r28, r16
     240:	08 5f       	subi	r16, 0xF8	; 248
     242:	1f 4f       	sbci	r17, 0xFF	; 255
     244:	89 91       	ld	r24, Y+
     246:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_Char>
     24a:	c0 17       	cp	r28, r16
     24c:	d1 07       	cpc	r29, r17
     24e:	d1 f7       	brne	.-12     	; 0x244 <LCD_Custom_Char+0x20>
     250:	df 91       	pop	r29
     252:	cf 91       	pop	r28
     254:	1f 91       	pop	r17
     256:	0f 91       	pop	r16
     258:	08 95       	ret

0000025a <SPIInit>:
     25a:	84 b1       	in	r24, 0x04	; 4
     25c:	88 62       	ori	r24, 0x28	; 40
     25e:	84 b9       	out	0x04, r24	; 4
     260:	38 9a       	sbi	0x07, 0	; 7
     262:	40 9a       	sbi	0x08, 0	; 8
     264:	8c b5       	in	r24, 0x2c	; 44
     266:	81 65       	ori	r24, 0x51	; 81
     268:	8c bd       	out	0x2c, r24	; 44
     26a:	08 95       	ret

0000026c <SPIWrite>:
     26c:	8e bd       	out	0x2e, r24	; 46
     26e:	0d b4       	in	r0, 0x2d	; 45
     270:	07 fe       	sbrs	r0, 7
     272:	fd cf       	rjmp	.-6      	; 0x26e <SPIWrite+0x2>
     274:	8e b5       	in	r24, 0x2e	; 46
     276:	08 95       	ret

00000278 <ReadADCEx>:
		Since the ADCs are 12 bit the return value is between
		0-4095 (Including both)

********************************************************************/
uint16_t ReadADCEx(uint8_t ch)
{
     278:	cf 93       	push	r28
     27a:	c8 2f       	mov	r28, r24
	uint8_t byte,data_high,data_low;

	byte=0b00000110;

	if(ch>3)
     27c:	84 30       	cpi	r24, 0x04	; 4
     27e:	10 f0       	brcs	.+4      	; 0x284 <ReadADCEx+0xc>
		byte|=0b00000001;
     280:	87 e0       	ldi	r24, 0x07	; 7
     282:	01 c0       	rjmp	.+2      	; 0x286 <ReadADCEx+0xe>
********************************************************************/
uint16_t ReadADCEx(uint8_t ch)
{
	uint8_t byte,data_high,data_low;

	byte=0b00000110;
     284:	86 e0       	ldi	r24, 0x06	; 6

	if(ch>3)
		byte|=0b00000001;

	CS_LOW();
     286:	40 98       	cbi	0x08, 0	; 8
	
	SPIWrite(byte);
     288:	0e 94 36 01 	call	0x26c	; 0x26c <SPIWrite>

	byte=ch<<6;

	data_high=SPIWrite(byte);
     28c:	8c 2f       	mov	r24, r28
     28e:	82 95       	swap	r24
     290:	88 0f       	add	r24, r24
     292:	88 0f       	add	r24, r24
     294:	80 7c       	andi	r24, 0xC0	; 192
     296:	0e 94 36 01 	call	0x26c	; 0x26c <SPIWrite>
     29a:	c8 2f       	mov	r28, r24

	data_high&=0b00001111;

	data_low=SPIWrite(0xFF);
     29c:	8f ef       	ldi	r24, 0xFF	; 255
     29e:	0e 94 36 01 	call	0x26c	; 0x26c <SPIWrite>

	CS_HIGH();
     2a2:	40 9a       	sbi	0x08, 0	; 8

	return ((data_high<<8)|data_low);
     2a4:	cf 70       	andi	r28, 0x0F	; 15
     2a6:	2c 2f       	mov	r18, r28
     2a8:	30 e0       	ldi	r19, 0x00	; 0
     2aa:	32 2f       	mov	r19, r18
     2ac:	22 27       	eor	r18, r18
}
     2ae:	a9 01       	movw	r20, r18
     2b0:	48 2b       	or	r20, r24
     2b2:	ca 01       	movw	r24, r20
     2b4:	cf 91       	pop	r28
     2b6:	08 95       	ret

000002b8 <Display>:
		Display(channel3Volts, channel3Amps, 1, 3, true);
	}
}

void Display(uint16_t adcVoltageResult,  uint16_t adcAmpsResult, char row, int channel, bool negative)
{
     2b8:	df 92       	push	r13
     2ba:	ef 92       	push	r14
     2bc:	ff 92       	push	r15
     2be:	0f 93       	push	r16
     2c0:	1f 93       	push	r17
     2c2:	cf 93       	push	r28
     2c4:	df 93       	push	r29
     2c6:	cd b7       	in	r28, 0x3d	; 61
     2c8:	de b7       	in	r29, 0x3e	; 62
     2ca:	62 97       	sbiw	r28, 0x12	; 18
     2cc:	0f b6       	in	r0, 0x3f	; 63
     2ce:	f8 94       	cli
     2d0:	de bf       	out	0x3e, r29	; 62
     2d2:	0f be       	out	0x3f, r0	; 63
     2d4:	cd bf       	out	0x3d, r28	; 61
     2d6:	7b 01       	movw	r14, r22
     2d8:	14 2f       	mov	r17, r20
     2da:	d2 2e       	mov	r13, r18
	char voltsBuffer[9];
	char ampsBuffer[9];
	
	/* Builds Voltage Output string to be displayed on LCD */
	
	if (adcVoltageResult > 199) {
     2dc:	88 3c       	cpi	r24, 0xC8	; 200
     2de:	91 05       	cpc	r25, r1
     2e0:	08 f4       	brcc	.+2      	; 0x2e4 <Display+0x2c>
     2e2:	43 c0       	rjmp	.+134    	; 0x36a <Display+0xb2>
		if (negative) {
     2e4:	00 23       	and	r16, r16
     2e6:	11 f1       	breq	.+68     	; 0x32c <Display+0x74>
			volts = (float)adcVoltageResult*.005f*-1;
			sprintf(voltsBuffer, "%6.2f V", volts); //builds buffer with 6 total characters with precision 2
     2e8:	bc 01       	movw	r22, r24
     2ea:	80 e0       	ldi	r24, 0x00	; 0
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	0e 94 ef 02 	call	0x5de	; 0x5de <__floatunsisf>
     2f2:	2a e0       	ldi	r18, 0x0A	; 10
     2f4:	37 ed       	ldi	r19, 0xD7	; 215
     2f6:	43 ea       	ldi	r20, 0xA3	; 163
     2f8:	5b e3       	ldi	r21, 0x3B	; 59
     2fa:	0e 94 2c 03 	call	0x658	; 0x658 <__mulsf3>
     2fe:	dc 01       	movw	r26, r24
     300:	cb 01       	movw	r24, r22
     302:	b0 58       	subi	r27, 0x80	; 128
     304:	bf 93       	push	r27
     306:	af 93       	push	r26
     308:	9f 93       	push	r25
     30a:	8f 93       	push	r24
     30c:	88 e1       	ldi	r24, 0x18	; 24
     30e:	91 e0       	ldi	r25, 0x01	; 1
     310:	9f 93       	push	r25
     312:	8f 93       	push	r24
     314:	ce 01       	movw	r24, r28
     316:	01 96       	adiw	r24, 0x01	; 1
     318:	9f 93       	push	r25
     31a:	8f 93       	push	r24
     31c:	0e 94 c8 08 	call	0x1190	; 0x1190 <sprintf>
     320:	0f b6       	in	r0, 0x3f	; 63
     322:	f8 94       	cli
     324:	de bf       	out	0x3e, r29	; 62
     326:	0f be       	out	0x3f, r0	; 63
     328:	cd bf       	out	0x3d, r28	; 61
     32a:	6d c0       	rjmp	.+218    	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
		}
		else {
			volts = (float)adcVoltageResult*.005f;
			sprintf(voltsBuffer, "%6.2f V", volts); //builds buffer with 6 total characters with precision 2
     32c:	bc 01       	movw	r22, r24
     32e:	80 e0       	ldi	r24, 0x00	; 0
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	0e 94 ef 02 	call	0x5de	; 0x5de <__floatunsisf>
     336:	2a e0       	ldi	r18, 0x0A	; 10
     338:	37 ed       	ldi	r19, 0xD7	; 215
     33a:	43 ea       	ldi	r20, 0xA3	; 163
     33c:	5b e3       	ldi	r21, 0x3B	; 59
     33e:	0e 94 2c 03 	call	0x658	; 0x658 <__mulsf3>
     342:	9f 93       	push	r25
     344:	8f 93       	push	r24
     346:	7f 93       	push	r23
     348:	6f 93       	push	r22
     34a:	88 e1       	ldi	r24, 0x18	; 24
     34c:	91 e0       	ldi	r25, 0x01	; 1
     34e:	9f 93       	push	r25
     350:	8f 93       	push	r24
     352:	ce 01       	movw	r24, r28
     354:	01 96       	adiw	r24, 0x01	; 1
     356:	9f 93       	push	r25
     358:	8f 93       	push	r24
     35a:	0e 94 c8 08 	call	0x1190	; 0x1190 <sprintf>
     35e:	0f b6       	in	r0, 0x3f	; 63
     360:	f8 94       	cli
     362:	de bf       	out	0x3e, r29	; 62
     364:	0f be       	out	0x3f, r0	; 63
     366:	cd bf       	out	0x3d, r28	; 61
     368:	4e c0       	rjmp	.+156    	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
		}
	}
	
	else {
		if (negative) {
     36a:	00 23       	and	r16, r16
     36c:	41 f1       	breq	.+80     	; 0x3be <Display+0x106>
			volts = (float)adcVoltageResult*.005f*1000*-1;
			sprintf(voltsBuffer, "%5.0f mV", volts); //builds buffer with 5 total characters with precision 0
     36e:	bc 01       	movw	r22, r24
     370:	80 e0       	ldi	r24, 0x00	; 0
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	0e 94 ef 02 	call	0x5de	; 0x5de <__floatunsisf>
     378:	2a e0       	ldi	r18, 0x0A	; 10
     37a:	37 ed       	ldi	r19, 0xD7	; 215
     37c:	43 ea       	ldi	r20, 0xA3	; 163
     37e:	5b e3       	ldi	r21, 0x3B	; 59
     380:	0e 94 2c 03 	call	0x658	; 0x658 <__mulsf3>
     384:	20 e0       	ldi	r18, 0x00	; 0
     386:	30 e0       	ldi	r19, 0x00	; 0
     388:	4a e7       	ldi	r20, 0x7A	; 122
     38a:	54 e4       	ldi	r21, 0x44	; 68
     38c:	0e 94 2c 03 	call	0x658	; 0x658 <__mulsf3>
     390:	dc 01       	movw	r26, r24
     392:	cb 01       	movw	r24, r22
     394:	b0 58       	subi	r27, 0x80	; 128
     396:	bf 93       	push	r27
     398:	af 93       	push	r26
     39a:	9f 93       	push	r25
     39c:	8f 93       	push	r24
     39e:	80 e2       	ldi	r24, 0x20	; 32
     3a0:	91 e0       	ldi	r25, 0x01	; 1
     3a2:	9f 93       	push	r25
     3a4:	8f 93       	push	r24
     3a6:	ce 01       	movw	r24, r28
     3a8:	01 96       	adiw	r24, 0x01	; 1
     3aa:	9f 93       	push	r25
     3ac:	8f 93       	push	r24
     3ae:	0e 94 c8 08 	call	0x1190	; 0x1190 <sprintf>
     3b2:	0f b6       	in	r0, 0x3f	; 63
     3b4:	f8 94       	cli
     3b6:	de bf       	out	0x3e, r29	; 62
     3b8:	0f be       	out	0x3f, r0	; 63
     3ba:	cd bf       	out	0x3d, r28	; 61
     3bc:	24 c0       	rjmp	.+72     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
		} 
		else {
			volts = (float)adcVoltageResult*.005f*1000;
			sprintf(voltsBuffer, "%5.0f mV", volts); //builds buffer with 5 total characters with precision 0
     3be:	bc 01       	movw	r22, r24
     3c0:	80 e0       	ldi	r24, 0x00	; 0
     3c2:	90 e0       	ldi	r25, 0x00	; 0
     3c4:	0e 94 ef 02 	call	0x5de	; 0x5de <__floatunsisf>
     3c8:	2a e0       	ldi	r18, 0x0A	; 10
     3ca:	37 ed       	ldi	r19, 0xD7	; 215
     3cc:	43 ea       	ldi	r20, 0xA3	; 163
     3ce:	5b e3       	ldi	r21, 0x3B	; 59
     3d0:	0e 94 2c 03 	call	0x658	; 0x658 <__mulsf3>
     3d4:	20 e0       	ldi	r18, 0x00	; 0
     3d6:	30 e0       	ldi	r19, 0x00	; 0
     3d8:	4a e7       	ldi	r20, 0x7A	; 122
     3da:	54 e4       	ldi	r21, 0x44	; 68
     3dc:	0e 94 2c 03 	call	0x658	; 0x658 <__mulsf3>
     3e0:	9f 93       	push	r25
     3e2:	8f 93       	push	r24
     3e4:	7f 93       	push	r23
     3e6:	6f 93       	push	r22
     3e8:	80 e2       	ldi	r24, 0x20	; 32
     3ea:	91 e0       	ldi	r25, 0x01	; 1
     3ec:	9f 93       	push	r25
     3ee:	8f 93       	push	r24
     3f0:	ce 01       	movw	r24, r28
     3f2:	01 96       	adiw	r24, 0x01	; 1
     3f4:	9f 93       	push	r25
     3f6:	8f 93       	push	r24
     3f8:	0e 94 c8 08 	call	0x1190	; 0x1190 <sprintf>
     3fc:	0f b6       	in	r0, 0x3f	; 63
     3fe:	f8 94       	cli
     400:	de bf       	out	0x3e, r29	; 62
     402:	0f be       	out	0x3f, r0	; 63
     404:	cd bf       	out	0x3d, r28	; 61
		}
	}
	
	if (adcAmpsResult > 199) {
     406:	98 ec       	ldi	r25, 0xC8	; 200
     408:	e9 16       	cp	r14, r25
     40a:	f1 04       	cpc	r15, r1
     40c:	f8 f0       	brcs	.+62     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
		amps = (float)adcAmpsResult*.001f;
		sprintf(ampsBuffer, "%4.2f A", amps); //builds buffer with 6 total characters with precision 2	
     40e:	b7 01       	movw	r22, r14
     410:	80 e0       	ldi	r24, 0x00	; 0
     412:	90 e0       	ldi	r25, 0x00	; 0
     414:	0e 94 ef 02 	call	0x5de	; 0x5de <__floatunsisf>
     418:	2f e6       	ldi	r18, 0x6F	; 111
     41a:	32 e1       	ldi	r19, 0x12	; 18
     41c:	43 e8       	ldi	r20, 0x83	; 131
     41e:	5a e3       	ldi	r21, 0x3A	; 58
     420:	0e 94 2c 03 	call	0x658	; 0x658 <__mulsf3>
     424:	9f 93       	push	r25
     426:	8f 93       	push	r24
     428:	7f 93       	push	r23
     42a:	6f 93       	push	r22
     42c:	89 e2       	ldi	r24, 0x29	; 41
     42e:	91 e0       	ldi	r25, 0x01	; 1
     430:	9f 93       	push	r25
     432:	8f 93       	push	r24
     434:	ce 01       	movw	r24, r28
     436:	0a 96       	adiw	r24, 0x0a	; 10
     438:	9f 93       	push	r25
     43a:	8f 93       	push	r24
     43c:	0e 94 c8 08 	call	0x1190	; 0x1190 <sprintf>
     440:	0f b6       	in	r0, 0x3f	; 63
     442:	f8 94       	cli
     444:	de bf       	out	0x3e, r29	; 62
     446:	0f be       	out	0x3f, r0	; 63
     448:	cd bf       	out	0x3d, r28	; 61
     44a:	24 c0       	rjmp	.+72     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
	}	
	else {
		amps = (float)adcAmpsResult*.001f*1000;
		sprintf(ampsBuffer, "%3.0f mA", amps); //builds buffer with 5 total characters with precision 0
     44c:	b7 01       	movw	r22, r14
     44e:	80 e0       	ldi	r24, 0x00	; 0
     450:	90 e0       	ldi	r25, 0x00	; 0
     452:	0e 94 ef 02 	call	0x5de	; 0x5de <__floatunsisf>
     456:	2f e6       	ldi	r18, 0x6F	; 111
     458:	32 e1       	ldi	r19, 0x12	; 18
     45a:	43 e8       	ldi	r20, 0x83	; 131
     45c:	5a e3       	ldi	r21, 0x3A	; 58
     45e:	0e 94 2c 03 	call	0x658	; 0x658 <__mulsf3>
     462:	20 e0       	ldi	r18, 0x00	; 0
     464:	30 e0       	ldi	r19, 0x00	; 0
     466:	4a e7       	ldi	r20, 0x7A	; 122
     468:	54 e4       	ldi	r21, 0x44	; 68
     46a:	0e 94 2c 03 	call	0x658	; 0x658 <__mulsf3>
     46e:	9f 93       	push	r25
     470:	8f 93       	push	r24
     472:	7f 93       	push	r23
     474:	6f 93       	push	r22
     476:	81 e3       	ldi	r24, 0x31	; 49
     478:	91 e0       	ldi	r25, 0x01	; 1
     47a:	9f 93       	push	r25
     47c:	8f 93       	push	r24
     47e:	ce 01       	movw	r24, r28
     480:	0a 96       	adiw	r24, 0x0a	; 10
     482:	9f 93       	push	r25
     484:	8f 93       	push	r24
     486:	0e 94 c8 08 	call	0x1190	; 0x1190 <sprintf>
     48a:	0f b6       	in	r0, 0x3f	; 63
     48c:	f8 94       	cli
     48e:	de bf       	out	0x3e, r29	; 62
     490:	0f be       	out	0x3f, r0	; 63
     492:	cd bf       	out	0x3d, r28	; 61
	}
	
	voltsStartPos = 1;
	ampsStartPos = 10;
	
	if (row == 0) {
     494:	11 11       	cpse	r17, r1
     496:	16 c0       	rjmp	.+44     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
		LCD_Command(0x80);
     498:	80 e8       	ldi	r24, 0x80	; 128
     49a:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
		LCD_Char(channel-1);
     49e:	8f ef       	ldi	r24, 0xFF	; 255
     4a0:	8d 0d       	add	r24, r13
     4a2:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_Char>
		LCD_Command((voltsStartPos & 0x0F)|0x80);	/* Command of first row and required position<16 */
     4a6:	81 e8       	ldi	r24, 0x81	; 129
     4a8:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
		LCD_String(voltsBuffer);
     4ac:	ce 01       	movw	r24, r28
     4ae:	01 96       	adiw	r24, 0x01	; 1
     4b0:	0e 94 03 01 	call	0x206	; 0x206 <LCD_String>
		LCD_Command((ampsStartPos & 0x0F)|0x80);	/* Command of first row and required position<16 */
     4b4:	8a e8       	ldi	r24, 0x8A	; 138
     4b6:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
		LCD_String(ampsBuffer);
     4ba:	ce 01       	movw	r24, r28
     4bc:	0a 96       	adiw	r24, 0x0a	; 10
     4be:	0e 94 03 01 	call	0x206	; 0x206 <LCD_String>
     4c2:	17 c0       	rjmp	.+46     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
	}
	else if (row == 1) {
     4c4:	11 30       	cpi	r17, 0x01	; 1
     4c6:	a9 f4       	brne	.+42     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
		LCD_Command(0xC0);
     4c8:	80 ec       	ldi	r24, 0xC0	; 192
     4ca:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
		LCD_Char(channel-1);
     4ce:	8f ef       	ldi	r24, 0xFF	; 255
     4d0:	8d 0d       	add	r24, r13
     4d2:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_Char>
		LCD_Command((voltsStartPos & 0x0F)|0xC0);	/* Command of second row and required position<16 */
     4d6:	81 ec       	ldi	r24, 0xC1	; 193
     4d8:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
		LCD_String(voltsBuffer);
     4dc:	ce 01       	movw	r24, r28
     4de:	01 96       	adiw	r24, 0x01	; 1
     4e0:	0e 94 03 01 	call	0x206	; 0x206 <LCD_String>
		LCD_Command((ampsStartPos & 0x0F)|0xC0);	/* Command of first row and required position<16 */
     4e4:	8a ec       	ldi	r24, 0xCA	; 202
     4e6:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
		LCD_String(ampsBuffer);
     4ea:	ce 01       	movw	r24, r28
     4ec:	0a 96       	adiw	r24, 0x0a	; 10
     4ee:	0e 94 03 01 	call	0x206	; 0x206 <LCD_String>
	}


}
     4f2:	62 96       	adiw	r28, 0x12	; 18
     4f4:	0f b6       	in	r0, 0x3f	; 63
     4f6:	f8 94       	cli
     4f8:	de bf       	out	0x3e, r29	; 62
     4fa:	0f be       	out	0x3f, r0	; 63
     4fc:	cd bf       	out	0x3d, r28	; 61
     4fe:	df 91       	pop	r29
     500:	cf 91       	pop	r28
     502:	1f 91       	pop	r17
     504:	0f 91       	pop	r16
     506:	ff 90       	pop	r15
     508:	ef 90       	pop	r14
     50a:	df 90       	pop	r13
     50c:	08 95       	ret

0000050e <main>:
#include "spi.h"

void Display(uint16_t adcVoltageResult, uint16_t adcAmpsResult, char row, int channel, bool negative);

int main()
{
     50e:	cf 93       	push	r28
     510:	df 93       	push	r29
     512:	cd b7       	in	r28, 0x3d	; 61
     514:	de b7       	in	r29, 0x3e	; 62
     516:	68 97       	sbiw	r28, 0x18	; 24
     518:	0f b6       	in	r0, 0x3f	; 63
     51a:	f8 94       	cli
     51c:	de bf       	out	0x3e, r29	; 62
     51e:	0f be       	out	0x3f, r0	; 63
     520:	cd bf       	out	0x3d, r28	; 61
	unsigned char charOne[8] = { 0x1B, 0x13, 0x1B, 0x1B, 0x1B, 0x1B, 0x1B, 0x11 };
     522:	88 e0       	ldi	r24, 0x08	; 8
     524:	e0 e0       	ldi	r30, 0x00	; 0
     526:	f1 e0       	ldi	r31, 0x01	; 1
     528:	de 01       	movw	r26, r28
     52a:	11 96       	adiw	r26, 0x01	; 1
     52c:	01 90       	ld	r0, Z+
     52e:	0d 92       	st	X+, r0
     530:	8a 95       	dec	r24
     532:	e1 f7       	brne	.-8      	; 0x52c <main+0x1e>
	unsigned char charTwo[8] = { 0x1F, 0x11, 0x1D, 0x1D, 0x11, 0x17, 0x17, 0x11 };
     534:	88 e0       	ldi	r24, 0x08	; 8
     536:	e8 e0       	ldi	r30, 0x08	; 8
     538:	f1 e0       	ldi	r31, 0x01	; 1
     53a:	de 01       	movw	r26, r28
     53c:	19 96       	adiw	r26, 0x09	; 9
     53e:	01 90       	ld	r0, Z+
     540:	0d 92       	st	X+, r0
     542:	8a 95       	dec	r24
     544:	e1 f7       	brne	.-8      	; 0x53e <main+0x30>
    unsigned char charThree[8] = { 0x1F, 0x11, 0x1D, 0x1D, 0x11, 0x1D, 0x1D, 0x11 };
     546:	88 e0       	ldi	r24, 0x08	; 8
     548:	e0 e1       	ldi	r30, 0x10	; 16
     54a:	f1 e0       	ldi	r31, 0x01	; 1
     54c:	de 01       	movw	r26, r28
     54e:	51 96       	adiw	r26, 0x11	; 17
     550:	01 90       	ld	r0, Z+
     552:	0d 92       	st	X+, r0
     554:	8a 95       	dec	r24
     556:	e1 f7       	brne	.-8      	; 0x550 <main+0x42>
	uint16_t channel2Amps;  // 5 Volt non-adjustable channel
	uint16_t channel2Volts; // 5 Volt non-adjustable channel
	uint16_t channel3Amps;  // negative adjustable channel
	uint16_t channel3Volts; // negative adjustable channel
	
	LCD_Init();			/* Initialization of LCD*/
     558:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCD_Init>
		Call it at program startup.

********************************************************************/
void InitADCEx()
{
	SPIInit();
     55c:	0e 94 2d 01 	call	0x25a	; 0x25a <SPIInit>
	InitADCEx();
	
	uint16_t adcTestResult = 0;
	
	/* Loads custom characters into LCD memory */
	LCD_Custom_Char(0, charOne);  
     560:	be 01       	movw	r22, r28
     562:	6f 5f       	subi	r22, 0xFF	; 255
     564:	7f 4f       	sbci	r23, 0xFF	; 255
     566:	80 e0       	ldi	r24, 0x00	; 0
     568:	0e 94 12 01 	call	0x224	; 0x224 <LCD_Custom_Char>
	LCD_Custom_Char(1, charTwo);
     56c:	be 01       	movw	r22, r28
     56e:	67 5f       	subi	r22, 0xF7	; 247
     570:	7f 4f       	sbci	r23, 0xFF	; 255
     572:	81 e0       	ldi	r24, 0x01	; 1
     574:	0e 94 12 01 	call	0x224	; 0x224 <LCD_Custom_Char>
	LCD_Custom_Char(2, charThree);
     578:	be 01       	movw	r22, r28
     57a:	6f 5e       	subi	r22, 0xEF	; 239
     57c:	7f 4f       	sbci	r23, 0xFF	; 255
     57e:	82 e0       	ldi	r24, 0x02	; 2
     580:	0e 94 12 01 	call	0x224	; 0x224 <LCD_Custom_Char>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     584:	87 ea       	ldi	r24, 0xA7	; 167
     586:	91 e6       	ldi	r25, 0x61	; 97
     588:	01 97       	sbiw	r24, 0x01	; 1
     58a:	f1 f7       	brne	.-4      	; 0x588 <main+0x7a>
     58c:	00 c0       	rjmp	.+0      	; 0x58e <main+0x80>
     58e:	00 00       	nop
	
	while(1)
	{
		_delay_ms(100);
		
		channel1Amps = ReadADCEx(0);
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	0e 94 3c 01 	call	0x278	; 0x278 <ReadADCEx>
     596:	4c 01       	movw	r8, r24
		channel1Volts = ReadADCEx(1);
     598:	81 e0       	ldi	r24, 0x01	; 1
     59a:	0e 94 3c 01 	call	0x278	; 0x278 <ReadADCEx>
     59e:	5c 01       	movw	r10, r24
		channel2Amps = ReadADCEx(2);
     5a0:	82 e0       	ldi	r24, 0x02	; 2
     5a2:	0e 94 3c 01 	call	0x278	; 0x278 <ReadADCEx>
		channel2Volts = ReadADCEx(3);
     5a6:	83 e0       	ldi	r24, 0x03	; 3
     5a8:	0e 94 3c 01 	call	0x278	; 0x278 <ReadADCEx>
		channel3Amps = ReadADCEx(4);
     5ac:	84 e0       	ldi	r24, 0x04	; 4
     5ae:	0e 94 3c 01 	call	0x278	; 0x278 <ReadADCEx>
     5b2:	6c 01       	movw	r12, r24
		channel3Volts = ReadADCEx(5);
     5b4:	85 e0       	ldi	r24, 0x05	; 5
     5b6:	0e 94 3c 01 	call	0x278	; 0x278 <ReadADCEx>
     5ba:	7c 01       	movw	r14, r24
		
		adcTestResult++;
		Display(channel1Volts, channel1Amps, 0, 1, false);
     5bc:	00 e0       	ldi	r16, 0x00	; 0
     5be:	21 e0       	ldi	r18, 0x01	; 1
     5c0:	30 e0       	ldi	r19, 0x00	; 0
     5c2:	40 e0       	ldi	r20, 0x00	; 0
     5c4:	b4 01       	movw	r22, r8
     5c6:	c5 01       	movw	r24, r10
     5c8:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <Display>
		Display(channel3Volts, channel3Amps, 1, 3, true);
     5cc:	01 e0       	ldi	r16, 0x01	; 1
     5ce:	23 e0       	ldi	r18, 0x03	; 3
     5d0:	30 e0       	ldi	r19, 0x00	; 0
     5d2:	41 e0       	ldi	r20, 0x01	; 1
     5d4:	b6 01       	movw	r22, r12
     5d6:	c7 01       	movw	r24, r14
     5d8:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <Display>
     5dc:	d3 cf       	rjmp	.-90     	; 0x584 <main+0x76>

000005de <__floatunsisf>:
     5de:	e8 94       	clt
     5e0:	09 c0       	rjmp	.+18     	; 0x5f4 <__floatsisf+0x12>

000005e2 <__floatsisf>:
     5e2:	97 fb       	bst	r25, 7
     5e4:	3e f4       	brtc	.+14     	; 0x5f4 <__floatsisf+0x12>
     5e6:	90 95       	com	r25
     5e8:	80 95       	com	r24
     5ea:	70 95       	com	r23
     5ec:	61 95       	neg	r22
     5ee:	7f 4f       	sbci	r23, 0xFF	; 255
     5f0:	8f 4f       	sbci	r24, 0xFF	; 255
     5f2:	9f 4f       	sbci	r25, 0xFF	; 255
     5f4:	99 23       	and	r25, r25
     5f6:	a9 f0       	breq	.+42     	; 0x622 <__floatsisf+0x40>
     5f8:	f9 2f       	mov	r31, r25
     5fa:	96 e9       	ldi	r25, 0x96	; 150
     5fc:	bb 27       	eor	r27, r27
     5fe:	93 95       	inc	r25
     600:	f6 95       	lsr	r31
     602:	87 95       	ror	r24
     604:	77 95       	ror	r23
     606:	67 95       	ror	r22
     608:	b7 95       	ror	r27
     60a:	f1 11       	cpse	r31, r1
     60c:	f8 cf       	rjmp	.-16     	; 0x5fe <__floatsisf+0x1c>
     60e:	fa f4       	brpl	.+62     	; 0x64e <__floatsisf+0x6c>
     610:	bb 0f       	add	r27, r27
     612:	11 f4       	brne	.+4      	; 0x618 <__floatsisf+0x36>
     614:	60 ff       	sbrs	r22, 0
     616:	1b c0       	rjmp	.+54     	; 0x64e <__floatsisf+0x6c>
     618:	6f 5f       	subi	r22, 0xFF	; 255
     61a:	7f 4f       	sbci	r23, 0xFF	; 255
     61c:	8f 4f       	sbci	r24, 0xFF	; 255
     61e:	9f 4f       	sbci	r25, 0xFF	; 255
     620:	16 c0       	rjmp	.+44     	; 0x64e <__floatsisf+0x6c>
     622:	88 23       	and	r24, r24
     624:	11 f0       	breq	.+4      	; 0x62a <__floatsisf+0x48>
     626:	96 e9       	ldi	r25, 0x96	; 150
     628:	11 c0       	rjmp	.+34     	; 0x64c <__floatsisf+0x6a>
     62a:	77 23       	and	r23, r23
     62c:	21 f0       	breq	.+8      	; 0x636 <__floatsisf+0x54>
     62e:	9e e8       	ldi	r25, 0x8E	; 142
     630:	87 2f       	mov	r24, r23
     632:	76 2f       	mov	r23, r22
     634:	05 c0       	rjmp	.+10     	; 0x640 <__floatsisf+0x5e>
     636:	66 23       	and	r22, r22
     638:	71 f0       	breq	.+28     	; 0x656 <__floatsisf+0x74>
     63a:	96 e8       	ldi	r25, 0x86	; 134
     63c:	86 2f       	mov	r24, r22
     63e:	70 e0       	ldi	r23, 0x00	; 0
     640:	60 e0       	ldi	r22, 0x00	; 0
     642:	2a f0       	brmi	.+10     	; 0x64e <__floatsisf+0x6c>
     644:	9a 95       	dec	r25
     646:	66 0f       	add	r22, r22
     648:	77 1f       	adc	r23, r23
     64a:	88 1f       	adc	r24, r24
     64c:	da f7       	brpl	.-10     	; 0x644 <__floatsisf+0x62>
     64e:	88 0f       	add	r24, r24
     650:	96 95       	lsr	r25
     652:	87 95       	ror	r24
     654:	97 f9       	bld	r25, 7
     656:	08 95       	ret

00000658 <__mulsf3>:
     658:	0e 94 3f 03 	call	0x67e	; 0x67e <__mulsf3x>
     65c:	0c 94 b0 03 	jmp	0x760	; 0x760 <__fp_round>
     660:	0e 94 a2 03 	call	0x744	; 0x744 <__fp_pscA>
     664:	38 f0       	brcs	.+14     	; 0x674 <__mulsf3+0x1c>
     666:	0e 94 a9 03 	call	0x752	; 0x752 <__fp_pscB>
     66a:	20 f0       	brcs	.+8      	; 0x674 <__mulsf3+0x1c>
     66c:	95 23       	and	r25, r21
     66e:	11 f0       	breq	.+4      	; 0x674 <__mulsf3+0x1c>
     670:	0c 94 99 03 	jmp	0x732	; 0x732 <__fp_inf>
     674:	0c 94 9f 03 	jmp	0x73e	; 0x73e <__fp_nan>
     678:	11 24       	eor	r1, r1
     67a:	0c 94 e4 03 	jmp	0x7c8	; 0x7c8 <__fp_szero>

0000067e <__mulsf3x>:
     67e:	0e 94 c1 03 	call	0x782	; 0x782 <__fp_split3>
     682:	70 f3       	brcs	.-36     	; 0x660 <__mulsf3+0x8>

00000684 <__mulsf3_pse>:
     684:	95 9f       	mul	r25, r21
     686:	c1 f3       	breq	.-16     	; 0x678 <__mulsf3+0x20>
     688:	95 0f       	add	r25, r21
     68a:	50 e0       	ldi	r21, 0x00	; 0
     68c:	55 1f       	adc	r21, r21
     68e:	62 9f       	mul	r22, r18
     690:	f0 01       	movw	r30, r0
     692:	72 9f       	mul	r23, r18
     694:	bb 27       	eor	r27, r27
     696:	f0 0d       	add	r31, r0
     698:	b1 1d       	adc	r27, r1
     69a:	63 9f       	mul	r22, r19
     69c:	aa 27       	eor	r26, r26
     69e:	f0 0d       	add	r31, r0
     6a0:	b1 1d       	adc	r27, r1
     6a2:	aa 1f       	adc	r26, r26
     6a4:	64 9f       	mul	r22, r20
     6a6:	66 27       	eor	r22, r22
     6a8:	b0 0d       	add	r27, r0
     6aa:	a1 1d       	adc	r26, r1
     6ac:	66 1f       	adc	r22, r22
     6ae:	82 9f       	mul	r24, r18
     6b0:	22 27       	eor	r18, r18
     6b2:	b0 0d       	add	r27, r0
     6b4:	a1 1d       	adc	r26, r1
     6b6:	62 1f       	adc	r22, r18
     6b8:	73 9f       	mul	r23, r19
     6ba:	b0 0d       	add	r27, r0
     6bc:	a1 1d       	adc	r26, r1
     6be:	62 1f       	adc	r22, r18
     6c0:	83 9f       	mul	r24, r19
     6c2:	a0 0d       	add	r26, r0
     6c4:	61 1d       	adc	r22, r1
     6c6:	22 1f       	adc	r18, r18
     6c8:	74 9f       	mul	r23, r20
     6ca:	33 27       	eor	r19, r19
     6cc:	a0 0d       	add	r26, r0
     6ce:	61 1d       	adc	r22, r1
     6d0:	23 1f       	adc	r18, r19
     6d2:	84 9f       	mul	r24, r20
     6d4:	60 0d       	add	r22, r0
     6d6:	21 1d       	adc	r18, r1
     6d8:	82 2f       	mov	r24, r18
     6da:	76 2f       	mov	r23, r22
     6dc:	6a 2f       	mov	r22, r26
     6de:	11 24       	eor	r1, r1
     6e0:	9f 57       	subi	r25, 0x7F	; 127
     6e2:	50 40       	sbci	r21, 0x00	; 0
     6e4:	9a f0       	brmi	.+38     	; 0x70c <__mulsf3_pse+0x88>
     6e6:	f1 f0       	breq	.+60     	; 0x724 <__mulsf3_pse+0xa0>
     6e8:	88 23       	and	r24, r24
     6ea:	4a f0       	brmi	.+18     	; 0x6fe <__mulsf3_pse+0x7a>
     6ec:	ee 0f       	add	r30, r30
     6ee:	ff 1f       	adc	r31, r31
     6f0:	bb 1f       	adc	r27, r27
     6f2:	66 1f       	adc	r22, r22
     6f4:	77 1f       	adc	r23, r23
     6f6:	88 1f       	adc	r24, r24
     6f8:	91 50       	subi	r25, 0x01	; 1
     6fa:	50 40       	sbci	r21, 0x00	; 0
     6fc:	a9 f7       	brne	.-22     	; 0x6e8 <__mulsf3_pse+0x64>
     6fe:	9e 3f       	cpi	r25, 0xFE	; 254
     700:	51 05       	cpc	r21, r1
     702:	80 f0       	brcs	.+32     	; 0x724 <__mulsf3_pse+0xa0>
     704:	0c 94 99 03 	jmp	0x732	; 0x732 <__fp_inf>
     708:	0c 94 e4 03 	jmp	0x7c8	; 0x7c8 <__fp_szero>
     70c:	5f 3f       	cpi	r21, 0xFF	; 255
     70e:	e4 f3       	brlt	.-8      	; 0x708 <__mulsf3_pse+0x84>
     710:	98 3e       	cpi	r25, 0xE8	; 232
     712:	d4 f3       	brlt	.-12     	; 0x708 <__mulsf3_pse+0x84>
     714:	86 95       	lsr	r24
     716:	77 95       	ror	r23
     718:	67 95       	ror	r22
     71a:	b7 95       	ror	r27
     71c:	f7 95       	ror	r31
     71e:	e7 95       	ror	r30
     720:	9f 5f       	subi	r25, 0xFF	; 255
     722:	c1 f7       	brne	.-16     	; 0x714 <__mulsf3_pse+0x90>
     724:	fe 2b       	or	r31, r30
     726:	88 0f       	add	r24, r24
     728:	91 1d       	adc	r25, r1
     72a:	96 95       	lsr	r25
     72c:	87 95       	ror	r24
     72e:	97 f9       	bld	r25, 7
     730:	08 95       	ret

00000732 <__fp_inf>:
     732:	97 f9       	bld	r25, 7
     734:	9f 67       	ori	r25, 0x7F	; 127
     736:	80 e8       	ldi	r24, 0x80	; 128
     738:	70 e0       	ldi	r23, 0x00	; 0
     73a:	60 e0       	ldi	r22, 0x00	; 0
     73c:	08 95       	ret

0000073e <__fp_nan>:
     73e:	9f ef       	ldi	r25, 0xFF	; 255
     740:	80 ec       	ldi	r24, 0xC0	; 192
     742:	08 95       	ret

00000744 <__fp_pscA>:
     744:	00 24       	eor	r0, r0
     746:	0a 94       	dec	r0
     748:	16 16       	cp	r1, r22
     74a:	17 06       	cpc	r1, r23
     74c:	18 06       	cpc	r1, r24
     74e:	09 06       	cpc	r0, r25
     750:	08 95       	ret

00000752 <__fp_pscB>:
     752:	00 24       	eor	r0, r0
     754:	0a 94       	dec	r0
     756:	12 16       	cp	r1, r18
     758:	13 06       	cpc	r1, r19
     75a:	14 06       	cpc	r1, r20
     75c:	05 06       	cpc	r0, r21
     75e:	08 95       	ret

00000760 <__fp_round>:
     760:	09 2e       	mov	r0, r25
     762:	03 94       	inc	r0
     764:	00 0c       	add	r0, r0
     766:	11 f4       	brne	.+4      	; 0x76c <__fp_round+0xc>
     768:	88 23       	and	r24, r24
     76a:	52 f0       	brmi	.+20     	; 0x780 <__fp_round+0x20>
     76c:	bb 0f       	add	r27, r27
     76e:	40 f4       	brcc	.+16     	; 0x780 <__fp_round+0x20>
     770:	bf 2b       	or	r27, r31
     772:	11 f4       	brne	.+4      	; 0x778 <__fp_round+0x18>
     774:	60 ff       	sbrs	r22, 0
     776:	04 c0       	rjmp	.+8      	; 0x780 <__fp_round+0x20>
     778:	6f 5f       	subi	r22, 0xFF	; 255
     77a:	7f 4f       	sbci	r23, 0xFF	; 255
     77c:	8f 4f       	sbci	r24, 0xFF	; 255
     77e:	9f 4f       	sbci	r25, 0xFF	; 255
     780:	08 95       	ret

00000782 <__fp_split3>:
     782:	57 fd       	sbrc	r21, 7
     784:	90 58       	subi	r25, 0x80	; 128
     786:	44 0f       	add	r20, r20
     788:	55 1f       	adc	r21, r21
     78a:	59 f0       	breq	.+22     	; 0x7a2 <__fp_splitA+0x10>
     78c:	5f 3f       	cpi	r21, 0xFF	; 255
     78e:	71 f0       	breq	.+28     	; 0x7ac <__fp_splitA+0x1a>
     790:	47 95       	ror	r20

00000792 <__fp_splitA>:
     792:	88 0f       	add	r24, r24
     794:	97 fb       	bst	r25, 7
     796:	99 1f       	adc	r25, r25
     798:	61 f0       	breq	.+24     	; 0x7b2 <__fp_splitA+0x20>
     79a:	9f 3f       	cpi	r25, 0xFF	; 255
     79c:	79 f0       	breq	.+30     	; 0x7bc <__fp_splitA+0x2a>
     79e:	87 95       	ror	r24
     7a0:	08 95       	ret
     7a2:	12 16       	cp	r1, r18
     7a4:	13 06       	cpc	r1, r19
     7a6:	14 06       	cpc	r1, r20
     7a8:	55 1f       	adc	r21, r21
     7aa:	f2 cf       	rjmp	.-28     	; 0x790 <__fp_split3+0xe>
     7ac:	46 95       	lsr	r20
     7ae:	f1 df       	rcall	.-30     	; 0x792 <__fp_splitA>
     7b0:	08 c0       	rjmp	.+16     	; 0x7c2 <__fp_splitA+0x30>
     7b2:	16 16       	cp	r1, r22
     7b4:	17 06       	cpc	r1, r23
     7b6:	18 06       	cpc	r1, r24
     7b8:	99 1f       	adc	r25, r25
     7ba:	f1 cf       	rjmp	.-30     	; 0x79e <__fp_splitA+0xc>
     7bc:	86 95       	lsr	r24
     7be:	71 05       	cpc	r23, r1
     7c0:	61 05       	cpc	r22, r1
     7c2:	08 94       	sec
     7c4:	08 95       	ret

000007c6 <__fp_zero>:
     7c6:	e8 94       	clt

000007c8 <__fp_szero>:
     7c8:	bb 27       	eor	r27, r27
     7ca:	66 27       	eor	r22, r22
     7cc:	77 27       	eor	r23, r23
     7ce:	cb 01       	movw	r24, r22
     7d0:	97 f9       	bld	r25, 7
     7d2:	08 95       	ret

000007d4 <vfprintf>:
     7d4:	a0 e1       	ldi	r26, 0x10	; 16
     7d6:	b0 e0       	ldi	r27, 0x00	; 0
     7d8:	e0 ef       	ldi	r30, 0xF0	; 240
     7da:	f3 e0       	ldi	r31, 0x03	; 3
     7dc:	0c 94 67 07 	jmp	0xece	; 0xece <__prologue_saves__>
     7e0:	7c 01       	movw	r14, r24
     7e2:	1b 01       	movw	r2, r22
     7e4:	6a 01       	movw	r12, r20
     7e6:	fc 01       	movw	r30, r24
     7e8:	17 82       	std	Z+7, r1	; 0x07
     7ea:	16 82       	std	Z+6, r1	; 0x06
     7ec:	83 81       	ldd	r24, Z+3	; 0x03
     7ee:	81 ff       	sbrs	r24, 1
     7f0:	44 c3       	rjmp	.+1672   	; 0xe7a <__stack+0x57b>
     7f2:	9e 01       	movw	r18, r28
     7f4:	2f 5f       	subi	r18, 0xFF	; 255
     7f6:	3f 4f       	sbci	r19, 0xFF	; 255
     7f8:	39 01       	movw	r6, r18
     7fa:	f7 01       	movw	r30, r14
     7fc:	93 81       	ldd	r25, Z+3	; 0x03
     7fe:	f1 01       	movw	r30, r2
     800:	93 fd       	sbrc	r25, 3
     802:	85 91       	lpm	r24, Z+
     804:	93 ff       	sbrs	r25, 3
     806:	81 91       	ld	r24, Z+
     808:	1f 01       	movw	r2, r30
     80a:	88 23       	and	r24, r24
     80c:	09 f4       	brne	.+2      	; 0x810 <vfprintf+0x3c>
     80e:	31 c3       	rjmp	.+1634   	; 0xe72 <__stack+0x573>
     810:	85 32       	cpi	r24, 0x25	; 37
     812:	39 f4       	brne	.+14     	; 0x822 <vfprintf+0x4e>
     814:	93 fd       	sbrc	r25, 3
     816:	85 91       	lpm	r24, Z+
     818:	93 ff       	sbrs	r25, 3
     81a:	81 91       	ld	r24, Z+
     81c:	1f 01       	movw	r2, r30
     81e:	85 32       	cpi	r24, 0x25	; 37
     820:	39 f4       	brne	.+14     	; 0x830 <vfprintf+0x5c>
     822:	b7 01       	movw	r22, r14
     824:	90 e0       	ldi	r25, 0x00	; 0
     826:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     82a:	56 01       	movw	r10, r12
     82c:	65 01       	movw	r12, r10
     82e:	e5 cf       	rjmp	.-54     	; 0x7fa <vfprintf+0x26>
     830:	10 e0       	ldi	r17, 0x00	; 0
     832:	51 2c       	mov	r5, r1
     834:	91 2c       	mov	r9, r1
     836:	ff e1       	ldi	r31, 0x1F	; 31
     838:	f9 15       	cp	r31, r9
     83a:	d8 f0       	brcs	.+54     	; 0x872 <vfprintf+0x9e>
     83c:	8b 32       	cpi	r24, 0x2B	; 43
     83e:	79 f0       	breq	.+30     	; 0x85e <vfprintf+0x8a>
     840:	38 f4       	brcc	.+14     	; 0x850 <vfprintf+0x7c>
     842:	80 32       	cpi	r24, 0x20	; 32
     844:	79 f0       	breq	.+30     	; 0x864 <vfprintf+0x90>
     846:	83 32       	cpi	r24, 0x23	; 35
     848:	a1 f4       	brne	.+40     	; 0x872 <vfprintf+0x9e>
     84a:	f9 2d       	mov	r31, r9
     84c:	f0 61       	ori	r31, 0x10	; 16
     84e:	2e c0       	rjmp	.+92     	; 0x8ac <vfprintf+0xd8>
     850:	8d 32       	cpi	r24, 0x2D	; 45
     852:	61 f0       	breq	.+24     	; 0x86c <vfprintf+0x98>
     854:	80 33       	cpi	r24, 0x30	; 48
     856:	69 f4       	brne	.+26     	; 0x872 <vfprintf+0x9e>
     858:	29 2d       	mov	r18, r9
     85a:	21 60       	ori	r18, 0x01	; 1
     85c:	2d c0       	rjmp	.+90     	; 0x8b8 <vfprintf+0xe4>
     85e:	39 2d       	mov	r19, r9
     860:	32 60       	ori	r19, 0x02	; 2
     862:	93 2e       	mov	r9, r19
     864:	89 2d       	mov	r24, r9
     866:	84 60       	ori	r24, 0x04	; 4
     868:	98 2e       	mov	r9, r24
     86a:	2a c0       	rjmp	.+84     	; 0x8c0 <vfprintf+0xec>
     86c:	e9 2d       	mov	r30, r9
     86e:	e8 60       	ori	r30, 0x08	; 8
     870:	15 c0       	rjmp	.+42     	; 0x89c <vfprintf+0xc8>
     872:	97 fc       	sbrc	r9, 7
     874:	2d c0       	rjmp	.+90     	; 0x8d0 <vfprintf+0xfc>
     876:	20 ed       	ldi	r18, 0xD0	; 208
     878:	28 0f       	add	r18, r24
     87a:	2a 30       	cpi	r18, 0x0A	; 10
     87c:	88 f4       	brcc	.+34     	; 0x8a0 <vfprintf+0xcc>
     87e:	96 fe       	sbrs	r9, 6
     880:	06 c0       	rjmp	.+12     	; 0x88e <vfprintf+0xba>
     882:	3a e0       	ldi	r19, 0x0A	; 10
     884:	13 9f       	mul	r17, r19
     886:	20 0d       	add	r18, r0
     888:	11 24       	eor	r1, r1
     88a:	12 2f       	mov	r17, r18
     88c:	19 c0       	rjmp	.+50     	; 0x8c0 <vfprintf+0xec>
     88e:	8a e0       	ldi	r24, 0x0A	; 10
     890:	58 9e       	mul	r5, r24
     892:	20 0d       	add	r18, r0
     894:	11 24       	eor	r1, r1
     896:	52 2e       	mov	r5, r18
     898:	e9 2d       	mov	r30, r9
     89a:	e0 62       	ori	r30, 0x20	; 32
     89c:	9e 2e       	mov	r9, r30
     89e:	10 c0       	rjmp	.+32     	; 0x8c0 <vfprintf+0xec>
     8a0:	8e 32       	cpi	r24, 0x2E	; 46
     8a2:	31 f4       	brne	.+12     	; 0x8b0 <vfprintf+0xdc>
     8a4:	96 fc       	sbrc	r9, 6
     8a6:	e5 c2       	rjmp	.+1482   	; 0xe72 <__stack+0x573>
     8a8:	f9 2d       	mov	r31, r9
     8aa:	f0 64       	ori	r31, 0x40	; 64
     8ac:	9f 2e       	mov	r9, r31
     8ae:	08 c0       	rjmp	.+16     	; 0x8c0 <vfprintf+0xec>
     8b0:	8c 36       	cpi	r24, 0x6C	; 108
     8b2:	21 f4       	brne	.+8      	; 0x8bc <vfprintf+0xe8>
     8b4:	29 2d       	mov	r18, r9
     8b6:	20 68       	ori	r18, 0x80	; 128
     8b8:	92 2e       	mov	r9, r18
     8ba:	02 c0       	rjmp	.+4      	; 0x8c0 <vfprintf+0xec>
     8bc:	88 36       	cpi	r24, 0x68	; 104
     8be:	41 f4       	brne	.+16     	; 0x8d0 <vfprintf+0xfc>
     8c0:	f1 01       	movw	r30, r2
     8c2:	93 fd       	sbrc	r25, 3
     8c4:	85 91       	lpm	r24, Z+
     8c6:	93 ff       	sbrs	r25, 3
     8c8:	81 91       	ld	r24, Z+
     8ca:	1f 01       	movw	r2, r30
     8cc:	81 11       	cpse	r24, r1
     8ce:	b3 cf       	rjmp	.-154    	; 0x836 <vfprintf+0x62>
     8d0:	9b eb       	ldi	r25, 0xBB	; 187
     8d2:	98 0f       	add	r25, r24
     8d4:	93 30       	cpi	r25, 0x03	; 3
     8d6:	20 f4       	brcc	.+8      	; 0x8e0 <vfprintf+0x10c>
     8d8:	99 2d       	mov	r25, r9
     8da:	90 61       	ori	r25, 0x10	; 16
     8dc:	80 5e       	subi	r24, 0xE0	; 224
     8de:	07 c0       	rjmp	.+14     	; 0x8ee <vfprintf+0x11a>
     8e0:	9b e9       	ldi	r25, 0x9B	; 155
     8e2:	98 0f       	add	r25, r24
     8e4:	93 30       	cpi	r25, 0x03	; 3
     8e6:	08 f0       	brcs	.+2      	; 0x8ea <vfprintf+0x116>
     8e8:	66 c1       	rjmp	.+716    	; 0xbb6 <__stack+0x2b7>
     8ea:	99 2d       	mov	r25, r9
     8ec:	9f 7e       	andi	r25, 0xEF	; 239
     8ee:	96 ff       	sbrs	r25, 6
     8f0:	16 e0       	ldi	r17, 0x06	; 6
     8f2:	9f 73       	andi	r25, 0x3F	; 63
     8f4:	99 2e       	mov	r9, r25
     8f6:	85 36       	cpi	r24, 0x65	; 101
     8f8:	19 f4       	brne	.+6      	; 0x900 <__stack+0x1>
     8fa:	90 64       	ori	r25, 0x40	; 64
     8fc:	99 2e       	mov	r9, r25
     8fe:	08 c0       	rjmp	.+16     	; 0x910 <__stack+0x11>
     900:	86 36       	cpi	r24, 0x66	; 102
     902:	21 f4       	brne	.+8      	; 0x90c <__stack+0xd>
     904:	39 2f       	mov	r19, r25
     906:	30 68       	ori	r19, 0x80	; 128
     908:	93 2e       	mov	r9, r19
     90a:	02 c0       	rjmp	.+4      	; 0x910 <__stack+0x11>
     90c:	11 11       	cpse	r17, r1
     90e:	11 50       	subi	r17, 0x01	; 1
     910:	97 fe       	sbrs	r9, 7
     912:	07 c0       	rjmp	.+14     	; 0x922 <__stack+0x23>
     914:	1c 33       	cpi	r17, 0x3C	; 60
     916:	50 f4       	brcc	.+20     	; 0x92c <__stack+0x2d>
     918:	44 24       	eor	r4, r4
     91a:	43 94       	inc	r4
     91c:	41 0e       	add	r4, r17
     91e:	27 e0       	ldi	r18, 0x07	; 7
     920:	0b c0       	rjmp	.+22     	; 0x938 <__stack+0x39>
     922:	18 30       	cpi	r17, 0x08	; 8
     924:	38 f0       	brcs	.+14     	; 0x934 <__stack+0x35>
     926:	27 e0       	ldi	r18, 0x07	; 7
     928:	17 e0       	ldi	r17, 0x07	; 7
     92a:	05 c0       	rjmp	.+10     	; 0x936 <__stack+0x37>
     92c:	27 e0       	ldi	r18, 0x07	; 7
     92e:	9c e3       	ldi	r25, 0x3C	; 60
     930:	49 2e       	mov	r4, r25
     932:	02 c0       	rjmp	.+4      	; 0x938 <__stack+0x39>
     934:	21 2f       	mov	r18, r17
     936:	41 2c       	mov	r4, r1
     938:	56 01       	movw	r10, r12
     93a:	84 e0       	ldi	r24, 0x04	; 4
     93c:	a8 0e       	add	r10, r24
     93e:	b1 1c       	adc	r11, r1
     940:	f6 01       	movw	r30, r12
     942:	60 81       	ld	r22, Z
     944:	71 81       	ldd	r23, Z+1	; 0x01
     946:	82 81       	ldd	r24, Z+2	; 0x02
     948:	93 81       	ldd	r25, Z+3	; 0x03
     94a:	04 2d       	mov	r16, r4
     94c:	a3 01       	movw	r20, r6
     94e:	0e 94 9e 07 	call	0xf3c	; 0xf3c <__ftoa_engine>
     952:	6c 01       	movw	r12, r24
     954:	f9 81       	ldd	r31, Y+1	; 0x01
     956:	fc 87       	std	Y+12, r31	; 0x0c
     958:	f0 ff       	sbrs	r31, 0
     95a:	02 c0       	rjmp	.+4      	; 0x960 <__stack+0x61>
     95c:	f3 ff       	sbrs	r31, 3
     95e:	06 c0       	rjmp	.+12     	; 0x96c <__stack+0x6d>
     960:	91 fc       	sbrc	r9, 1
     962:	06 c0       	rjmp	.+12     	; 0x970 <__stack+0x71>
     964:	92 fe       	sbrs	r9, 2
     966:	06 c0       	rjmp	.+12     	; 0x974 <__stack+0x75>
     968:	00 e2       	ldi	r16, 0x20	; 32
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x77>
     96c:	0d e2       	ldi	r16, 0x2D	; 45
     96e:	03 c0       	rjmp	.+6      	; 0x976 <__stack+0x77>
     970:	0b e2       	ldi	r16, 0x2B	; 43
     972:	01 c0       	rjmp	.+2      	; 0x976 <__stack+0x77>
     974:	00 e0       	ldi	r16, 0x00	; 0
     976:	8c 85       	ldd	r24, Y+12	; 0x0c
     978:	8c 70       	andi	r24, 0x0C	; 12
     97a:	19 f0       	breq	.+6      	; 0x982 <__stack+0x83>
     97c:	01 11       	cpse	r16, r1
     97e:	5a c2       	rjmp	.+1204   	; 0xe34 <__stack+0x535>
     980:	9b c2       	rjmp	.+1334   	; 0xeb8 <__stack+0x5b9>
     982:	97 fe       	sbrs	r9, 7
     984:	10 c0       	rjmp	.+32     	; 0x9a6 <__stack+0xa7>
     986:	4c 0c       	add	r4, r12
     988:	fc 85       	ldd	r31, Y+12	; 0x0c
     98a:	f4 ff       	sbrs	r31, 4
     98c:	04 c0       	rjmp	.+8      	; 0x996 <__stack+0x97>
     98e:	8a 81       	ldd	r24, Y+2	; 0x02
     990:	81 33       	cpi	r24, 0x31	; 49
     992:	09 f4       	brne	.+2      	; 0x996 <__stack+0x97>
     994:	4a 94       	dec	r4
     996:	14 14       	cp	r1, r4
     998:	74 f5       	brge	.+92     	; 0x9f6 <__stack+0xf7>
     99a:	28 e0       	ldi	r18, 0x08	; 8
     99c:	24 15       	cp	r18, r4
     99e:	78 f5       	brcc	.+94     	; 0x9fe <__stack+0xff>
     9a0:	88 e0       	ldi	r24, 0x08	; 8
     9a2:	48 2e       	mov	r4, r24
     9a4:	2c c0       	rjmp	.+88     	; 0x9fe <__stack+0xff>
     9a6:	96 fc       	sbrc	r9, 6
     9a8:	2a c0       	rjmp	.+84     	; 0x9fe <__stack+0xff>
     9aa:	81 2f       	mov	r24, r17
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	8c 15       	cp	r24, r12
     9b0:	9d 05       	cpc	r25, r13
     9b2:	9c f0       	brlt	.+38     	; 0x9da <__stack+0xdb>
     9b4:	3c ef       	ldi	r19, 0xFC	; 252
     9b6:	c3 16       	cp	r12, r19
     9b8:	3f ef       	ldi	r19, 0xFF	; 255
     9ba:	d3 06       	cpc	r13, r19
     9bc:	74 f0       	brlt	.+28     	; 0x9da <__stack+0xdb>
     9be:	89 2d       	mov	r24, r9
     9c0:	80 68       	ori	r24, 0x80	; 128
     9c2:	98 2e       	mov	r9, r24
     9c4:	0a c0       	rjmp	.+20     	; 0x9da <__stack+0xdb>
     9c6:	e2 e0       	ldi	r30, 0x02	; 2
     9c8:	f0 e0       	ldi	r31, 0x00	; 0
     9ca:	ec 0f       	add	r30, r28
     9cc:	fd 1f       	adc	r31, r29
     9ce:	e1 0f       	add	r30, r17
     9d0:	f1 1d       	adc	r31, r1
     9d2:	80 81       	ld	r24, Z
     9d4:	80 33       	cpi	r24, 0x30	; 48
     9d6:	19 f4       	brne	.+6      	; 0x9de <__stack+0xdf>
     9d8:	11 50       	subi	r17, 0x01	; 1
     9da:	11 11       	cpse	r17, r1
     9dc:	f4 cf       	rjmp	.-24     	; 0x9c6 <__stack+0xc7>
     9de:	97 fe       	sbrs	r9, 7
     9e0:	0e c0       	rjmp	.+28     	; 0x9fe <__stack+0xff>
     9e2:	44 24       	eor	r4, r4
     9e4:	43 94       	inc	r4
     9e6:	41 0e       	add	r4, r17
     9e8:	81 2f       	mov	r24, r17
     9ea:	90 e0       	ldi	r25, 0x00	; 0
     9ec:	c8 16       	cp	r12, r24
     9ee:	d9 06       	cpc	r13, r25
     9f0:	2c f4       	brge	.+10     	; 0x9fc <__stack+0xfd>
     9f2:	1c 19       	sub	r17, r12
     9f4:	04 c0       	rjmp	.+8      	; 0x9fe <__stack+0xff>
     9f6:	44 24       	eor	r4, r4
     9f8:	43 94       	inc	r4
     9fa:	01 c0       	rjmp	.+2      	; 0x9fe <__stack+0xff>
     9fc:	10 e0       	ldi	r17, 0x00	; 0
     9fe:	97 fe       	sbrs	r9, 7
     a00:	06 c0       	rjmp	.+12     	; 0xa0e <__stack+0x10f>
     a02:	1c 14       	cp	r1, r12
     a04:	1d 04       	cpc	r1, r13
     a06:	34 f4       	brge	.+12     	; 0xa14 <__stack+0x115>
     a08:	c6 01       	movw	r24, r12
     a0a:	01 96       	adiw	r24, 0x01	; 1
     a0c:	05 c0       	rjmp	.+10     	; 0xa18 <__stack+0x119>
     a0e:	85 e0       	ldi	r24, 0x05	; 5
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	02 c0       	rjmp	.+4      	; 0xa18 <__stack+0x119>
     a14:	81 e0       	ldi	r24, 0x01	; 1
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	01 11       	cpse	r16, r1
     a1a:	01 96       	adiw	r24, 0x01	; 1
     a1c:	11 23       	and	r17, r17
     a1e:	31 f0       	breq	.+12     	; 0xa2c <__stack+0x12d>
     a20:	21 2f       	mov	r18, r17
     a22:	30 e0       	ldi	r19, 0x00	; 0
     a24:	2f 5f       	subi	r18, 0xFF	; 255
     a26:	3f 4f       	sbci	r19, 0xFF	; 255
     a28:	82 0f       	add	r24, r18
     a2a:	93 1f       	adc	r25, r19
     a2c:	25 2d       	mov	r18, r5
     a2e:	30 e0       	ldi	r19, 0x00	; 0
     a30:	82 17       	cp	r24, r18
     a32:	93 07       	cpc	r25, r19
     a34:	14 f4       	brge	.+4      	; 0xa3a <__stack+0x13b>
     a36:	58 1a       	sub	r5, r24
     a38:	01 c0       	rjmp	.+2      	; 0xa3c <__stack+0x13d>
     a3a:	51 2c       	mov	r5, r1
     a3c:	89 2d       	mov	r24, r9
     a3e:	89 70       	andi	r24, 0x09	; 9
     a40:	49 f4       	brne	.+18     	; 0xa54 <__stack+0x155>
     a42:	55 20       	and	r5, r5
     a44:	39 f0       	breq	.+14     	; 0xa54 <__stack+0x155>
     a46:	b7 01       	movw	r22, r14
     a48:	80 e2       	ldi	r24, 0x20	; 32
     a4a:	90 e0       	ldi	r25, 0x00	; 0
     a4c:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     a50:	5a 94       	dec	r5
     a52:	f7 cf       	rjmp	.-18     	; 0xa42 <__stack+0x143>
     a54:	00 23       	and	r16, r16
     a56:	29 f0       	breq	.+10     	; 0xa62 <__stack+0x163>
     a58:	b7 01       	movw	r22, r14
     a5a:	80 2f       	mov	r24, r16
     a5c:	90 e0       	ldi	r25, 0x00	; 0
     a5e:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     a62:	93 fc       	sbrc	r9, 3
     a64:	09 c0       	rjmp	.+18     	; 0xa78 <__stack+0x179>
     a66:	55 20       	and	r5, r5
     a68:	39 f0       	breq	.+14     	; 0xa78 <__stack+0x179>
     a6a:	b7 01       	movw	r22, r14
     a6c:	80 e3       	ldi	r24, 0x30	; 48
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     a74:	5a 94       	dec	r5
     a76:	f7 cf       	rjmp	.-18     	; 0xa66 <__stack+0x167>
     a78:	97 fe       	sbrs	r9, 7
     a7a:	4c c0       	rjmp	.+152    	; 0xb14 <__stack+0x215>
     a7c:	46 01       	movw	r8, r12
     a7e:	d7 fe       	sbrs	r13, 7
     a80:	02 c0       	rjmp	.+4      	; 0xa86 <__stack+0x187>
     a82:	81 2c       	mov	r8, r1
     a84:	91 2c       	mov	r9, r1
     a86:	c6 01       	movw	r24, r12
     a88:	88 19       	sub	r24, r8
     a8a:	99 09       	sbc	r25, r9
     a8c:	f3 01       	movw	r30, r6
     a8e:	e8 0f       	add	r30, r24
     a90:	f9 1f       	adc	r31, r25
     a92:	fe 87       	std	Y+14, r31	; 0x0e
     a94:	ed 87       	std	Y+13, r30	; 0x0d
     a96:	96 01       	movw	r18, r12
     a98:	24 19       	sub	r18, r4
     a9a:	31 09       	sbc	r19, r1
     a9c:	38 8b       	std	Y+16, r19	; 0x10
     a9e:	2f 87       	std	Y+15, r18	; 0x0f
     aa0:	01 2f       	mov	r16, r17
     aa2:	10 e0       	ldi	r17, 0x00	; 0
     aa4:	11 95       	neg	r17
     aa6:	01 95       	neg	r16
     aa8:	11 09       	sbc	r17, r1
     aaa:	3f ef       	ldi	r19, 0xFF	; 255
     aac:	83 16       	cp	r8, r19
     aae:	93 06       	cpc	r9, r19
     ab0:	29 f4       	brne	.+10     	; 0xabc <__stack+0x1bd>
     ab2:	b7 01       	movw	r22, r14
     ab4:	8e e2       	ldi	r24, 0x2E	; 46
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     abc:	c8 14       	cp	r12, r8
     abe:	d9 04       	cpc	r13, r9
     ac0:	4c f0       	brlt	.+18     	; 0xad4 <__stack+0x1d5>
     ac2:	8f 85       	ldd	r24, Y+15	; 0x0f
     ac4:	98 89       	ldd	r25, Y+16	; 0x10
     ac6:	88 15       	cp	r24, r8
     ac8:	99 05       	cpc	r25, r9
     aca:	24 f4       	brge	.+8      	; 0xad4 <__stack+0x1d5>
     acc:	ed 85       	ldd	r30, Y+13	; 0x0d
     ace:	fe 85       	ldd	r31, Y+14	; 0x0e
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	01 c0       	rjmp	.+2      	; 0xad6 <__stack+0x1d7>
     ad4:	80 e3       	ldi	r24, 0x30	; 48
     ad6:	f1 e0       	ldi	r31, 0x01	; 1
     ad8:	8f 1a       	sub	r8, r31
     ada:	91 08       	sbc	r9, r1
     adc:	2d 85       	ldd	r18, Y+13	; 0x0d
     ade:	3e 85       	ldd	r19, Y+14	; 0x0e
     ae0:	2f 5f       	subi	r18, 0xFF	; 255
     ae2:	3f 4f       	sbci	r19, 0xFF	; 255
     ae4:	3e 87       	std	Y+14, r19	; 0x0e
     ae6:	2d 87       	std	Y+13, r18	; 0x0d
     ae8:	80 16       	cp	r8, r16
     aea:	91 06       	cpc	r9, r17
     aec:	2c f0       	brlt	.+10     	; 0xaf8 <__stack+0x1f9>
     aee:	b7 01       	movw	r22, r14
     af0:	90 e0       	ldi	r25, 0x00	; 0
     af2:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     af6:	d9 cf       	rjmp	.-78     	; 0xaaa <__stack+0x1ab>
     af8:	c8 14       	cp	r12, r8
     afa:	d9 04       	cpc	r13, r9
     afc:	41 f4       	brne	.+16     	; 0xb0e <__stack+0x20f>
     afe:	9a 81       	ldd	r25, Y+2	; 0x02
     b00:	96 33       	cpi	r25, 0x36	; 54
     b02:	20 f4       	brcc	.+8      	; 0xb0c <__stack+0x20d>
     b04:	95 33       	cpi	r25, 0x35	; 53
     b06:	19 f4       	brne	.+6      	; 0xb0e <__stack+0x20f>
     b08:	3c 85       	ldd	r19, Y+12	; 0x0c
     b0a:	34 ff       	sbrs	r19, 4
     b0c:	81 e3       	ldi	r24, 0x31	; 49
     b0e:	b7 01       	movw	r22, r14
     b10:	90 e0       	ldi	r25, 0x00	; 0
     b12:	4e c0       	rjmp	.+156    	; 0xbb0 <__stack+0x2b1>
     b14:	8a 81       	ldd	r24, Y+2	; 0x02
     b16:	81 33       	cpi	r24, 0x31	; 49
     b18:	19 f0       	breq	.+6      	; 0xb20 <__stack+0x221>
     b1a:	9c 85       	ldd	r25, Y+12	; 0x0c
     b1c:	9f 7e       	andi	r25, 0xEF	; 239
     b1e:	9c 87       	std	Y+12, r25	; 0x0c
     b20:	b7 01       	movw	r22, r14
     b22:	90 e0       	ldi	r25, 0x00	; 0
     b24:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     b28:	11 11       	cpse	r17, r1
     b2a:	05 c0       	rjmp	.+10     	; 0xb36 <__stack+0x237>
     b2c:	94 fc       	sbrc	r9, 4
     b2e:	18 c0       	rjmp	.+48     	; 0xb60 <__stack+0x261>
     b30:	85 e6       	ldi	r24, 0x65	; 101
     b32:	90 e0       	ldi	r25, 0x00	; 0
     b34:	17 c0       	rjmp	.+46     	; 0xb64 <__stack+0x265>
     b36:	b7 01       	movw	r22, r14
     b38:	8e e2       	ldi	r24, 0x2E	; 46
     b3a:	90 e0       	ldi	r25, 0x00	; 0
     b3c:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     b40:	1e 5f       	subi	r17, 0xFE	; 254
     b42:	82 e0       	ldi	r24, 0x02	; 2
     b44:	01 e0       	ldi	r16, 0x01	; 1
     b46:	08 0f       	add	r16, r24
     b48:	f3 01       	movw	r30, r6
     b4a:	e8 0f       	add	r30, r24
     b4c:	f1 1d       	adc	r31, r1
     b4e:	80 81       	ld	r24, Z
     b50:	b7 01       	movw	r22, r14
     b52:	90 e0       	ldi	r25, 0x00	; 0
     b54:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     b58:	80 2f       	mov	r24, r16
     b5a:	01 13       	cpse	r16, r17
     b5c:	f3 cf       	rjmp	.-26     	; 0xb44 <__stack+0x245>
     b5e:	e6 cf       	rjmp	.-52     	; 0xb2c <__stack+0x22d>
     b60:	85 e4       	ldi	r24, 0x45	; 69
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	b7 01       	movw	r22, r14
     b66:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     b6a:	d7 fc       	sbrc	r13, 7
     b6c:	06 c0       	rjmp	.+12     	; 0xb7a <__stack+0x27b>
     b6e:	c1 14       	cp	r12, r1
     b70:	d1 04       	cpc	r13, r1
     b72:	41 f4       	brne	.+16     	; 0xb84 <__stack+0x285>
     b74:	ec 85       	ldd	r30, Y+12	; 0x0c
     b76:	e4 ff       	sbrs	r30, 4
     b78:	05 c0       	rjmp	.+10     	; 0xb84 <__stack+0x285>
     b7a:	d1 94       	neg	r13
     b7c:	c1 94       	neg	r12
     b7e:	d1 08       	sbc	r13, r1
     b80:	8d e2       	ldi	r24, 0x2D	; 45
     b82:	01 c0       	rjmp	.+2      	; 0xb86 <__stack+0x287>
     b84:	8b e2       	ldi	r24, 0x2B	; 43
     b86:	b7 01       	movw	r22, r14
     b88:	90 e0       	ldi	r25, 0x00	; 0
     b8a:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     b8e:	80 e3       	ldi	r24, 0x30	; 48
     b90:	2a e0       	ldi	r18, 0x0A	; 10
     b92:	c2 16       	cp	r12, r18
     b94:	d1 04       	cpc	r13, r1
     b96:	2c f0       	brlt	.+10     	; 0xba2 <__stack+0x2a3>
     b98:	8f 5f       	subi	r24, 0xFF	; 255
     b9a:	fa e0       	ldi	r31, 0x0A	; 10
     b9c:	cf 1a       	sub	r12, r31
     b9e:	d1 08       	sbc	r13, r1
     ba0:	f7 cf       	rjmp	.-18     	; 0xb90 <__stack+0x291>
     ba2:	b7 01       	movw	r22, r14
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     baa:	b7 01       	movw	r22, r14
     bac:	c6 01       	movw	r24, r12
     bae:	c0 96       	adiw	r24, 0x30	; 48
     bb0:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     bb4:	54 c1       	rjmp	.+680    	; 0xe5e <__stack+0x55f>
     bb6:	83 36       	cpi	r24, 0x63	; 99
     bb8:	31 f0       	breq	.+12     	; 0xbc6 <__stack+0x2c7>
     bba:	83 37       	cpi	r24, 0x73	; 115
     bbc:	79 f0       	breq	.+30     	; 0xbdc <__stack+0x2dd>
     bbe:	83 35       	cpi	r24, 0x53	; 83
     bc0:	09 f0       	breq	.+2      	; 0xbc4 <__stack+0x2c5>
     bc2:	56 c0       	rjmp	.+172    	; 0xc70 <__stack+0x371>
     bc4:	20 c0       	rjmp	.+64     	; 0xc06 <__stack+0x307>
     bc6:	56 01       	movw	r10, r12
     bc8:	32 e0       	ldi	r19, 0x02	; 2
     bca:	a3 0e       	add	r10, r19
     bcc:	b1 1c       	adc	r11, r1
     bce:	f6 01       	movw	r30, r12
     bd0:	80 81       	ld	r24, Z
     bd2:	89 83       	std	Y+1, r24	; 0x01
     bd4:	01 e0       	ldi	r16, 0x01	; 1
     bd6:	10 e0       	ldi	r17, 0x00	; 0
     bd8:	63 01       	movw	r12, r6
     bda:	12 c0       	rjmp	.+36     	; 0xc00 <__stack+0x301>
     bdc:	56 01       	movw	r10, r12
     bde:	f2 e0       	ldi	r31, 0x02	; 2
     be0:	af 0e       	add	r10, r31
     be2:	b1 1c       	adc	r11, r1
     be4:	f6 01       	movw	r30, r12
     be6:	c0 80       	ld	r12, Z
     be8:	d1 80       	ldd	r13, Z+1	; 0x01
     bea:	96 fe       	sbrs	r9, 6
     bec:	03 c0       	rjmp	.+6      	; 0xbf4 <__stack+0x2f5>
     bee:	61 2f       	mov	r22, r17
     bf0:	70 e0       	ldi	r23, 0x00	; 0
     bf2:	02 c0       	rjmp	.+4      	; 0xbf8 <__stack+0x2f9>
     bf4:	6f ef       	ldi	r22, 0xFF	; 255
     bf6:	7f ef       	ldi	r23, 0xFF	; 255
     bf8:	c6 01       	movw	r24, r12
     bfa:	0e 94 81 08 	call	0x1102	; 0x1102 <strnlen>
     bfe:	8c 01       	movw	r16, r24
     c00:	f9 2d       	mov	r31, r9
     c02:	ff 77       	andi	r31, 0x7F	; 127
     c04:	14 c0       	rjmp	.+40     	; 0xc2e <__stack+0x32f>
     c06:	56 01       	movw	r10, r12
     c08:	22 e0       	ldi	r18, 0x02	; 2
     c0a:	a2 0e       	add	r10, r18
     c0c:	b1 1c       	adc	r11, r1
     c0e:	f6 01       	movw	r30, r12
     c10:	c0 80       	ld	r12, Z
     c12:	d1 80       	ldd	r13, Z+1	; 0x01
     c14:	96 fe       	sbrs	r9, 6
     c16:	03 c0       	rjmp	.+6      	; 0xc1e <__stack+0x31f>
     c18:	61 2f       	mov	r22, r17
     c1a:	70 e0       	ldi	r23, 0x00	; 0
     c1c:	02 c0       	rjmp	.+4      	; 0xc22 <__stack+0x323>
     c1e:	6f ef       	ldi	r22, 0xFF	; 255
     c20:	7f ef       	ldi	r23, 0xFF	; 255
     c22:	c6 01       	movw	r24, r12
     c24:	0e 94 76 08 	call	0x10ec	; 0x10ec <strnlen_P>
     c28:	8c 01       	movw	r16, r24
     c2a:	f9 2d       	mov	r31, r9
     c2c:	f0 68       	ori	r31, 0x80	; 128
     c2e:	9f 2e       	mov	r9, r31
     c30:	f3 fd       	sbrc	r31, 3
     c32:	1a c0       	rjmp	.+52     	; 0xc68 <__stack+0x369>
     c34:	85 2d       	mov	r24, r5
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	08 17       	cp	r16, r24
     c3a:	19 07       	cpc	r17, r25
     c3c:	a8 f4       	brcc	.+42     	; 0xc68 <__stack+0x369>
     c3e:	b7 01       	movw	r22, r14
     c40:	80 e2       	ldi	r24, 0x20	; 32
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     c48:	5a 94       	dec	r5
     c4a:	f4 cf       	rjmp	.-24     	; 0xc34 <__stack+0x335>
     c4c:	f6 01       	movw	r30, r12
     c4e:	97 fc       	sbrc	r9, 7
     c50:	85 91       	lpm	r24, Z+
     c52:	97 fe       	sbrs	r9, 7
     c54:	81 91       	ld	r24, Z+
     c56:	6f 01       	movw	r12, r30
     c58:	b7 01       	movw	r22, r14
     c5a:	90 e0       	ldi	r25, 0x00	; 0
     c5c:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     c60:	51 10       	cpse	r5, r1
     c62:	5a 94       	dec	r5
     c64:	01 50       	subi	r16, 0x01	; 1
     c66:	11 09       	sbc	r17, r1
     c68:	01 15       	cp	r16, r1
     c6a:	11 05       	cpc	r17, r1
     c6c:	79 f7       	brne	.-34     	; 0xc4c <__stack+0x34d>
     c6e:	f7 c0       	rjmp	.+494    	; 0xe5e <__stack+0x55f>
     c70:	84 36       	cpi	r24, 0x64	; 100
     c72:	11 f0       	breq	.+4      	; 0xc78 <__stack+0x379>
     c74:	89 36       	cpi	r24, 0x69	; 105
     c76:	61 f5       	brne	.+88     	; 0xcd0 <__stack+0x3d1>
     c78:	56 01       	movw	r10, r12
     c7a:	97 fe       	sbrs	r9, 7
     c7c:	09 c0       	rjmp	.+18     	; 0xc90 <__stack+0x391>
     c7e:	24 e0       	ldi	r18, 0x04	; 4
     c80:	a2 0e       	add	r10, r18
     c82:	b1 1c       	adc	r11, r1
     c84:	f6 01       	movw	r30, r12
     c86:	60 81       	ld	r22, Z
     c88:	71 81       	ldd	r23, Z+1	; 0x01
     c8a:	82 81       	ldd	r24, Z+2	; 0x02
     c8c:	93 81       	ldd	r25, Z+3	; 0x03
     c8e:	0a c0       	rjmp	.+20     	; 0xca4 <__stack+0x3a5>
     c90:	f2 e0       	ldi	r31, 0x02	; 2
     c92:	af 0e       	add	r10, r31
     c94:	b1 1c       	adc	r11, r1
     c96:	f6 01       	movw	r30, r12
     c98:	60 81       	ld	r22, Z
     c9a:	71 81       	ldd	r23, Z+1	; 0x01
     c9c:	07 2e       	mov	r0, r23
     c9e:	00 0c       	add	r0, r0
     ca0:	88 0b       	sbc	r24, r24
     ca2:	99 0b       	sbc	r25, r25
     ca4:	f9 2d       	mov	r31, r9
     ca6:	ff 76       	andi	r31, 0x6F	; 111
     ca8:	9f 2e       	mov	r9, r31
     caa:	97 ff       	sbrs	r25, 7
     cac:	09 c0       	rjmp	.+18     	; 0xcc0 <__stack+0x3c1>
     cae:	90 95       	com	r25
     cb0:	80 95       	com	r24
     cb2:	70 95       	com	r23
     cb4:	61 95       	neg	r22
     cb6:	7f 4f       	sbci	r23, 0xFF	; 255
     cb8:	8f 4f       	sbci	r24, 0xFF	; 255
     cba:	9f 4f       	sbci	r25, 0xFF	; 255
     cbc:	f0 68       	ori	r31, 0x80	; 128
     cbe:	9f 2e       	mov	r9, r31
     cc0:	2a e0       	ldi	r18, 0x0A	; 10
     cc2:	30 e0       	ldi	r19, 0x00	; 0
     cc4:	a3 01       	movw	r20, r6
     cc6:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <__ultoa_invert>
     cca:	c8 2e       	mov	r12, r24
     ccc:	c6 18       	sub	r12, r6
     cce:	3f c0       	rjmp	.+126    	; 0xd4e <__stack+0x44f>
     cd0:	09 2d       	mov	r16, r9
     cd2:	85 37       	cpi	r24, 0x75	; 117
     cd4:	21 f4       	brne	.+8      	; 0xcde <__stack+0x3df>
     cd6:	0f 7e       	andi	r16, 0xEF	; 239
     cd8:	2a e0       	ldi	r18, 0x0A	; 10
     cda:	30 e0       	ldi	r19, 0x00	; 0
     cdc:	1d c0       	rjmp	.+58     	; 0xd18 <__stack+0x419>
     cde:	09 7f       	andi	r16, 0xF9	; 249
     ce0:	8f 36       	cpi	r24, 0x6F	; 111
     ce2:	91 f0       	breq	.+36     	; 0xd08 <__stack+0x409>
     ce4:	18 f4       	brcc	.+6      	; 0xcec <__stack+0x3ed>
     ce6:	88 35       	cpi	r24, 0x58	; 88
     ce8:	59 f0       	breq	.+22     	; 0xd00 <__stack+0x401>
     cea:	c3 c0       	rjmp	.+390    	; 0xe72 <__stack+0x573>
     cec:	80 37       	cpi	r24, 0x70	; 112
     cee:	19 f0       	breq	.+6      	; 0xcf6 <__stack+0x3f7>
     cf0:	88 37       	cpi	r24, 0x78	; 120
     cf2:	11 f0       	breq	.+4      	; 0xcf8 <__stack+0x3f9>
     cf4:	be c0       	rjmp	.+380    	; 0xe72 <__stack+0x573>
     cf6:	00 61       	ori	r16, 0x10	; 16
     cf8:	04 ff       	sbrs	r16, 4
     cfa:	09 c0       	rjmp	.+18     	; 0xd0e <__stack+0x40f>
     cfc:	04 60       	ori	r16, 0x04	; 4
     cfe:	07 c0       	rjmp	.+14     	; 0xd0e <__stack+0x40f>
     d00:	94 fe       	sbrs	r9, 4
     d02:	08 c0       	rjmp	.+16     	; 0xd14 <__stack+0x415>
     d04:	06 60       	ori	r16, 0x06	; 6
     d06:	06 c0       	rjmp	.+12     	; 0xd14 <__stack+0x415>
     d08:	28 e0       	ldi	r18, 0x08	; 8
     d0a:	30 e0       	ldi	r19, 0x00	; 0
     d0c:	05 c0       	rjmp	.+10     	; 0xd18 <__stack+0x419>
     d0e:	20 e1       	ldi	r18, 0x10	; 16
     d10:	30 e0       	ldi	r19, 0x00	; 0
     d12:	02 c0       	rjmp	.+4      	; 0xd18 <__stack+0x419>
     d14:	20 e1       	ldi	r18, 0x10	; 16
     d16:	32 e0       	ldi	r19, 0x02	; 2
     d18:	56 01       	movw	r10, r12
     d1a:	07 ff       	sbrs	r16, 7
     d1c:	09 c0       	rjmp	.+18     	; 0xd30 <__stack+0x431>
     d1e:	84 e0       	ldi	r24, 0x04	; 4
     d20:	a8 0e       	add	r10, r24
     d22:	b1 1c       	adc	r11, r1
     d24:	f6 01       	movw	r30, r12
     d26:	60 81       	ld	r22, Z
     d28:	71 81       	ldd	r23, Z+1	; 0x01
     d2a:	82 81       	ldd	r24, Z+2	; 0x02
     d2c:	93 81       	ldd	r25, Z+3	; 0x03
     d2e:	08 c0       	rjmp	.+16     	; 0xd40 <__stack+0x441>
     d30:	f2 e0       	ldi	r31, 0x02	; 2
     d32:	af 0e       	add	r10, r31
     d34:	b1 1c       	adc	r11, r1
     d36:	f6 01       	movw	r30, r12
     d38:	60 81       	ld	r22, Z
     d3a:	71 81       	ldd	r23, Z+1	; 0x01
     d3c:	80 e0       	ldi	r24, 0x00	; 0
     d3e:	90 e0       	ldi	r25, 0x00	; 0
     d40:	a3 01       	movw	r20, r6
     d42:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <__ultoa_invert>
     d46:	c8 2e       	mov	r12, r24
     d48:	c6 18       	sub	r12, r6
     d4a:	0f 77       	andi	r16, 0x7F	; 127
     d4c:	90 2e       	mov	r9, r16
     d4e:	96 fe       	sbrs	r9, 6
     d50:	0b c0       	rjmp	.+22     	; 0xd68 <__stack+0x469>
     d52:	09 2d       	mov	r16, r9
     d54:	0e 7f       	andi	r16, 0xFE	; 254
     d56:	c1 16       	cp	r12, r17
     d58:	50 f4       	brcc	.+20     	; 0xd6e <__stack+0x46f>
     d5a:	94 fe       	sbrs	r9, 4
     d5c:	0a c0       	rjmp	.+20     	; 0xd72 <__stack+0x473>
     d5e:	92 fc       	sbrc	r9, 2
     d60:	08 c0       	rjmp	.+16     	; 0xd72 <__stack+0x473>
     d62:	09 2d       	mov	r16, r9
     d64:	0e 7e       	andi	r16, 0xEE	; 238
     d66:	05 c0       	rjmp	.+10     	; 0xd72 <__stack+0x473>
     d68:	dc 2c       	mov	r13, r12
     d6a:	09 2d       	mov	r16, r9
     d6c:	03 c0       	rjmp	.+6      	; 0xd74 <__stack+0x475>
     d6e:	dc 2c       	mov	r13, r12
     d70:	01 c0       	rjmp	.+2      	; 0xd74 <__stack+0x475>
     d72:	d1 2e       	mov	r13, r17
     d74:	04 ff       	sbrs	r16, 4
     d76:	0d c0       	rjmp	.+26     	; 0xd92 <__stack+0x493>
     d78:	fe 01       	movw	r30, r28
     d7a:	ec 0d       	add	r30, r12
     d7c:	f1 1d       	adc	r31, r1
     d7e:	80 81       	ld	r24, Z
     d80:	80 33       	cpi	r24, 0x30	; 48
     d82:	11 f4       	brne	.+4      	; 0xd88 <__stack+0x489>
     d84:	09 7e       	andi	r16, 0xE9	; 233
     d86:	09 c0       	rjmp	.+18     	; 0xd9a <__stack+0x49b>
     d88:	02 ff       	sbrs	r16, 2
     d8a:	06 c0       	rjmp	.+12     	; 0xd98 <__stack+0x499>
     d8c:	d3 94       	inc	r13
     d8e:	d3 94       	inc	r13
     d90:	04 c0       	rjmp	.+8      	; 0xd9a <__stack+0x49b>
     d92:	80 2f       	mov	r24, r16
     d94:	86 78       	andi	r24, 0x86	; 134
     d96:	09 f0       	breq	.+2      	; 0xd9a <__stack+0x49b>
     d98:	d3 94       	inc	r13
     d9a:	03 fd       	sbrc	r16, 3
     d9c:	11 c0       	rjmp	.+34     	; 0xdc0 <__stack+0x4c1>
     d9e:	00 ff       	sbrs	r16, 0
     da0:	06 c0       	rjmp	.+12     	; 0xdae <__stack+0x4af>
     da2:	1c 2d       	mov	r17, r12
     da4:	d5 14       	cp	r13, r5
     da6:	80 f4       	brcc	.+32     	; 0xdc8 <__stack+0x4c9>
     da8:	15 0d       	add	r17, r5
     daa:	1d 19       	sub	r17, r13
     dac:	0d c0       	rjmp	.+26     	; 0xdc8 <__stack+0x4c9>
     dae:	d5 14       	cp	r13, r5
     db0:	58 f4       	brcc	.+22     	; 0xdc8 <__stack+0x4c9>
     db2:	b7 01       	movw	r22, r14
     db4:	80 e2       	ldi	r24, 0x20	; 32
     db6:	90 e0       	ldi	r25, 0x00	; 0
     db8:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     dbc:	d3 94       	inc	r13
     dbe:	f7 cf       	rjmp	.-18     	; 0xdae <__stack+0x4af>
     dc0:	d5 14       	cp	r13, r5
     dc2:	10 f4       	brcc	.+4      	; 0xdc8 <__stack+0x4c9>
     dc4:	5d 18       	sub	r5, r13
     dc6:	01 c0       	rjmp	.+2      	; 0xdca <__stack+0x4cb>
     dc8:	51 2c       	mov	r5, r1
     dca:	04 ff       	sbrs	r16, 4
     dcc:	10 c0       	rjmp	.+32     	; 0xdee <__stack+0x4ef>
     dce:	b7 01       	movw	r22, r14
     dd0:	80 e3       	ldi	r24, 0x30	; 48
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     dd8:	02 ff       	sbrs	r16, 2
     dda:	17 c0       	rjmp	.+46     	; 0xe0a <__stack+0x50b>
     ddc:	01 fd       	sbrc	r16, 1
     dde:	03 c0       	rjmp	.+6      	; 0xde6 <__stack+0x4e7>
     de0:	88 e7       	ldi	r24, 0x78	; 120
     de2:	90 e0       	ldi	r25, 0x00	; 0
     de4:	02 c0       	rjmp	.+4      	; 0xdea <__stack+0x4eb>
     de6:	88 e5       	ldi	r24, 0x58	; 88
     de8:	90 e0       	ldi	r25, 0x00	; 0
     dea:	b7 01       	movw	r22, r14
     dec:	0c c0       	rjmp	.+24     	; 0xe06 <__stack+0x507>
     dee:	80 2f       	mov	r24, r16
     df0:	86 78       	andi	r24, 0x86	; 134
     df2:	59 f0       	breq	.+22     	; 0xe0a <__stack+0x50b>
     df4:	01 ff       	sbrs	r16, 1
     df6:	02 c0       	rjmp	.+4      	; 0xdfc <__stack+0x4fd>
     df8:	8b e2       	ldi	r24, 0x2B	; 43
     dfa:	01 c0       	rjmp	.+2      	; 0xdfe <__stack+0x4ff>
     dfc:	80 e2       	ldi	r24, 0x20	; 32
     dfe:	07 fd       	sbrc	r16, 7
     e00:	8d e2       	ldi	r24, 0x2D	; 45
     e02:	b7 01       	movw	r22, r14
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     e0a:	c1 16       	cp	r12, r17
     e0c:	38 f4       	brcc	.+14     	; 0xe1c <__stack+0x51d>
     e0e:	b7 01       	movw	r22, r14
     e10:	80 e3       	ldi	r24, 0x30	; 48
     e12:	90 e0       	ldi	r25, 0x00	; 0
     e14:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     e18:	11 50       	subi	r17, 0x01	; 1
     e1a:	f7 cf       	rjmp	.-18     	; 0xe0a <__stack+0x50b>
     e1c:	ca 94       	dec	r12
     e1e:	f3 01       	movw	r30, r6
     e20:	ec 0d       	add	r30, r12
     e22:	f1 1d       	adc	r31, r1
     e24:	80 81       	ld	r24, Z
     e26:	b7 01       	movw	r22, r14
     e28:	90 e0       	ldi	r25, 0x00	; 0
     e2a:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     e2e:	c1 10       	cpse	r12, r1
     e30:	f5 cf       	rjmp	.-22     	; 0xe1c <__stack+0x51d>
     e32:	15 c0       	rjmp	.+42     	; 0xe5e <__stack+0x55f>
     e34:	f4 e0       	ldi	r31, 0x04	; 4
     e36:	f5 15       	cp	r31, r5
     e38:	60 f5       	brcc	.+88     	; 0xe92 <__stack+0x593>
     e3a:	84 e0       	ldi	r24, 0x04	; 4
     e3c:	58 1a       	sub	r5, r24
     e3e:	93 fe       	sbrs	r9, 3
     e40:	1f c0       	rjmp	.+62     	; 0xe80 <__stack+0x581>
     e42:	01 11       	cpse	r16, r1
     e44:	27 c0       	rjmp	.+78     	; 0xe94 <__stack+0x595>
     e46:	2c 85       	ldd	r18, Y+12	; 0x0c
     e48:	23 ff       	sbrs	r18, 3
     e4a:	2a c0       	rjmp	.+84     	; 0xea0 <__stack+0x5a1>
     e4c:	08 e6       	ldi	r16, 0x68	; 104
     e4e:	10 e0       	ldi	r17, 0x00	; 0
     e50:	39 2d       	mov	r19, r9
     e52:	30 71       	andi	r19, 0x10	; 16
     e54:	93 2e       	mov	r9, r19
     e56:	f8 01       	movw	r30, r16
     e58:	84 91       	lpm	r24, Z
     e5a:	81 11       	cpse	r24, r1
     e5c:	24 c0       	rjmp	.+72     	; 0xea6 <__stack+0x5a7>
     e5e:	55 20       	and	r5, r5
     e60:	09 f4       	brne	.+2      	; 0xe64 <__stack+0x565>
     e62:	e4 cc       	rjmp	.-1592   	; 0x82c <vfprintf+0x58>
     e64:	b7 01       	movw	r22, r14
     e66:	80 e2       	ldi	r24, 0x20	; 32
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     e6e:	5a 94       	dec	r5
     e70:	f6 cf       	rjmp	.-20     	; 0xe5e <__stack+0x55f>
     e72:	f7 01       	movw	r30, r14
     e74:	86 81       	ldd	r24, Z+6	; 0x06
     e76:	97 81       	ldd	r25, Z+7	; 0x07
     e78:	26 c0       	rjmp	.+76     	; 0xec6 <__stack+0x5c7>
     e7a:	8f ef       	ldi	r24, 0xFF	; 255
     e7c:	9f ef       	ldi	r25, 0xFF	; 255
     e7e:	23 c0       	rjmp	.+70     	; 0xec6 <__stack+0x5c7>
     e80:	b7 01       	movw	r22, r14
     e82:	80 e2       	ldi	r24, 0x20	; 32
     e84:	90 e0       	ldi	r25, 0x00	; 0
     e86:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     e8a:	5a 94       	dec	r5
     e8c:	51 10       	cpse	r5, r1
     e8e:	f8 cf       	rjmp	.-16     	; 0xe80 <__stack+0x581>
     e90:	d8 cf       	rjmp	.-80     	; 0xe42 <__stack+0x543>
     e92:	51 2c       	mov	r5, r1
     e94:	b7 01       	movw	r22, r14
     e96:	80 2f       	mov	r24, r16
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     e9e:	d3 cf       	rjmp	.-90     	; 0xe46 <__stack+0x547>
     ea0:	0c e6       	ldi	r16, 0x6C	; 108
     ea2:	10 e0       	ldi	r17, 0x00	; 0
     ea4:	d5 cf       	rjmp	.-86     	; 0xe50 <__stack+0x551>
     ea6:	91 10       	cpse	r9, r1
     ea8:	80 52       	subi	r24, 0x20	; 32
     eaa:	b7 01       	movw	r22, r14
     eac:	90 e0       	ldi	r25, 0x00	; 0
     eae:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     eb2:	0f 5f       	subi	r16, 0xFF	; 255
     eb4:	1f 4f       	sbci	r17, 0xFF	; 255
     eb6:	cf cf       	rjmp	.-98     	; 0xe56 <__stack+0x557>
     eb8:	23 e0       	ldi	r18, 0x03	; 3
     eba:	25 15       	cp	r18, r5
     ebc:	10 f4       	brcc	.+4      	; 0xec2 <__stack+0x5c3>
     ebe:	83 e0       	ldi	r24, 0x03	; 3
     ec0:	bd cf       	rjmp	.-134    	; 0xe3c <__stack+0x53d>
     ec2:	51 2c       	mov	r5, r1
     ec4:	c0 cf       	rjmp	.-128    	; 0xe46 <__stack+0x547>
     ec6:	60 96       	adiw	r28, 0x10	; 16
     ec8:	e2 e1       	ldi	r30, 0x12	; 18
     eca:	0c 94 83 07 	jmp	0xf06	; 0xf06 <__epilogue_restores__>

00000ece <__prologue_saves__>:
     ece:	2f 92       	push	r2
     ed0:	3f 92       	push	r3
     ed2:	4f 92       	push	r4
     ed4:	5f 92       	push	r5
     ed6:	6f 92       	push	r6
     ed8:	7f 92       	push	r7
     eda:	8f 92       	push	r8
     edc:	9f 92       	push	r9
     ede:	af 92       	push	r10
     ee0:	bf 92       	push	r11
     ee2:	cf 92       	push	r12
     ee4:	df 92       	push	r13
     ee6:	ef 92       	push	r14
     ee8:	ff 92       	push	r15
     eea:	0f 93       	push	r16
     eec:	1f 93       	push	r17
     eee:	cf 93       	push	r28
     ef0:	df 93       	push	r29
     ef2:	cd b7       	in	r28, 0x3d	; 61
     ef4:	de b7       	in	r29, 0x3e	; 62
     ef6:	ca 1b       	sub	r28, r26
     ef8:	db 0b       	sbc	r29, r27
     efa:	0f b6       	in	r0, 0x3f	; 63
     efc:	f8 94       	cli
     efe:	de bf       	out	0x3e, r29	; 62
     f00:	0f be       	out	0x3f, r0	; 63
     f02:	cd bf       	out	0x3d, r28	; 61
     f04:	09 94       	ijmp

00000f06 <__epilogue_restores__>:
     f06:	2a 88       	ldd	r2, Y+18	; 0x12
     f08:	39 88       	ldd	r3, Y+17	; 0x11
     f0a:	48 88       	ldd	r4, Y+16	; 0x10
     f0c:	5f 84       	ldd	r5, Y+15	; 0x0f
     f0e:	6e 84       	ldd	r6, Y+14	; 0x0e
     f10:	7d 84       	ldd	r7, Y+13	; 0x0d
     f12:	8c 84       	ldd	r8, Y+12	; 0x0c
     f14:	9b 84       	ldd	r9, Y+11	; 0x0b
     f16:	aa 84       	ldd	r10, Y+10	; 0x0a
     f18:	b9 84       	ldd	r11, Y+9	; 0x09
     f1a:	c8 84       	ldd	r12, Y+8	; 0x08
     f1c:	df 80       	ldd	r13, Y+7	; 0x07
     f1e:	ee 80       	ldd	r14, Y+6	; 0x06
     f20:	fd 80       	ldd	r15, Y+5	; 0x05
     f22:	0c 81       	ldd	r16, Y+4	; 0x04
     f24:	1b 81       	ldd	r17, Y+3	; 0x03
     f26:	aa 81       	ldd	r26, Y+2	; 0x02
     f28:	b9 81       	ldd	r27, Y+1	; 0x01
     f2a:	ce 0f       	add	r28, r30
     f2c:	d1 1d       	adc	r29, r1
     f2e:	0f b6       	in	r0, 0x3f	; 63
     f30:	f8 94       	cli
     f32:	de bf       	out	0x3e, r29	; 62
     f34:	0f be       	out	0x3f, r0	; 63
     f36:	cd bf       	out	0x3d, r28	; 61
     f38:	ed 01       	movw	r28, r26
     f3a:	08 95       	ret

00000f3c <__ftoa_engine>:
     f3c:	28 30       	cpi	r18, 0x08	; 8
     f3e:	08 f0       	brcs	.+2      	; 0xf42 <__ftoa_engine+0x6>
     f40:	27 e0       	ldi	r18, 0x07	; 7
     f42:	33 27       	eor	r19, r19
     f44:	da 01       	movw	r26, r20
     f46:	99 0f       	add	r25, r25
     f48:	31 1d       	adc	r19, r1
     f4a:	87 fd       	sbrc	r24, 7
     f4c:	91 60       	ori	r25, 0x01	; 1
     f4e:	00 96       	adiw	r24, 0x00	; 0
     f50:	61 05       	cpc	r22, r1
     f52:	71 05       	cpc	r23, r1
     f54:	39 f4       	brne	.+14     	; 0xf64 <__ftoa_engine+0x28>
     f56:	32 60       	ori	r19, 0x02	; 2
     f58:	2e 5f       	subi	r18, 0xFE	; 254
     f5a:	3d 93       	st	X+, r19
     f5c:	30 e3       	ldi	r19, 0x30	; 48
     f5e:	2a 95       	dec	r18
     f60:	e1 f7       	brne	.-8      	; 0xf5a <__ftoa_engine+0x1e>
     f62:	08 95       	ret
     f64:	9f 3f       	cpi	r25, 0xFF	; 255
     f66:	30 f0       	brcs	.+12     	; 0xf74 <__ftoa_engine+0x38>
     f68:	80 38       	cpi	r24, 0x80	; 128
     f6a:	71 05       	cpc	r23, r1
     f6c:	61 05       	cpc	r22, r1
     f6e:	09 f0       	breq	.+2      	; 0xf72 <__ftoa_engine+0x36>
     f70:	3c 5f       	subi	r19, 0xFC	; 252
     f72:	3c 5f       	subi	r19, 0xFC	; 252
     f74:	3d 93       	st	X+, r19
     f76:	91 30       	cpi	r25, 0x01	; 1
     f78:	08 f0       	brcs	.+2      	; 0xf7c <__ftoa_engine+0x40>
     f7a:	80 68       	ori	r24, 0x80	; 128
     f7c:	91 1d       	adc	r25, r1
     f7e:	df 93       	push	r29
     f80:	cf 93       	push	r28
     f82:	1f 93       	push	r17
     f84:	0f 93       	push	r16
     f86:	ff 92       	push	r15
     f88:	ef 92       	push	r14
     f8a:	19 2f       	mov	r17, r25
     f8c:	98 7f       	andi	r25, 0xF8	; 248
     f8e:	96 95       	lsr	r25
     f90:	e9 2f       	mov	r30, r25
     f92:	96 95       	lsr	r25
     f94:	96 95       	lsr	r25
     f96:	e9 0f       	add	r30, r25
     f98:	ff 27       	eor	r31, r31
     f9a:	e6 53       	subi	r30, 0x36	; 54
     f9c:	ff 4f       	sbci	r31, 0xFF	; 255
     f9e:	99 27       	eor	r25, r25
     fa0:	33 27       	eor	r19, r19
     fa2:	ee 24       	eor	r14, r14
     fa4:	ff 24       	eor	r15, r15
     fa6:	a7 01       	movw	r20, r14
     fa8:	e7 01       	movw	r28, r14
     faa:	05 90       	lpm	r0, Z+
     fac:	08 94       	sec
     fae:	07 94       	ror	r0
     fb0:	28 f4       	brcc	.+10     	; 0xfbc <__ftoa_engine+0x80>
     fb2:	36 0f       	add	r19, r22
     fb4:	e7 1e       	adc	r14, r23
     fb6:	f8 1e       	adc	r15, r24
     fb8:	49 1f       	adc	r20, r25
     fba:	51 1d       	adc	r21, r1
     fbc:	66 0f       	add	r22, r22
     fbe:	77 1f       	adc	r23, r23
     fc0:	88 1f       	adc	r24, r24
     fc2:	99 1f       	adc	r25, r25
     fc4:	06 94       	lsr	r0
     fc6:	a1 f7       	brne	.-24     	; 0xfb0 <__ftoa_engine+0x74>
     fc8:	05 90       	lpm	r0, Z+
     fca:	07 94       	ror	r0
     fcc:	28 f4       	brcc	.+10     	; 0xfd8 <__ftoa_engine+0x9c>
     fce:	e7 0e       	add	r14, r23
     fd0:	f8 1e       	adc	r15, r24
     fd2:	49 1f       	adc	r20, r25
     fd4:	56 1f       	adc	r21, r22
     fd6:	c1 1d       	adc	r28, r1
     fd8:	77 0f       	add	r23, r23
     fda:	88 1f       	adc	r24, r24
     fdc:	99 1f       	adc	r25, r25
     fde:	66 1f       	adc	r22, r22
     fe0:	06 94       	lsr	r0
     fe2:	a1 f7       	brne	.-24     	; 0xfcc <__ftoa_engine+0x90>
     fe4:	05 90       	lpm	r0, Z+
     fe6:	07 94       	ror	r0
     fe8:	28 f4       	brcc	.+10     	; 0xff4 <__ftoa_engine+0xb8>
     fea:	f8 0e       	add	r15, r24
     fec:	49 1f       	adc	r20, r25
     fee:	56 1f       	adc	r21, r22
     ff0:	c7 1f       	adc	r28, r23
     ff2:	d1 1d       	adc	r29, r1
     ff4:	88 0f       	add	r24, r24
     ff6:	99 1f       	adc	r25, r25
     ff8:	66 1f       	adc	r22, r22
     ffa:	77 1f       	adc	r23, r23
     ffc:	06 94       	lsr	r0
     ffe:	a1 f7       	brne	.-24     	; 0xfe8 <__ftoa_engine+0xac>
    1000:	05 90       	lpm	r0, Z+
    1002:	07 94       	ror	r0
    1004:	20 f4       	brcc	.+8      	; 0x100e <__ftoa_engine+0xd2>
    1006:	49 0f       	add	r20, r25
    1008:	56 1f       	adc	r21, r22
    100a:	c7 1f       	adc	r28, r23
    100c:	d8 1f       	adc	r29, r24
    100e:	99 0f       	add	r25, r25
    1010:	66 1f       	adc	r22, r22
    1012:	77 1f       	adc	r23, r23
    1014:	88 1f       	adc	r24, r24
    1016:	06 94       	lsr	r0
    1018:	a9 f7       	brne	.-22     	; 0x1004 <__ftoa_engine+0xc8>
    101a:	84 91       	lpm	r24, Z
    101c:	10 95       	com	r17
    101e:	17 70       	andi	r17, 0x07	; 7
    1020:	41 f0       	breq	.+16     	; 0x1032 <__ftoa_engine+0xf6>
    1022:	d6 95       	lsr	r29
    1024:	c7 95       	ror	r28
    1026:	57 95       	ror	r21
    1028:	47 95       	ror	r20
    102a:	f7 94       	ror	r15
    102c:	e7 94       	ror	r14
    102e:	1a 95       	dec	r17
    1030:	c1 f7       	brne	.-16     	; 0x1022 <__ftoa_engine+0xe6>
    1032:	e0 e7       	ldi	r30, 0x70	; 112
    1034:	f0 e0       	ldi	r31, 0x00	; 0
    1036:	68 94       	set
    1038:	15 90       	lpm	r1, Z+
    103a:	15 91       	lpm	r17, Z+
    103c:	35 91       	lpm	r19, Z+
    103e:	65 91       	lpm	r22, Z+
    1040:	95 91       	lpm	r25, Z+
    1042:	05 90       	lpm	r0, Z+
    1044:	7f e2       	ldi	r23, 0x2F	; 47
    1046:	73 95       	inc	r23
    1048:	e1 18       	sub	r14, r1
    104a:	f1 0a       	sbc	r15, r17
    104c:	43 0b       	sbc	r20, r19
    104e:	56 0b       	sbc	r21, r22
    1050:	c9 0b       	sbc	r28, r25
    1052:	d0 09       	sbc	r29, r0
    1054:	c0 f7       	brcc	.-16     	; 0x1046 <__ftoa_engine+0x10a>
    1056:	e1 0c       	add	r14, r1
    1058:	f1 1e       	adc	r15, r17
    105a:	43 1f       	adc	r20, r19
    105c:	56 1f       	adc	r21, r22
    105e:	c9 1f       	adc	r28, r25
    1060:	d0 1d       	adc	r29, r0
    1062:	7e f4       	brtc	.+30     	; 0x1082 <__ftoa_engine+0x146>
    1064:	70 33       	cpi	r23, 0x30	; 48
    1066:	11 f4       	brne	.+4      	; 0x106c <__ftoa_engine+0x130>
    1068:	8a 95       	dec	r24
    106a:	e6 cf       	rjmp	.-52     	; 0x1038 <__ftoa_engine+0xfc>
    106c:	e8 94       	clt
    106e:	01 50       	subi	r16, 0x01	; 1
    1070:	30 f0       	brcs	.+12     	; 0x107e <__ftoa_engine+0x142>
    1072:	08 0f       	add	r16, r24
    1074:	0a f4       	brpl	.+2      	; 0x1078 <__ftoa_engine+0x13c>
    1076:	00 27       	eor	r16, r16
    1078:	02 17       	cp	r16, r18
    107a:	08 f4       	brcc	.+2      	; 0x107e <__ftoa_engine+0x142>
    107c:	20 2f       	mov	r18, r16
    107e:	23 95       	inc	r18
    1080:	02 2f       	mov	r16, r18
    1082:	7a 33       	cpi	r23, 0x3A	; 58
    1084:	28 f0       	brcs	.+10     	; 0x1090 <__ftoa_engine+0x154>
    1086:	79 e3       	ldi	r23, 0x39	; 57
    1088:	7d 93       	st	X+, r23
    108a:	2a 95       	dec	r18
    108c:	e9 f7       	brne	.-6      	; 0x1088 <__ftoa_engine+0x14c>
    108e:	10 c0       	rjmp	.+32     	; 0x10b0 <__ftoa_engine+0x174>
    1090:	7d 93       	st	X+, r23
    1092:	2a 95       	dec	r18
    1094:	89 f6       	brne	.-94     	; 0x1038 <__ftoa_engine+0xfc>
    1096:	06 94       	lsr	r0
    1098:	97 95       	ror	r25
    109a:	67 95       	ror	r22
    109c:	37 95       	ror	r19
    109e:	17 95       	ror	r17
    10a0:	17 94       	ror	r1
    10a2:	e1 18       	sub	r14, r1
    10a4:	f1 0a       	sbc	r15, r17
    10a6:	43 0b       	sbc	r20, r19
    10a8:	56 0b       	sbc	r21, r22
    10aa:	c9 0b       	sbc	r28, r25
    10ac:	d0 09       	sbc	r29, r0
    10ae:	98 f0       	brcs	.+38     	; 0x10d6 <__ftoa_engine+0x19a>
    10b0:	23 95       	inc	r18
    10b2:	7e 91       	ld	r23, -X
    10b4:	73 95       	inc	r23
    10b6:	7a 33       	cpi	r23, 0x3A	; 58
    10b8:	08 f0       	brcs	.+2      	; 0x10bc <__ftoa_engine+0x180>
    10ba:	70 e3       	ldi	r23, 0x30	; 48
    10bc:	7c 93       	st	X, r23
    10be:	20 13       	cpse	r18, r16
    10c0:	b8 f7       	brcc	.-18     	; 0x10b0 <__ftoa_engine+0x174>
    10c2:	7e 91       	ld	r23, -X
    10c4:	70 61       	ori	r23, 0x10	; 16
    10c6:	7d 93       	st	X+, r23
    10c8:	30 f0       	brcs	.+12     	; 0x10d6 <__ftoa_engine+0x19a>
    10ca:	83 95       	inc	r24
    10cc:	71 e3       	ldi	r23, 0x31	; 49
    10ce:	7d 93       	st	X+, r23
    10d0:	70 e3       	ldi	r23, 0x30	; 48
    10d2:	2a 95       	dec	r18
    10d4:	e1 f7       	brne	.-8      	; 0x10ce <__ftoa_engine+0x192>
    10d6:	11 24       	eor	r1, r1
    10d8:	ef 90       	pop	r14
    10da:	ff 90       	pop	r15
    10dc:	0f 91       	pop	r16
    10de:	1f 91       	pop	r17
    10e0:	cf 91       	pop	r28
    10e2:	df 91       	pop	r29
    10e4:	99 27       	eor	r25, r25
    10e6:	87 fd       	sbrc	r24, 7
    10e8:	90 95       	com	r25
    10ea:	08 95       	ret

000010ec <strnlen_P>:
    10ec:	fc 01       	movw	r30, r24
    10ee:	05 90       	lpm	r0, Z+
    10f0:	61 50       	subi	r22, 0x01	; 1
    10f2:	70 40       	sbci	r23, 0x00	; 0
    10f4:	01 10       	cpse	r0, r1
    10f6:	d8 f7       	brcc	.-10     	; 0x10ee <strnlen_P+0x2>
    10f8:	80 95       	com	r24
    10fa:	90 95       	com	r25
    10fc:	8e 0f       	add	r24, r30
    10fe:	9f 1f       	adc	r25, r31
    1100:	08 95       	ret

00001102 <strnlen>:
    1102:	fc 01       	movw	r30, r24
    1104:	61 50       	subi	r22, 0x01	; 1
    1106:	70 40       	sbci	r23, 0x00	; 0
    1108:	01 90       	ld	r0, Z+
    110a:	01 10       	cpse	r0, r1
    110c:	d8 f7       	brcc	.-10     	; 0x1104 <strnlen+0x2>
    110e:	80 95       	com	r24
    1110:	90 95       	com	r25
    1112:	8e 0f       	add	r24, r30
    1114:	9f 1f       	adc	r25, r31
    1116:	08 95       	ret

00001118 <fputc>:
    1118:	0f 93       	push	r16
    111a:	1f 93       	push	r17
    111c:	cf 93       	push	r28
    111e:	df 93       	push	r29
    1120:	fb 01       	movw	r30, r22
    1122:	23 81       	ldd	r18, Z+3	; 0x03
    1124:	21 fd       	sbrc	r18, 1
    1126:	03 c0       	rjmp	.+6      	; 0x112e <fputc+0x16>
    1128:	8f ef       	ldi	r24, 0xFF	; 255
    112a:	9f ef       	ldi	r25, 0xFF	; 255
    112c:	2c c0       	rjmp	.+88     	; 0x1186 <fputc+0x6e>
    112e:	22 ff       	sbrs	r18, 2
    1130:	16 c0       	rjmp	.+44     	; 0x115e <fputc+0x46>
    1132:	46 81       	ldd	r20, Z+6	; 0x06
    1134:	57 81       	ldd	r21, Z+7	; 0x07
    1136:	24 81       	ldd	r18, Z+4	; 0x04
    1138:	35 81       	ldd	r19, Z+5	; 0x05
    113a:	42 17       	cp	r20, r18
    113c:	53 07       	cpc	r21, r19
    113e:	44 f4       	brge	.+16     	; 0x1150 <fputc+0x38>
    1140:	a0 81       	ld	r26, Z
    1142:	b1 81       	ldd	r27, Z+1	; 0x01
    1144:	9d 01       	movw	r18, r26
    1146:	2f 5f       	subi	r18, 0xFF	; 255
    1148:	3f 4f       	sbci	r19, 0xFF	; 255
    114a:	31 83       	std	Z+1, r19	; 0x01
    114c:	20 83       	st	Z, r18
    114e:	8c 93       	st	X, r24
    1150:	26 81       	ldd	r18, Z+6	; 0x06
    1152:	37 81       	ldd	r19, Z+7	; 0x07
    1154:	2f 5f       	subi	r18, 0xFF	; 255
    1156:	3f 4f       	sbci	r19, 0xFF	; 255
    1158:	37 83       	std	Z+7, r19	; 0x07
    115a:	26 83       	std	Z+6, r18	; 0x06
    115c:	14 c0       	rjmp	.+40     	; 0x1186 <fputc+0x6e>
    115e:	8b 01       	movw	r16, r22
    1160:	ec 01       	movw	r28, r24
    1162:	fb 01       	movw	r30, r22
    1164:	00 84       	ldd	r0, Z+8	; 0x08
    1166:	f1 85       	ldd	r31, Z+9	; 0x09
    1168:	e0 2d       	mov	r30, r0
    116a:	09 95       	icall
    116c:	89 2b       	or	r24, r25
    116e:	e1 f6       	brne	.-72     	; 0x1128 <fputc+0x10>
    1170:	d8 01       	movw	r26, r16
    1172:	16 96       	adiw	r26, 0x06	; 6
    1174:	8d 91       	ld	r24, X+
    1176:	9c 91       	ld	r25, X
    1178:	17 97       	sbiw	r26, 0x07	; 7
    117a:	01 96       	adiw	r24, 0x01	; 1
    117c:	17 96       	adiw	r26, 0x07	; 7
    117e:	9c 93       	st	X, r25
    1180:	8e 93       	st	-X, r24
    1182:	16 97       	sbiw	r26, 0x06	; 6
    1184:	ce 01       	movw	r24, r28
    1186:	df 91       	pop	r29
    1188:	cf 91       	pop	r28
    118a:	1f 91       	pop	r17
    118c:	0f 91       	pop	r16
    118e:	08 95       	ret

00001190 <sprintf>:
    1190:	ae e0       	ldi	r26, 0x0E	; 14
    1192:	b0 e0       	ldi	r27, 0x00	; 0
    1194:	ee ec       	ldi	r30, 0xCE	; 206
    1196:	f8 e0       	ldi	r31, 0x08	; 8
    1198:	0c 94 75 07 	jmp	0xeea	; 0xeea <__prologue_saves__+0x1c>
    119c:	0d 89       	ldd	r16, Y+21	; 0x15
    119e:	1e 89       	ldd	r17, Y+22	; 0x16
    11a0:	86 e0       	ldi	r24, 0x06	; 6
    11a2:	8c 83       	std	Y+4, r24	; 0x04
    11a4:	1a 83       	std	Y+2, r17	; 0x02
    11a6:	09 83       	std	Y+1, r16	; 0x01
    11a8:	8f ef       	ldi	r24, 0xFF	; 255
    11aa:	9f e7       	ldi	r25, 0x7F	; 127
    11ac:	9e 83       	std	Y+6, r25	; 0x06
    11ae:	8d 83       	std	Y+5, r24	; 0x05
    11b0:	ae 01       	movw	r20, r28
    11b2:	47 5e       	subi	r20, 0xE7	; 231
    11b4:	5f 4f       	sbci	r21, 0xFF	; 255
    11b6:	6f 89       	ldd	r22, Y+23	; 0x17
    11b8:	78 8d       	ldd	r23, Y+24	; 0x18
    11ba:	ce 01       	movw	r24, r28
    11bc:	01 96       	adiw	r24, 0x01	; 1
    11be:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <vfprintf>
    11c2:	ef 81       	ldd	r30, Y+7	; 0x07
    11c4:	f8 85       	ldd	r31, Y+8	; 0x08
    11c6:	e0 0f       	add	r30, r16
    11c8:	f1 1f       	adc	r31, r17
    11ca:	10 82       	st	Z, r1
    11cc:	2e 96       	adiw	r28, 0x0e	; 14
    11ce:	e4 e0       	ldi	r30, 0x04	; 4
    11d0:	0c 94 91 07 	jmp	0xf22	; 0xf22 <__epilogue_restores__+0x1c>

000011d4 <__ultoa_invert>:
    11d4:	fa 01       	movw	r30, r20
    11d6:	aa 27       	eor	r26, r26
    11d8:	28 30       	cpi	r18, 0x08	; 8
    11da:	51 f1       	breq	.+84     	; 0x1230 <__ultoa_invert+0x5c>
    11dc:	20 31       	cpi	r18, 0x10	; 16
    11de:	81 f1       	breq	.+96     	; 0x1240 <__ultoa_invert+0x6c>
    11e0:	e8 94       	clt
    11e2:	6f 93       	push	r22
    11e4:	6e 7f       	andi	r22, 0xFE	; 254
    11e6:	6e 5f       	subi	r22, 0xFE	; 254
    11e8:	7f 4f       	sbci	r23, 0xFF	; 255
    11ea:	8f 4f       	sbci	r24, 0xFF	; 255
    11ec:	9f 4f       	sbci	r25, 0xFF	; 255
    11ee:	af 4f       	sbci	r26, 0xFF	; 255
    11f0:	b1 e0       	ldi	r27, 0x01	; 1
    11f2:	3e d0       	rcall	.+124    	; 0x1270 <__ultoa_invert+0x9c>
    11f4:	b4 e0       	ldi	r27, 0x04	; 4
    11f6:	3c d0       	rcall	.+120    	; 0x1270 <__ultoa_invert+0x9c>
    11f8:	67 0f       	add	r22, r23
    11fa:	78 1f       	adc	r23, r24
    11fc:	89 1f       	adc	r24, r25
    11fe:	9a 1f       	adc	r25, r26
    1200:	a1 1d       	adc	r26, r1
    1202:	68 0f       	add	r22, r24
    1204:	79 1f       	adc	r23, r25
    1206:	8a 1f       	adc	r24, r26
    1208:	91 1d       	adc	r25, r1
    120a:	a1 1d       	adc	r26, r1
    120c:	6a 0f       	add	r22, r26
    120e:	71 1d       	adc	r23, r1
    1210:	81 1d       	adc	r24, r1
    1212:	91 1d       	adc	r25, r1
    1214:	a1 1d       	adc	r26, r1
    1216:	20 d0       	rcall	.+64     	; 0x1258 <__ultoa_invert+0x84>
    1218:	09 f4       	brne	.+2      	; 0x121c <__ultoa_invert+0x48>
    121a:	68 94       	set
    121c:	3f 91       	pop	r19
    121e:	2a e0       	ldi	r18, 0x0A	; 10
    1220:	26 9f       	mul	r18, r22
    1222:	11 24       	eor	r1, r1
    1224:	30 19       	sub	r19, r0
    1226:	30 5d       	subi	r19, 0xD0	; 208
    1228:	31 93       	st	Z+, r19
    122a:	de f6       	brtc	.-74     	; 0x11e2 <__ultoa_invert+0xe>
    122c:	cf 01       	movw	r24, r30
    122e:	08 95       	ret
    1230:	46 2f       	mov	r20, r22
    1232:	47 70       	andi	r20, 0x07	; 7
    1234:	40 5d       	subi	r20, 0xD0	; 208
    1236:	41 93       	st	Z+, r20
    1238:	b3 e0       	ldi	r27, 0x03	; 3
    123a:	0f d0       	rcall	.+30     	; 0x125a <__ultoa_invert+0x86>
    123c:	c9 f7       	brne	.-14     	; 0x1230 <__ultoa_invert+0x5c>
    123e:	f6 cf       	rjmp	.-20     	; 0x122c <__ultoa_invert+0x58>
    1240:	46 2f       	mov	r20, r22
    1242:	4f 70       	andi	r20, 0x0F	; 15
    1244:	40 5d       	subi	r20, 0xD0	; 208
    1246:	4a 33       	cpi	r20, 0x3A	; 58
    1248:	18 f0       	brcs	.+6      	; 0x1250 <__ultoa_invert+0x7c>
    124a:	49 5d       	subi	r20, 0xD9	; 217
    124c:	31 fd       	sbrc	r19, 1
    124e:	40 52       	subi	r20, 0x20	; 32
    1250:	41 93       	st	Z+, r20
    1252:	02 d0       	rcall	.+4      	; 0x1258 <__ultoa_invert+0x84>
    1254:	a9 f7       	brne	.-22     	; 0x1240 <__ultoa_invert+0x6c>
    1256:	ea cf       	rjmp	.-44     	; 0x122c <__ultoa_invert+0x58>
    1258:	b4 e0       	ldi	r27, 0x04	; 4
    125a:	a6 95       	lsr	r26
    125c:	97 95       	ror	r25
    125e:	87 95       	ror	r24
    1260:	77 95       	ror	r23
    1262:	67 95       	ror	r22
    1264:	ba 95       	dec	r27
    1266:	c9 f7       	brne	.-14     	; 0x125a <__ultoa_invert+0x86>
    1268:	00 97       	sbiw	r24, 0x00	; 0
    126a:	61 05       	cpc	r22, r1
    126c:	71 05       	cpc	r23, r1
    126e:	08 95       	ret
    1270:	9b 01       	movw	r18, r22
    1272:	ac 01       	movw	r20, r24
    1274:	0a 2e       	mov	r0, r26
    1276:	06 94       	lsr	r0
    1278:	57 95       	ror	r21
    127a:	47 95       	ror	r20
    127c:	37 95       	ror	r19
    127e:	27 95       	ror	r18
    1280:	ba 95       	dec	r27
    1282:	c9 f7       	brne	.-14     	; 0x1276 <__ultoa_invert+0xa2>
    1284:	62 0f       	add	r22, r18
    1286:	73 1f       	adc	r23, r19
    1288:	84 1f       	adc	r24, r20
    128a:	95 1f       	adc	r25, r21
    128c:	a0 1d       	adc	r26, r0
    128e:	08 95       	ret

00001290 <_exit>:
    1290:	f8 94       	cli

00001292 <__stop_program>:
    1292:	ff cf       	rjmp	.-2      	; 0x1292 <__stop_program>
