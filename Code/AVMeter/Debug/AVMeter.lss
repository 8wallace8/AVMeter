
AVMeter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  0000127c  000012f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000127c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  0000132a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001388  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  000013c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001076  00000000  00000000  0000144c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000809  00000000  00000000  000024c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000622  00000000  00000000  00002ccb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000164  00000000  00000000  000032f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000540  00000000  00000000  00003454  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a1f  00000000  00000000  00003994  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  000043b3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
       8:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
       c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      10:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      14:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      18:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      1c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      20:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      24:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      28:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      2c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      30:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      34:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      38:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      3c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      40:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      44:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      48:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      4c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      50:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      54:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      58:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      5c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      60:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
      64:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	ec e7       	ldi	r30, 0x7C	; 124
     17e:	f2 e1       	ldi	r31, 0x12	; 18
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	aa 33       	cpi	r26, 0x3A	; 58
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>
     18c:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <main>
     190:	0c 94 3c 09 	jmp	0x1278	; 0x1278 <_exit>

00000194 <__bad_interrupt>:
     194:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000198 <LCD_Command>:
		Call it at program startup.

********************************************************************/
void InitADCEx()
{
	SPIInit();
     198:	8b b9       	out	0x0b, r24	; 11
     19a:	28 98       	cbi	0x05, 0	; 5
     19c:	29 9a       	sbi	0x05, 1	; 5
     19e:	00 00       	nop
     1a0:	29 98       	cbi	0x05, 1	; 5
     1a2:	83 ef       	ldi	r24, 0xF3	; 243
     1a4:	91 e0       	ldi	r25, 0x01	; 1
     1a6:	01 97       	sbiw	r24, 0x01	; 1
     1a8:	f1 f7       	brne	.-4      	; 0x1a6 <LCD_Command+0xe>
     1aa:	00 c0       	rjmp	.+0      	; 0x1ac <LCD_Command+0x14>
     1ac:	00 00       	nop
     1ae:	08 95       	ret

000001b0 <LCD_Char>:
     1b0:	8b b9       	out	0x0b, r24	; 11
     1b2:	28 9a       	sbi	0x05, 0	; 5
     1b4:	29 9a       	sbi	0x05, 1	; 5
     1b6:	00 00       	nop
     1b8:	29 98       	cbi	0x05, 1	; 5
     1ba:	83 ef       	ldi	r24, 0xF3	; 243
     1bc:	91 e0       	ldi	r25, 0x01	; 1
     1be:	01 97       	sbiw	r24, 0x01	; 1
     1c0:	f1 f7       	brne	.-4      	; 0x1be <LCD_Char+0xe>
     1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <LCD_Char+0x14>
     1c4:	00 00       	nop
     1c6:	08 95       	ret

000001c8 <LCD_Init>:
     1c8:	8f ef       	ldi	r24, 0xFF	; 255
     1ca:	8a b9       	out	0x0a, r24	; 10
     1cc:	84 b9       	out	0x04, r24	; 4
     1ce:	87 e8       	ldi	r24, 0x87	; 135
     1d0:	93 e1       	ldi	r25, 0x13	; 19
     1d2:	01 97       	sbiw	r24, 0x01	; 1
     1d4:	f1 f7       	brne	.-4      	; 0x1d2 <LCD_Init+0xa>
     1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <LCD_Init+0x10>
     1d8:	00 00       	nop
     1da:	82 e0       	ldi	r24, 0x02	; 2
     1dc:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
     1e0:	88 e3       	ldi	r24, 0x38	; 56
     1e2:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
     1e6:	8c e0       	ldi	r24, 0x0C	; 12
     1e8:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
     1ec:	86 e0       	ldi	r24, 0x06	; 6
     1ee:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
     1f2:	81 e0       	ldi	r24, 0x01	; 1
     1f4:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
     1f8:	83 ef       	ldi	r24, 0xF3	; 243
     1fa:	91 e0       	ldi	r25, 0x01	; 1
     1fc:	01 97       	sbiw	r24, 0x01	; 1
     1fe:	f1 f7       	brne	.-4      	; 0x1fc <LCD_Init+0x34>
     200:	00 c0       	rjmp	.+0      	; 0x202 <LCD_Init+0x3a>
     202:	00 00       	nop
     204:	08 95       	ret

00000206 <LCD_String>:
     206:	cf 93       	push	r28
     208:	df 93       	push	r29
     20a:	ec 01       	movw	r28, r24
     20c:	88 81       	ld	r24, Y
     20e:	88 23       	and	r24, r24
     210:	31 f0       	breq	.+12     	; 0x21e <LCD_String+0x18>
     212:	21 96       	adiw	r28, 0x01	; 1
     214:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_Char>
     218:	89 91       	ld	r24, Y+
     21a:	81 11       	cpse	r24, r1
     21c:	fb cf       	rjmp	.-10     	; 0x214 <LCD_String+0xe>
     21e:	df 91       	pop	r29
     220:	cf 91       	pop	r28
     222:	08 95       	ret

00000224 <LCD_Custom_Char>:
     224:	0f 93       	push	r16
     226:	1f 93       	push	r17
     228:	cf 93       	push	r28
     22a:	df 93       	push	r29
     22c:	88 30       	cpi	r24, 0x08	; 8
     22e:	80 f4       	brcc	.+32     	; 0x250 <LCD_Custom_Char+0x2c>
     230:	8b 01       	movw	r16, r22
     232:	88 0f       	add	r24, r24
     234:	88 0f       	add	r24, r24
     236:	88 0f       	add	r24, r24
     238:	80 5c       	subi	r24, 0xC0	; 192
     23a:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
     23e:	e8 01       	movw	r28, r16
     240:	08 5f       	subi	r16, 0xF8	; 248
     242:	1f 4f       	sbci	r17, 0xFF	; 255
     244:	89 91       	ld	r24, Y+
     246:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_Char>
     24a:	c0 17       	cp	r28, r16
     24c:	d1 07       	cpc	r29, r17
     24e:	d1 f7       	brne	.-12     	; 0x244 <LCD_Custom_Char+0x20>
     250:	df 91       	pop	r29
     252:	cf 91       	pop	r28
     254:	1f 91       	pop	r17
     256:	0f 91       	pop	r16
     258:	08 95       	ret

0000025a <SPIInit>:
     25a:	84 b1       	in	r24, 0x04	; 4
     25c:	88 62       	ori	r24, 0x28	; 40
     25e:	84 b9       	out	0x04, r24	; 4
     260:	38 9a       	sbi	0x07, 0	; 7
     262:	40 9a       	sbi	0x08, 0	; 8
     264:	8c b5       	in	r24, 0x2c	; 44
     266:	81 65       	ori	r24, 0x51	; 81
     268:	8c bd       	out	0x2c, r24	; 44
     26a:	08 95       	ret

0000026c <SPIWrite>:
     26c:	8e bd       	out	0x2e, r24	; 46
     26e:	0d b4       	in	r0, 0x2d	; 45
     270:	07 fe       	sbrs	r0, 7
     272:	fd cf       	rjmp	.-6      	; 0x26e <SPIWrite+0x2>
     274:	8e b5       	in	r24, 0x2e	; 46
     276:	08 95       	ret

00000278 <ReadADCEx>:
		Since the ADCs are 12 bit the return value is between
		0-4095 (Including both)

********************************************************************/
uint16_t ReadADCEx(uint8_t ch)
{
     278:	cf 93       	push	r28
     27a:	c8 2f       	mov	r28, r24
	uint8_t byte,data_high,data_low;

	byte=0b00000110;

	if(ch>3)
     27c:	84 30       	cpi	r24, 0x04	; 4
     27e:	10 f0       	brcs	.+4      	; 0x284 <ReadADCEx+0xc>
		byte|=0b00000001;
     280:	87 e0       	ldi	r24, 0x07	; 7
     282:	01 c0       	rjmp	.+2      	; 0x286 <ReadADCEx+0xe>
********************************************************************/
uint16_t ReadADCEx(uint8_t ch)
{
	uint8_t byte,data_high,data_low;

	byte=0b00000110;
     284:	86 e0       	ldi	r24, 0x06	; 6

	if(ch>3)
		byte|=0b00000001;

	CS_LOW();
     286:	40 98       	cbi	0x08, 0	; 8
	
	SPIWrite(byte);
     288:	0e 94 36 01 	call	0x26c	; 0x26c <SPIWrite>

	byte=ch<<6;

	data_high=SPIWrite(byte);
     28c:	8c 2f       	mov	r24, r28
     28e:	82 95       	swap	r24
     290:	88 0f       	add	r24, r24
     292:	88 0f       	add	r24, r24
     294:	80 7c       	andi	r24, 0xC0	; 192
     296:	0e 94 36 01 	call	0x26c	; 0x26c <SPIWrite>
     29a:	c8 2f       	mov	r28, r24

	data_high&=0b00001111;

	data_low=SPIWrite(0xFF);
     29c:	8f ef       	ldi	r24, 0xFF	; 255
     29e:	0e 94 36 01 	call	0x26c	; 0x26c <SPIWrite>

	CS_HIGH();
     2a2:	40 9a       	sbi	0x08, 0	; 8

	return ((data_high<<8)|data_low);
     2a4:	cf 70       	andi	r28, 0x0F	; 15
     2a6:	2c 2f       	mov	r18, r28
     2a8:	30 e0       	ldi	r19, 0x00	; 0
     2aa:	32 2f       	mov	r19, r18
     2ac:	22 27       	eor	r18, r18
}
     2ae:	a9 01       	movw	r20, r18
     2b0:	48 2b       	or	r20, r24
     2b2:	ca 01       	movw	r24, r20
     2b4:	cf 91       	pop	r28
     2b6:	08 95       	ret

000002b8 <Display>:
		Display(channel3Volts, channel3Amps, 1, 3, true);
	}
}

void Display(uint16_t adcVoltageResult,  uint16_t adcAmpsResult, char row, int channel, bool negative)
{
     2b8:	df 92       	push	r13
     2ba:	ef 92       	push	r14
     2bc:	ff 92       	push	r15
     2be:	0f 93       	push	r16
     2c0:	1f 93       	push	r17
     2c2:	cf 93       	push	r28
     2c4:	df 93       	push	r29
     2c6:	cd b7       	in	r28, 0x3d	; 61
     2c8:	de b7       	in	r29, 0x3e	; 62
     2ca:	62 97       	sbiw	r28, 0x12	; 18
     2cc:	0f b6       	in	r0, 0x3f	; 63
     2ce:	f8 94       	cli
     2d0:	de bf       	out	0x3e, r29	; 62
     2d2:	0f be       	out	0x3f, r0	; 63
     2d4:	cd bf       	out	0x3d, r28	; 61
     2d6:	7b 01       	movw	r14, r22
     2d8:	14 2f       	mov	r17, r20
     2da:	d2 2e       	mov	r13, r18
	char voltsBuffer[9];
	char ampsBuffer[9];
	
	/* Builds Voltage Output string to be displayed on LCD */
	
	if (adcVoltageResult > 199) {
     2dc:	88 3c       	cpi	r24, 0xC8	; 200
     2de:	91 05       	cpc	r25, r1
     2e0:	08 f4       	brcc	.+2      	; 0x2e4 <Display+0x2c>
     2e2:	43 c0       	rjmp	.+134    	; 0x36a <Display+0xb2>
		if (negative) {
     2e4:	00 23       	and	r16, r16
     2e6:	11 f1       	breq	.+68     	; 0x32c <Display+0x74>
			volts = (float)adcVoltageResult*.005f*-1;
			sprintf(voltsBuffer, "%6.2f V", volts); //builds buffer with 6 total characters with precision 2
     2e8:	bc 01       	movw	r22, r24
     2ea:	80 e0       	ldi	r24, 0x00	; 0
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <__floatunsisf>
     2f2:	2a e0       	ldi	r18, 0x0A	; 10
     2f4:	37 ed       	ldi	r19, 0xD7	; 215
     2f6:	43 ea       	ldi	r20, 0xA3	; 163
     2f8:	5b e3       	ldi	r21, 0x3B	; 59
     2fa:	0e 94 20 03 	call	0x640	; 0x640 <__mulsf3>
     2fe:	dc 01       	movw	r26, r24
     300:	cb 01       	movw	r24, r22
     302:	b0 58       	subi	r27, 0x80	; 128
     304:	bf 93       	push	r27
     306:	af 93       	push	r26
     308:	9f 93       	push	r25
     30a:	8f 93       	push	r24
     30c:	88 e1       	ldi	r24, 0x18	; 24
     30e:	91 e0       	ldi	r25, 0x01	; 1
     310:	9f 93       	push	r25
     312:	8f 93       	push	r24
     314:	ce 01       	movw	r24, r28
     316:	01 96       	adiw	r24, 0x01	; 1
     318:	9f 93       	push	r25
     31a:	8f 93       	push	r24
     31c:	0e 94 bc 08 	call	0x1178	; 0x1178 <sprintf>
     320:	0f b6       	in	r0, 0x3f	; 63
     322:	f8 94       	cli
     324:	de bf       	out	0x3e, r29	; 62
     326:	0f be       	out	0x3f, r0	; 63
     328:	cd bf       	out	0x3d, r28	; 61
     32a:	6d c0       	rjmp	.+218    	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
		}
		else {
			volts = (float)adcVoltageResult*.005f;
			sprintf(voltsBuffer, "%6.2f V", volts); //builds buffer with 6 total characters with precision 2
     32c:	bc 01       	movw	r22, r24
     32e:	80 e0       	ldi	r24, 0x00	; 0
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <__floatunsisf>
     336:	2a e0       	ldi	r18, 0x0A	; 10
     338:	37 ed       	ldi	r19, 0xD7	; 215
     33a:	43 ea       	ldi	r20, 0xA3	; 163
     33c:	5b e3       	ldi	r21, 0x3B	; 59
     33e:	0e 94 20 03 	call	0x640	; 0x640 <__mulsf3>
     342:	9f 93       	push	r25
     344:	8f 93       	push	r24
     346:	7f 93       	push	r23
     348:	6f 93       	push	r22
     34a:	88 e1       	ldi	r24, 0x18	; 24
     34c:	91 e0       	ldi	r25, 0x01	; 1
     34e:	9f 93       	push	r25
     350:	8f 93       	push	r24
     352:	ce 01       	movw	r24, r28
     354:	01 96       	adiw	r24, 0x01	; 1
     356:	9f 93       	push	r25
     358:	8f 93       	push	r24
     35a:	0e 94 bc 08 	call	0x1178	; 0x1178 <sprintf>
     35e:	0f b6       	in	r0, 0x3f	; 63
     360:	f8 94       	cli
     362:	de bf       	out	0x3e, r29	; 62
     364:	0f be       	out	0x3f, r0	; 63
     366:	cd bf       	out	0x3d, r28	; 61
     368:	4e c0       	rjmp	.+156    	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
		}
	}
	
	else {
		if (negative) {
     36a:	00 23       	and	r16, r16
     36c:	41 f1       	breq	.+80     	; 0x3be <Display+0x106>
			volts = (float)adcVoltageResult*.005f*1000*-1;
			sprintf(voltsBuffer, "%5.0f mV", volts); //builds buffer with 5 total characters with precision 0
     36e:	bc 01       	movw	r22, r24
     370:	80 e0       	ldi	r24, 0x00	; 0
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <__floatunsisf>
     378:	2a e0       	ldi	r18, 0x0A	; 10
     37a:	37 ed       	ldi	r19, 0xD7	; 215
     37c:	43 ea       	ldi	r20, 0xA3	; 163
     37e:	5b e3       	ldi	r21, 0x3B	; 59
     380:	0e 94 20 03 	call	0x640	; 0x640 <__mulsf3>
     384:	20 e0       	ldi	r18, 0x00	; 0
     386:	30 e0       	ldi	r19, 0x00	; 0
     388:	4a e7       	ldi	r20, 0x7A	; 122
     38a:	54 e4       	ldi	r21, 0x44	; 68
     38c:	0e 94 20 03 	call	0x640	; 0x640 <__mulsf3>
     390:	dc 01       	movw	r26, r24
     392:	cb 01       	movw	r24, r22
     394:	b0 58       	subi	r27, 0x80	; 128
     396:	bf 93       	push	r27
     398:	af 93       	push	r26
     39a:	9f 93       	push	r25
     39c:	8f 93       	push	r24
     39e:	80 e2       	ldi	r24, 0x20	; 32
     3a0:	91 e0       	ldi	r25, 0x01	; 1
     3a2:	9f 93       	push	r25
     3a4:	8f 93       	push	r24
     3a6:	ce 01       	movw	r24, r28
     3a8:	01 96       	adiw	r24, 0x01	; 1
     3aa:	9f 93       	push	r25
     3ac:	8f 93       	push	r24
     3ae:	0e 94 bc 08 	call	0x1178	; 0x1178 <sprintf>
     3b2:	0f b6       	in	r0, 0x3f	; 63
     3b4:	f8 94       	cli
     3b6:	de bf       	out	0x3e, r29	; 62
     3b8:	0f be       	out	0x3f, r0	; 63
     3ba:	cd bf       	out	0x3d, r28	; 61
     3bc:	24 c0       	rjmp	.+72     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
		} 
		else {
			volts = (float)adcVoltageResult*.005f*1000;
			sprintf(voltsBuffer, "%5.0f mV", volts); //builds buffer with 5 total characters with precision 0
     3be:	bc 01       	movw	r22, r24
     3c0:	80 e0       	ldi	r24, 0x00	; 0
     3c2:	90 e0       	ldi	r25, 0x00	; 0
     3c4:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <__floatunsisf>
     3c8:	2a e0       	ldi	r18, 0x0A	; 10
     3ca:	37 ed       	ldi	r19, 0xD7	; 215
     3cc:	43 ea       	ldi	r20, 0xA3	; 163
     3ce:	5b e3       	ldi	r21, 0x3B	; 59
     3d0:	0e 94 20 03 	call	0x640	; 0x640 <__mulsf3>
     3d4:	20 e0       	ldi	r18, 0x00	; 0
     3d6:	30 e0       	ldi	r19, 0x00	; 0
     3d8:	4a e7       	ldi	r20, 0x7A	; 122
     3da:	54 e4       	ldi	r21, 0x44	; 68
     3dc:	0e 94 20 03 	call	0x640	; 0x640 <__mulsf3>
     3e0:	9f 93       	push	r25
     3e2:	8f 93       	push	r24
     3e4:	7f 93       	push	r23
     3e6:	6f 93       	push	r22
     3e8:	80 e2       	ldi	r24, 0x20	; 32
     3ea:	91 e0       	ldi	r25, 0x01	; 1
     3ec:	9f 93       	push	r25
     3ee:	8f 93       	push	r24
     3f0:	ce 01       	movw	r24, r28
     3f2:	01 96       	adiw	r24, 0x01	; 1
     3f4:	9f 93       	push	r25
     3f6:	8f 93       	push	r24
     3f8:	0e 94 bc 08 	call	0x1178	; 0x1178 <sprintf>
     3fc:	0f b6       	in	r0, 0x3f	; 63
     3fe:	f8 94       	cli
     400:	de bf       	out	0x3e, r29	; 62
     402:	0f be       	out	0x3f, r0	; 63
     404:	cd bf       	out	0x3d, r28	; 61
		}
	}
	
	if (adcAmpsResult > 199) {
     406:	98 ec       	ldi	r25, 0xC8	; 200
     408:	e9 16       	cp	r14, r25
     40a:	f1 04       	cpc	r15, r1
     40c:	f8 f0       	brcs	.+62     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
		amps = (float)adcAmpsResult*.001f;
		sprintf(ampsBuffer, "%4.2f A", amps); //builds buffer with 6 total characters with precision 2	
     40e:	b7 01       	movw	r22, r14
     410:	80 e0       	ldi	r24, 0x00	; 0
     412:	90 e0       	ldi	r25, 0x00	; 0
     414:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <__floatunsisf>
     418:	2f e6       	ldi	r18, 0x6F	; 111
     41a:	32 e1       	ldi	r19, 0x12	; 18
     41c:	43 e8       	ldi	r20, 0x83	; 131
     41e:	5a e3       	ldi	r21, 0x3A	; 58
     420:	0e 94 20 03 	call	0x640	; 0x640 <__mulsf3>
     424:	9f 93       	push	r25
     426:	8f 93       	push	r24
     428:	7f 93       	push	r23
     42a:	6f 93       	push	r22
     42c:	89 e2       	ldi	r24, 0x29	; 41
     42e:	91 e0       	ldi	r25, 0x01	; 1
     430:	9f 93       	push	r25
     432:	8f 93       	push	r24
     434:	ce 01       	movw	r24, r28
     436:	0a 96       	adiw	r24, 0x0a	; 10
     438:	9f 93       	push	r25
     43a:	8f 93       	push	r24
     43c:	0e 94 bc 08 	call	0x1178	; 0x1178 <sprintf>
     440:	0f b6       	in	r0, 0x3f	; 63
     442:	f8 94       	cli
     444:	de bf       	out	0x3e, r29	; 62
     446:	0f be       	out	0x3f, r0	; 63
     448:	cd bf       	out	0x3d, r28	; 61
     44a:	18 c0       	rjmp	.+48     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
	}	
	else {
		amps = (float)adcAmpsResult;
		sprintf(ampsBuffer, "%3.0f mA", amps); //builds buffer with 5 total characters with precision 0
     44c:	b7 01       	movw	r22, r14
     44e:	80 e0       	ldi	r24, 0x00	; 0
     450:	90 e0       	ldi	r25, 0x00	; 0
     452:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <__floatunsisf>
     456:	9f 93       	push	r25
     458:	8f 93       	push	r24
     45a:	7f 93       	push	r23
     45c:	6f 93       	push	r22
     45e:	81 e3       	ldi	r24, 0x31	; 49
     460:	91 e0       	ldi	r25, 0x01	; 1
     462:	9f 93       	push	r25
     464:	8f 93       	push	r24
     466:	ce 01       	movw	r24, r28
     468:	0a 96       	adiw	r24, 0x0a	; 10
     46a:	9f 93       	push	r25
     46c:	8f 93       	push	r24
     46e:	0e 94 bc 08 	call	0x1178	; 0x1178 <sprintf>
     472:	0f b6       	in	r0, 0x3f	; 63
     474:	f8 94       	cli
     476:	de bf       	out	0x3e, r29	; 62
     478:	0f be       	out	0x3f, r0	; 63
     47a:	cd bf       	out	0x3d, r28	; 61
	}
	
	voltsStartPos = 1;
	ampsStartPos = 10;
	
	if (row == 0) {
     47c:	11 11       	cpse	r17, r1
     47e:	16 c0       	rjmp	.+44     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
		LCD_Command(0x80);
     480:	80 e8       	ldi	r24, 0x80	; 128
     482:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
		LCD_Char(channel-1);
     486:	8f ef       	ldi	r24, 0xFF	; 255
     488:	8d 0d       	add	r24, r13
     48a:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_Char>
		LCD_Command((voltsStartPos & 0x0F)|0x80);	/* Command of first row and required position<16 */
     48e:	81 e8       	ldi	r24, 0x81	; 129
     490:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
		LCD_String(voltsBuffer);
     494:	ce 01       	movw	r24, r28
     496:	01 96       	adiw	r24, 0x01	; 1
     498:	0e 94 03 01 	call	0x206	; 0x206 <LCD_String>
		LCD_Command((ampsStartPos & 0x0F)|0x80);	/* Command of first row and required position<16 */
     49c:	8a e8       	ldi	r24, 0x8A	; 138
     49e:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
		LCD_String(ampsBuffer);
     4a2:	ce 01       	movw	r24, r28
     4a4:	0a 96       	adiw	r24, 0x0a	; 10
     4a6:	0e 94 03 01 	call	0x206	; 0x206 <LCD_String>
     4aa:	17 c0       	rjmp	.+46     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
	}
	else if (row == 1) {
     4ac:	11 30       	cpi	r17, 0x01	; 1
     4ae:	a9 f4       	brne	.+42     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
		LCD_Command(0xC0);
     4b0:	80 ec       	ldi	r24, 0xC0	; 192
     4b2:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
		LCD_Char(channel-1);
     4b6:	8f ef       	ldi	r24, 0xFF	; 255
     4b8:	8d 0d       	add	r24, r13
     4ba:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_Char>
		LCD_Command((voltsStartPos & 0x0F)|0xC0);	/* Command of second row and required position<16 */
     4be:	81 ec       	ldi	r24, 0xC1	; 193
     4c0:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
		LCD_String(voltsBuffer);
     4c4:	ce 01       	movw	r24, r28
     4c6:	01 96       	adiw	r24, 0x01	; 1
     4c8:	0e 94 03 01 	call	0x206	; 0x206 <LCD_String>
		LCD_Command((ampsStartPos & 0x0F)|0xC0);	/* Command of first row and required position<16 */
     4cc:	8a ec       	ldi	r24, 0xCA	; 202
     4ce:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Command>
		LCD_String(ampsBuffer);
     4d2:	ce 01       	movw	r24, r28
     4d4:	0a 96       	adiw	r24, 0x0a	; 10
     4d6:	0e 94 03 01 	call	0x206	; 0x206 <LCD_String>
	}


}
     4da:	62 96       	adiw	r28, 0x12	; 18
     4dc:	0f b6       	in	r0, 0x3f	; 63
     4de:	f8 94       	cli
     4e0:	de bf       	out	0x3e, r29	; 62
     4e2:	0f be       	out	0x3f, r0	; 63
     4e4:	cd bf       	out	0x3d, r28	; 61
     4e6:	df 91       	pop	r29
     4e8:	cf 91       	pop	r28
     4ea:	1f 91       	pop	r17
     4ec:	0f 91       	pop	r16
     4ee:	ff 90       	pop	r15
     4f0:	ef 90       	pop	r14
     4f2:	df 90       	pop	r13
     4f4:	08 95       	ret

000004f6 <main>:
#include "spi.h"

void Display(uint16_t adcVoltageResult, uint16_t adcAmpsResult, char row, int channel, bool negative);

int main()
{
     4f6:	cf 93       	push	r28
     4f8:	df 93       	push	r29
     4fa:	cd b7       	in	r28, 0x3d	; 61
     4fc:	de b7       	in	r29, 0x3e	; 62
     4fe:	68 97       	sbiw	r28, 0x18	; 24
     500:	0f b6       	in	r0, 0x3f	; 63
     502:	f8 94       	cli
     504:	de bf       	out	0x3e, r29	; 62
     506:	0f be       	out	0x3f, r0	; 63
     508:	cd bf       	out	0x3d, r28	; 61
	unsigned char charOne[8] = { 0x1B, 0x13, 0x1B, 0x1B, 0x1B, 0x1B, 0x1B, 0x11 };
     50a:	88 e0       	ldi	r24, 0x08	; 8
     50c:	e0 e0       	ldi	r30, 0x00	; 0
     50e:	f1 e0       	ldi	r31, 0x01	; 1
     510:	de 01       	movw	r26, r28
     512:	11 96       	adiw	r26, 0x01	; 1
     514:	01 90       	ld	r0, Z+
     516:	0d 92       	st	X+, r0
     518:	8a 95       	dec	r24
     51a:	e1 f7       	brne	.-8      	; 0x514 <main+0x1e>
	unsigned char charTwo[8] = { 0x1F, 0x11, 0x1D, 0x1D, 0x11, 0x17, 0x17, 0x11 };
     51c:	88 e0       	ldi	r24, 0x08	; 8
     51e:	e8 e0       	ldi	r30, 0x08	; 8
     520:	f1 e0       	ldi	r31, 0x01	; 1
     522:	de 01       	movw	r26, r28
     524:	19 96       	adiw	r26, 0x09	; 9
     526:	01 90       	ld	r0, Z+
     528:	0d 92       	st	X+, r0
     52a:	8a 95       	dec	r24
     52c:	e1 f7       	brne	.-8      	; 0x526 <main+0x30>
    unsigned char charThree[8] = { 0x1F, 0x11, 0x1D, 0x1D, 0x11, 0x1D, 0x1D, 0x11 };
     52e:	88 e0       	ldi	r24, 0x08	; 8
     530:	e0 e1       	ldi	r30, 0x10	; 16
     532:	f1 e0       	ldi	r31, 0x01	; 1
     534:	de 01       	movw	r26, r28
     536:	51 96       	adiw	r26, 0x11	; 17
     538:	01 90       	ld	r0, Z+
     53a:	0d 92       	st	X+, r0
     53c:	8a 95       	dec	r24
     53e:	e1 f7       	brne	.-8      	; 0x538 <main+0x42>
	uint16_t channel2Amps;  // 5 Volt non-adjustable channel
	uint16_t channel2Volts; // 5 Volt non-adjustable channel
	uint16_t channel3Amps;  // negative adjustable channel
	uint16_t channel3Volts; // negative adjustable channel
	
	LCD_Init();			/* Initialization of LCD*/
     540:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <LCD_Init>
		Call it at program startup.

********************************************************************/
void InitADCEx()
{
	SPIInit();
     544:	0e 94 2d 01 	call	0x25a	; 0x25a <SPIInit>
	InitADCEx();
	
	uint16_t adcTestResult = 0;
	
	/* Loads custom characters into LCD memory */
	LCD_Custom_Char(0, charOne);  
     548:	be 01       	movw	r22, r28
     54a:	6f 5f       	subi	r22, 0xFF	; 255
     54c:	7f 4f       	sbci	r23, 0xFF	; 255
     54e:	80 e0       	ldi	r24, 0x00	; 0
     550:	0e 94 12 01 	call	0x224	; 0x224 <LCD_Custom_Char>
	LCD_Custom_Char(1, charTwo);
     554:	be 01       	movw	r22, r28
     556:	67 5f       	subi	r22, 0xF7	; 247
     558:	7f 4f       	sbci	r23, 0xFF	; 255
     55a:	81 e0       	ldi	r24, 0x01	; 1
     55c:	0e 94 12 01 	call	0x224	; 0x224 <LCD_Custom_Char>
	LCD_Custom_Char(2, charThree);
     560:	be 01       	movw	r22, r28
     562:	6f 5e       	subi	r22, 0xEF	; 239
     564:	7f 4f       	sbci	r23, 0xFF	; 255
     566:	82 e0       	ldi	r24, 0x02	; 2
     568:	0e 94 12 01 	call	0x224	; 0x224 <LCD_Custom_Char>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     56c:	87 ea       	ldi	r24, 0xA7	; 167
     56e:	91 e6       	ldi	r25, 0x61	; 97
     570:	01 97       	sbiw	r24, 0x01	; 1
     572:	f1 f7       	brne	.-4      	; 0x570 <main+0x7a>
     574:	00 c0       	rjmp	.+0      	; 0x576 <main+0x80>
     576:	00 00       	nop
	
	while(1)
	{
		_delay_ms(100);
		
		channel1Amps = ReadADCEx(0);
     578:	80 e0       	ldi	r24, 0x00	; 0
     57a:	0e 94 3c 01 	call	0x278	; 0x278 <ReadADCEx>
     57e:	4c 01       	movw	r8, r24
		channel1Volts = ReadADCEx(1);
     580:	81 e0       	ldi	r24, 0x01	; 1
     582:	0e 94 3c 01 	call	0x278	; 0x278 <ReadADCEx>
     586:	5c 01       	movw	r10, r24
		channel2Amps = ReadADCEx(2);
     588:	82 e0       	ldi	r24, 0x02	; 2
     58a:	0e 94 3c 01 	call	0x278	; 0x278 <ReadADCEx>
		channel2Volts = ReadADCEx(3);
     58e:	83 e0       	ldi	r24, 0x03	; 3
     590:	0e 94 3c 01 	call	0x278	; 0x278 <ReadADCEx>
		channel3Amps = ReadADCEx(4);
     594:	84 e0       	ldi	r24, 0x04	; 4
     596:	0e 94 3c 01 	call	0x278	; 0x278 <ReadADCEx>
     59a:	6c 01       	movw	r12, r24
		channel3Volts = ReadADCEx(5);
     59c:	85 e0       	ldi	r24, 0x05	; 5
     59e:	0e 94 3c 01 	call	0x278	; 0x278 <ReadADCEx>
     5a2:	7c 01       	movw	r14, r24
		
		adcTestResult++;
		Display(channel1Volts, channel1Amps, 0, 1, false);
     5a4:	00 e0       	ldi	r16, 0x00	; 0
     5a6:	21 e0       	ldi	r18, 0x01	; 1
     5a8:	30 e0       	ldi	r19, 0x00	; 0
     5aa:	40 e0       	ldi	r20, 0x00	; 0
     5ac:	b4 01       	movw	r22, r8
     5ae:	c5 01       	movw	r24, r10
     5b0:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <Display>
		Display(channel3Volts, channel3Amps, 1, 3, true);
     5b4:	01 e0       	ldi	r16, 0x01	; 1
     5b6:	23 e0       	ldi	r18, 0x03	; 3
     5b8:	30 e0       	ldi	r19, 0x00	; 0
     5ba:	41 e0       	ldi	r20, 0x01	; 1
     5bc:	b6 01       	movw	r22, r12
     5be:	c7 01       	movw	r24, r14
     5c0:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <Display>
     5c4:	d3 cf       	rjmp	.-90     	; 0x56c <main+0x76>

000005c6 <__floatunsisf>:
     5c6:	e8 94       	clt
     5c8:	09 c0       	rjmp	.+18     	; 0x5dc <__floatsisf+0x12>

000005ca <__floatsisf>:
     5ca:	97 fb       	bst	r25, 7
     5cc:	3e f4       	brtc	.+14     	; 0x5dc <__floatsisf+0x12>
     5ce:	90 95       	com	r25
     5d0:	80 95       	com	r24
     5d2:	70 95       	com	r23
     5d4:	61 95       	neg	r22
     5d6:	7f 4f       	sbci	r23, 0xFF	; 255
     5d8:	8f 4f       	sbci	r24, 0xFF	; 255
     5da:	9f 4f       	sbci	r25, 0xFF	; 255
     5dc:	99 23       	and	r25, r25
     5de:	a9 f0       	breq	.+42     	; 0x60a <__floatsisf+0x40>
     5e0:	f9 2f       	mov	r31, r25
     5e2:	96 e9       	ldi	r25, 0x96	; 150
     5e4:	bb 27       	eor	r27, r27
     5e6:	93 95       	inc	r25
     5e8:	f6 95       	lsr	r31
     5ea:	87 95       	ror	r24
     5ec:	77 95       	ror	r23
     5ee:	67 95       	ror	r22
     5f0:	b7 95       	ror	r27
     5f2:	f1 11       	cpse	r31, r1
     5f4:	f8 cf       	rjmp	.-16     	; 0x5e6 <__floatsisf+0x1c>
     5f6:	fa f4       	brpl	.+62     	; 0x636 <__floatsisf+0x6c>
     5f8:	bb 0f       	add	r27, r27
     5fa:	11 f4       	brne	.+4      	; 0x600 <__floatsisf+0x36>
     5fc:	60 ff       	sbrs	r22, 0
     5fe:	1b c0       	rjmp	.+54     	; 0x636 <__floatsisf+0x6c>
     600:	6f 5f       	subi	r22, 0xFF	; 255
     602:	7f 4f       	sbci	r23, 0xFF	; 255
     604:	8f 4f       	sbci	r24, 0xFF	; 255
     606:	9f 4f       	sbci	r25, 0xFF	; 255
     608:	16 c0       	rjmp	.+44     	; 0x636 <__floatsisf+0x6c>
     60a:	88 23       	and	r24, r24
     60c:	11 f0       	breq	.+4      	; 0x612 <__floatsisf+0x48>
     60e:	96 e9       	ldi	r25, 0x96	; 150
     610:	11 c0       	rjmp	.+34     	; 0x634 <__floatsisf+0x6a>
     612:	77 23       	and	r23, r23
     614:	21 f0       	breq	.+8      	; 0x61e <__floatsisf+0x54>
     616:	9e e8       	ldi	r25, 0x8E	; 142
     618:	87 2f       	mov	r24, r23
     61a:	76 2f       	mov	r23, r22
     61c:	05 c0       	rjmp	.+10     	; 0x628 <__floatsisf+0x5e>
     61e:	66 23       	and	r22, r22
     620:	71 f0       	breq	.+28     	; 0x63e <__floatsisf+0x74>
     622:	96 e8       	ldi	r25, 0x86	; 134
     624:	86 2f       	mov	r24, r22
     626:	70 e0       	ldi	r23, 0x00	; 0
     628:	60 e0       	ldi	r22, 0x00	; 0
     62a:	2a f0       	brmi	.+10     	; 0x636 <__floatsisf+0x6c>
     62c:	9a 95       	dec	r25
     62e:	66 0f       	add	r22, r22
     630:	77 1f       	adc	r23, r23
     632:	88 1f       	adc	r24, r24
     634:	da f7       	brpl	.-10     	; 0x62c <__floatsisf+0x62>
     636:	88 0f       	add	r24, r24
     638:	96 95       	lsr	r25
     63a:	87 95       	ror	r24
     63c:	97 f9       	bld	r25, 7
     63e:	08 95       	ret

00000640 <__mulsf3>:
     640:	0e 94 33 03 	call	0x666	; 0x666 <__mulsf3x>
     644:	0c 94 a4 03 	jmp	0x748	; 0x748 <__fp_round>
     648:	0e 94 96 03 	call	0x72c	; 0x72c <__fp_pscA>
     64c:	38 f0       	brcs	.+14     	; 0x65c <__mulsf3+0x1c>
     64e:	0e 94 9d 03 	call	0x73a	; 0x73a <__fp_pscB>
     652:	20 f0       	brcs	.+8      	; 0x65c <__mulsf3+0x1c>
     654:	95 23       	and	r25, r21
     656:	11 f0       	breq	.+4      	; 0x65c <__mulsf3+0x1c>
     658:	0c 94 8d 03 	jmp	0x71a	; 0x71a <__fp_inf>
     65c:	0c 94 93 03 	jmp	0x726	; 0x726 <__fp_nan>
     660:	11 24       	eor	r1, r1
     662:	0c 94 d8 03 	jmp	0x7b0	; 0x7b0 <__fp_szero>

00000666 <__mulsf3x>:
     666:	0e 94 b5 03 	call	0x76a	; 0x76a <__fp_split3>
     66a:	70 f3       	brcs	.-36     	; 0x648 <__mulsf3+0x8>

0000066c <__mulsf3_pse>:
     66c:	95 9f       	mul	r25, r21
     66e:	c1 f3       	breq	.-16     	; 0x660 <__mulsf3+0x20>
     670:	95 0f       	add	r25, r21
     672:	50 e0       	ldi	r21, 0x00	; 0
     674:	55 1f       	adc	r21, r21
     676:	62 9f       	mul	r22, r18
     678:	f0 01       	movw	r30, r0
     67a:	72 9f       	mul	r23, r18
     67c:	bb 27       	eor	r27, r27
     67e:	f0 0d       	add	r31, r0
     680:	b1 1d       	adc	r27, r1
     682:	63 9f       	mul	r22, r19
     684:	aa 27       	eor	r26, r26
     686:	f0 0d       	add	r31, r0
     688:	b1 1d       	adc	r27, r1
     68a:	aa 1f       	adc	r26, r26
     68c:	64 9f       	mul	r22, r20
     68e:	66 27       	eor	r22, r22
     690:	b0 0d       	add	r27, r0
     692:	a1 1d       	adc	r26, r1
     694:	66 1f       	adc	r22, r22
     696:	82 9f       	mul	r24, r18
     698:	22 27       	eor	r18, r18
     69a:	b0 0d       	add	r27, r0
     69c:	a1 1d       	adc	r26, r1
     69e:	62 1f       	adc	r22, r18
     6a0:	73 9f       	mul	r23, r19
     6a2:	b0 0d       	add	r27, r0
     6a4:	a1 1d       	adc	r26, r1
     6a6:	62 1f       	adc	r22, r18
     6a8:	83 9f       	mul	r24, r19
     6aa:	a0 0d       	add	r26, r0
     6ac:	61 1d       	adc	r22, r1
     6ae:	22 1f       	adc	r18, r18
     6b0:	74 9f       	mul	r23, r20
     6b2:	33 27       	eor	r19, r19
     6b4:	a0 0d       	add	r26, r0
     6b6:	61 1d       	adc	r22, r1
     6b8:	23 1f       	adc	r18, r19
     6ba:	84 9f       	mul	r24, r20
     6bc:	60 0d       	add	r22, r0
     6be:	21 1d       	adc	r18, r1
     6c0:	82 2f       	mov	r24, r18
     6c2:	76 2f       	mov	r23, r22
     6c4:	6a 2f       	mov	r22, r26
     6c6:	11 24       	eor	r1, r1
     6c8:	9f 57       	subi	r25, 0x7F	; 127
     6ca:	50 40       	sbci	r21, 0x00	; 0
     6cc:	9a f0       	brmi	.+38     	; 0x6f4 <__mulsf3_pse+0x88>
     6ce:	f1 f0       	breq	.+60     	; 0x70c <__mulsf3_pse+0xa0>
     6d0:	88 23       	and	r24, r24
     6d2:	4a f0       	brmi	.+18     	; 0x6e6 <__mulsf3_pse+0x7a>
     6d4:	ee 0f       	add	r30, r30
     6d6:	ff 1f       	adc	r31, r31
     6d8:	bb 1f       	adc	r27, r27
     6da:	66 1f       	adc	r22, r22
     6dc:	77 1f       	adc	r23, r23
     6de:	88 1f       	adc	r24, r24
     6e0:	91 50       	subi	r25, 0x01	; 1
     6e2:	50 40       	sbci	r21, 0x00	; 0
     6e4:	a9 f7       	brne	.-22     	; 0x6d0 <__mulsf3_pse+0x64>
     6e6:	9e 3f       	cpi	r25, 0xFE	; 254
     6e8:	51 05       	cpc	r21, r1
     6ea:	80 f0       	brcs	.+32     	; 0x70c <__mulsf3_pse+0xa0>
     6ec:	0c 94 8d 03 	jmp	0x71a	; 0x71a <__fp_inf>
     6f0:	0c 94 d8 03 	jmp	0x7b0	; 0x7b0 <__fp_szero>
     6f4:	5f 3f       	cpi	r21, 0xFF	; 255
     6f6:	e4 f3       	brlt	.-8      	; 0x6f0 <__mulsf3_pse+0x84>
     6f8:	98 3e       	cpi	r25, 0xE8	; 232
     6fa:	d4 f3       	brlt	.-12     	; 0x6f0 <__mulsf3_pse+0x84>
     6fc:	86 95       	lsr	r24
     6fe:	77 95       	ror	r23
     700:	67 95       	ror	r22
     702:	b7 95       	ror	r27
     704:	f7 95       	ror	r31
     706:	e7 95       	ror	r30
     708:	9f 5f       	subi	r25, 0xFF	; 255
     70a:	c1 f7       	brne	.-16     	; 0x6fc <__mulsf3_pse+0x90>
     70c:	fe 2b       	or	r31, r30
     70e:	88 0f       	add	r24, r24
     710:	91 1d       	adc	r25, r1
     712:	96 95       	lsr	r25
     714:	87 95       	ror	r24
     716:	97 f9       	bld	r25, 7
     718:	08 95       	ret

0000071a <__fp_inf>:
     71a:	97 f9       	bld	r25, 7
     71c:	9f 67       	ori	r25, 0x7F	; 127
     71e:	80 e8       	ldi	r24, 0x80	; 128
     720:	70 e0       	ldi	r23, 0x00	; 0
     722:	60 e0       	ldi	r22, 0x00	; 0
     724:	08 95       	ret

00000726 <__fp_nan>:
     726:	9f ef       	ldi	r25, 0xFF	; 255
     728:	80 ec       	ldi	r24, 0xC0	; 192
     72a:	08 95       	ret

0000072c <__fp_pscA>:
     72c:	00 24       	eor	r0, r0
     72e:	0a 94       	dec	r0
     730:	16 16       	cp	r1, r22
     732:	17 06       	cpc	r1, r23
     734:	18 06       	cpc	r1, r24
     736:	09 06       	cpc	r0, r25
     738:	08 95       	ret

0000073a <__fp_pscB>:
     73a:	00 24       	eor	r0, r0
     73c:	0a 94       	dec	r0
     73e:	12 16       	cp	r1, r18
     740:	13 06       	cpc	r1, r19
     742:	14 06       	cpc	r1, r20
     744:	05 06       	cpc	r0, r21
     746:	08 95       	ret

00000748 <__fp_round>:
     748:	09 2e       	mov	r0, r25
     74a:	03 94       	inc	r0
     74c:	00 0c       	add	r0, r0
     74e:	11 f4       	brne	.+4      	; 0x754 <__fp_round+0xc>
     750:	88 23       	and	r24, r24
     752:	52 f0       	brmi	.+20     	; 0x768 <__fp_round+0x20>
     754:	bb 0f       	add	r27, r27
     756:	40 f4       	brcc	.+16     	; 0x768 <__fp_round+0x20>
     758:	bf 2b       	or	r27, r31
     75a:	11 f4       	brne	.+4      	; 0x760 <__fp_round+0x18>
     75c:	60 ff       	sbrs	r22, 0
     75e:	04 c0       	rjmp	.+8      	; 0x768 <__fp_round+0x20>
     760:	6f 5f       	subi	r22, 0xFF	; 255
     762:	7f 4f       	sbci	r23, 0xFF	; 255
     764:	8f 4f       	sbci	r24, 0xFF	; 255
     766:	9f 4f       	sbci	r25, 0xFF	; 255
     768:	08 95       	ret

0000076a <__fp_split3>:
     76a:	57 fd       	sbrc	r21, 7
     76c:	90 58       	subi	r25, 0x80	; 128
     76e:	44 0f       	add	r20, r20
     770:	55 1f       	adc	r21, r21
     772:	59 f0       	breq	.+22     	; 0x78a <__fp_splitA+0x10>
     774:	5f 3f       	cpi	r21, 0xFF	; 255
     776:	71 f0       	breq	.+28     	; 0x794 <__fp_splitA+0x1a>
     778:	47 95       	ror	r20

0000077a <__fp_splitA>:
     77a:	88 0f       	add	r24, r24
     77c:	97 fb       	bst	r25, 7
     77e:	99 1f       	adc	r25, r25
     780:	61 f0       	breq	.+24     	; 0x79a <__fp_splitA+0x20>
     782:	9f 3f       	cpi	r25, 0xFF	; 255
     784:	79 f0       	breq	.+30     	; 0x7a4 <__fp_splitA+0x2a>
     786:	87 95       	ror	r24
     788:	08 95       	ret
     78a:	12 16       	cp	r1, r18
     78c:	13 06       	cpc	r1, r19
     78e:	14 06       	cpc	r1, r20
     790:	55 1f       	adc	r21, r21
     792:	f2 cf       	rjmp	.-28     	; 0x778 <__fp_split3+0xe>
     794:	46 95       	lsr	r20
     796:	f1 df       	rcall	.-30     	; 0x77a <__fp_splitA>
     798:	08 c0       	rjmp	.+16     	; 0x7aa <__fp_splitA+0x30>
     79a:	16 16       	cp	r1, r22
     79c:	17 06       	cpc	r1, r23
     79e:	18 06       	cpc	r1, r24
     7a0:	99 1f       	adc	r25, r25
     7a2:	f1 cf       	rjmp	.-30     	; 0x786 <__fp_splitA+0xc>
     7a4:	86 95       	lsr	r24
     7a6:	71 05       	cpc	r23, r1
     7a8:	61 05       	cpc	r22, r1
     7aa:	08 94       	sec
     7ac:	08 95       	ret

000007ae <__fp_zero>:
     7ae:	e8 94       	clt

000007b0 <__fp_szero>:
     7b0:	bb 27       	eor	r27, r27
     7b2:	66 27       	eor	r22, r22
     7b4:	77 27       	eor	r23, r23
     7b6:	cb 01       	movw	r24, r22
     7b8:	97 f9       	bld	r25, 7
     7ba:	08 95       	ret

000007bc <vfprintf>:
     7bc:	a0 e1       	ldi	r26, 0x10	; 16
     7be:	b0 e0       	ldi	r27, 0x00	; 0
     7c0:	e4 ee       	ldi	r30, 0xE4	; 228
     7c2:	f3 e0       	ldi	r31, 0x03	; 3
     7c4:	0c 94 5b 07 	jmp	0xeb6	; 0xeb6 <__prologue_saves__>
     7c8:	7c 01       	movw	r14, r24
     7ca:	1b 01       	movw	r2, r22
     7cc:	6a 01       	movw	r12, r20
     7ce:	fc 01       	movw	r30, r24
     7d0:	17 82       	std	Z+7, r1	; 0x07
     7d2:	16 82       	std	Z+6, r1	; 0x06
     7d4:	83 81       	ldd	r24, Z+3	; 0x03
     7d6:	81 ff       	sbrs	r24, 1
     7d8:	44 c3       	rjmp	.+1672   	; 0xe62 <__stack+0x563>
     7da:	9e 01       	movw	r18, r28
     7dc:	2f 5f       	subi	r18, 0xFF	; 255
     7de:	3f 4f       	sbci	r19, 0xFF	; 255
     7e0:	39 01       	movw	r6, r18
     7e2:	f7 01       	movw	r30, r14
     7e4:	93 81       	ldd	r25, Z+3	; 0x03
     7e6:	f1 01       	movw	r30, r2
     7e8:	93 fd       	sbrc	r25, 3
     7ea:	85 91       	lpm	r24, Z+
     7ec:	93 ff       	sbrs	r25, 3
     7ee:	81 91       	ld	r24, Z+
     7f0:	1f 01       	movw	r2, r30
     7f2:	88 23       	and	r24, r24
     7f4:	09 f4       	brne	.+2      	; 0x7f8 <vfprintf+0x3c>
     7f6:	31 c3       	rjmp	.+1634   	; 0xe5a <__stack+0x55b>
     7f8:	85 32       	cpi	r24, 0x25	; 37
     7fa:	39 f4       	brne	.+14     	; 0x80a <vfprintf+0x4e>
     7fc:	93 fd       	sbrc	r25, 3
     7fe:	85 91       	lpm	r24, Z+
     800:	93 ff       	sbrs	r25, 3
     802:	81 91       	ld	r24, Z+
     804:	1f 01       	movw	r2, r30
     806:	85 32       	cpi	r24, 0x25	; 37
     808:	39 f4       	brne	.+14     	; 0x818 <vfprintf+0x5c>
     80a:	b7 01       	movw	r22, r14
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     812:	56 01       	movw	r10, r12
     814:	65 01       	movw	r12, r10
     816:	e5 cf       	rjmp	.-54     	; 0x7e2 <vfprintf+0x26>
     818:	10 e0       	ldi	r17, 0x00	; 0
     81a:	51 2c       	mov	r5, r1
     81c:	91 2c       	mov	r9, r1
     81e:	ff e1       	ldi	r31, 0x1F	; 31
     820:	f9 15       	cp	r31, r9
     822:	d8 f0       	brcs	.+54     	; 0x85a <vfprintf+0x9e>
     824:	8b 32       	cpi	r24, 0x2B	; 43
     826:	79 f0       	breq	.+30     	; 0x846 <vfprintf+0x8a>
     828:	38 f4       	brcc	.+14     	; 0x838 <vfprintf+0x7c>
     82a:	80 32       	cpi	r24, 0x20	; 32
     82c:	79 f0       	breq	.+30     	; 0x84c <vfprintf+0x90>
     82e:	83 32       	cpi	r24, 0x23	; 35
     830:	a1 f4       	brne	.+40     	; 0x85a <vfprintf+0x9e>
     832:	f9 2d       	mov	r31, r9
     834:	f0 61       	ori	r31, 0x10	; 16
     836:	2e c0       	rjmp	.+92     	; 0x894 <vfprintf+0xd8>
     838:	8d 32       	cpi	r24, 0x2D	; 45
     83a:	61 f0       	breq	.+24     	; 0x854 <vfprintf+0x98>
     83c:	80 33       	cpi	r24, 0x30	; 48
     83e:	69 f4       	brne	.+26     	; 0x85a <vfprintf+0x9e>
     840:	29 2d       	mov	r18, r9
     842:	21 60       	ori	r18, 0x01	; 1
     844:	2d c0       	rjmp	.+90     	; 0x8a0 <vfprintf+0xe4>
     846:	39 2d       	mov	r19, r9
     848:	32 60       	ori	r19, 0x02	; 2
     84a:	93 2e       	mov	r9, r19
     84c:	89 2d       	mov	r24, r9
     84e:	84 60       	ori	r24, 0x04	; 4
     850:	98 2e       	mov	r9, r24
     852:	2a c0       	rjmp	.+84     	; 0x8a8 <vfprintf+0xec>
     854:	e9 2d       	mov	r30, r9
     856:	e8 60       	ori	r30, 0x08	; 8
     858:	15 c0       	rjmp	.+42     	; 0x884 <vfprintf+0xc8>
     85a:	97 fc       	sbrc	r9, 7
     85c:	2d c0       	rjmp	.+90     	; 0x8b8 <vfprintf+0xfc>
     85e:	20 ed       	ldi	r18, 0xD0	; 208
     860:	28 0f       	add	r18, r24
     862:	2a 30       	cpi	r18, 0x0A	; 10
     864:	88 f4       	brcc	.+34     	; 0x888 <vfprintf+0xcc>
     866:	96 fe       	sbrs	r9, 6
     868:	06 c0       	rjmp	.+12     	; 0x876 <vfprintf+0xba>
     86a:	3a e0       	ldi	r19, 0x0A	; 10
     86c:	13 9f       	mul	r17, r19
     86e:	20 0d       	add	r18, r0
     870:	11 24       	eor	r1, r1
     872:	12 2f       	mov	r17, r18
     874:	19 c0       	rjmp	.+50     	; 0x8a8 <vfprintf+0xec>
     876:	8a e0       	ldi	r24, 0x0A	; 10
     878:	58 9e       	mul	r5, r24
     87a:	20 0d       	add	r18, r0
     87c:	11 24       	eor	r1, r1
     87e:	52 2e       	mov	r5, r18
     880:	e9 2d       	mov	r30, r9
     882:	e0 62       	ori	r30, 0x20	; 32
     884:	9e 2e       	mov	r9, r30
     886:	10 c0       	rjmp	.+32     	; 0x8a8 <vfprintf+0xec>
     888:	8e 32       	cpi	r24, 0x2E	; 46
     88a:	31 f4       	brne	.+12     	; 0x898 <vfprintf+0xdc>
     88c:	96 fc       	sbrc	r9, 6
     88e:	e5 c2       	rjmp	.+1482   	; 0xe5a <__stack+0x55b>
     890:	f9 2d       	mov	r31, r9
     892:	f0 64       	ori	r31, 0x40	; 64
     894:	9f 2e       	mov	r9, r31
     896:	08 c0       	rjmp	.+16     	; 0x8a8 <vfprintf+0xec>
     898:	8c 36       	cpi	r24, 0x6C	; 108
     89a:	21 f4       	brne	.+8      	; 0x8a4 <vfprintf+0xe8>
     89c:	29 2d       	mov	r18, r9
     89e:	20 68       	ori	r18, 0x80	; 128
     8a0:	92 2e       	mov	r9, r18
     8a2:	02 c0       	rjmp	.+4      	; 0x8a8 <vfprintf+0xec>
     8a4:	88 36       	cpi	r24, 0x68	; 104
     8a6:	41 f4       	brne	.+16     	; 0x8b8 <vfprintf+0xfc>
     8a8:	f1 01       	movw	r30, r2
     8aa:	93 fd       	sbrc	r25, 3
     8ac:	85 91       	lpm	r24, Z+
     8ae:	93 ff       	sbrs	r25, 3
     8b0:	81 91       	ld	r24, Z+
     8b2:	1f 01       	movw	r2, r30
     8b4:	81 11       	cpse	r24, r1
     8b6:	b3 cf       	rjmp	.-154    	; 0x81e <vfprintf+0x62>
     8b8:	9b eb       	ldi	r25, 0xBB	; 187
     8ba:	98 0f       	add	r25, r24
     8bc:	93 30       	cpi	r25, 0x03	; 3
     8be:	20 f4       	brcc	.+8      	; 0x8c8 <vfprintf+0x10c>
     8c0:	99 2d       	mov	r25, r9
     8c2:	90 61       	ori	r25, 0x10	; 16
     8c4:	80 5e       	subi	r24, 0xE0	; 224
     8c6:	07 c0       	rjmp	.+14     	; 0x8d6 <vfprintf+0x11a>
     8c8:	9b e9       	ldi	r25, 0x9B	; 155
     8ca:	98 0f       	add	r25, r24
     8cc:	93 30       	cpi	r25, 0x03	; 3
     8ce:	08 f0       	brcs	.+2      	; 0x8d2 <vfprintf+0x116>
     8d0:	66 c1       	rjmp	.+716    	; 0xb9e <__stack+0x29f>
     8d2:	99 2d       	mov	r25, r9
     8d4:	9f 7e       	andi	r25, 0xEF	; 239
     8d6:	96 ff       	sbrs	r25, 6
     8d8:	16 e0       	ldi	r17, 0x06	; 6
     8da:	9f 73       	andi	r25, 0x3F	; 63
     8dc:	99 2e       	mov	r9, r25
     8de:	85 36       	cpi	r24, 0x65	; 101
     8e0:	19 f4       	brne	.+6      	; 0x8e8 <vfprintf+0x12c>
     8e2:	90 64       	ori	r25, 0x40	; 64
     8e4:	99 2e       	mov	r9, r25
     8e6:	08 c0       	rjmp	.+16     	; 0x8f8 <vfprintf+0x13c>
     8e8:	86 36       	cpi	r24, 0x66	; 102
     8ea:	21 f4       	brne	.+8      	; 0x8f4 <vfprintf+0x138>
     8ec:	39 2f       	mov	r19, r25
     8ee:	30 68       	ori	r19, 0x80	; 128
     8f0:	93 2e       	mov	r9, r19
     8f2:	02 c0       	rjmp	.+4      	; 0x8f8 <vfprintf+0x13c>
     8f4:	11 11       	cpse	r17, r1
     8f6:	11 50       	subi	r17, 0x01	; 1
     8f8:	97 fe       	sbrs	r9, 7
     8fa:	07 c0       	rjmp	.+14     	; 0x90a <__stack+0xb>
     8fc:	1c 33       	cpi	r17, 0x3C	; 60
     8fe:	50 f4       	brcc	.+20     	; 0x914 <__stack+0x15>
     900:	44 24       	eor	r4, r4
     902:	43 94       	inc	r4
     904:	41 0e       	add	r4, r17
     906:	27 e0       	ldi	r18, 0x07	; 7
     908:	0b c0       	rjmp	.+22     	; 0x920 <__stack+0x21>
     90a:	18 30       	cpi	r17, 0x08	; 8
     90c:	38 f0       	brcs	.+14     	; 0x91c <__stack+0x1d>
     90e:	27 e0       	ldi	r18, 0x07	; 7
     910:	17 e0       	ldi	r17, 0x07	; 7
     912:	05 c0       	rjmp	.+10     	; 0x91e <__stack+0x1f>
     914:	27 e0       	ldi	r18, 0x07	; 7
     916:	9c e3       	ldi	r25, 0x3C	; 60
     918:	49 2e       	mov	r4, r25
     91a:	02 c0       	rjmp	.+4      	; 0x920 <__stack+0x21>
     91c:	21 2f       	mov	r18, r17
     91e:	41 2c       	mov	r4, r1
     920:	56 01       	movw	r10, r12
     922:	84 e0       	ldi	r24, 0x04	; 4
     924:	a8 0e       	add	r10, r24
     926:	b1 1c       	adc	r11, r1
     928:	f6 01       	movw	r30, r12
     92a:	60 81       	ld	r22, Z
     92c:	71 81       	ldd	r23, Z+1	; 0x01
     92e:	82 81       	ldd	r24, Z+2	; 0x02
     930:	93 81       	ldd	r25, Z+3	; 0x03
     932:	04 2d       	mov	r16, r4
     934:	a3 01       	movw	r20, r6
     936:	0e 94 92 07 	call	0xf24	; 0xf24 <__ftoa_engine>
     93a:	6c 01       	movw	r12, r24
     93c:	f9 81       	ldd	r31, Y+1	; 0x01
     93e:	fc 87       	std	Y+12, r31	; 0x0c
     940:	f0 ff       	sbrs	r31, 0
     942:	02 c0       	rjmp	.+4      	; 0x948 <__stack+0x49>
     944:	f3 ff       	sbrs	r31, 3
     946:	06 c0       	rjmp	.+12     	; 0x954 <__stack+0x55>
     948:	91 fc       	sbrc	r9, 1
     94a:	06 c0       	rjmp	.+12     	; 0x958 <__stack+0x59>
     94c:	92 fe       	sbrs	r9, 2
     94e:	06 c0       	rjmp	.+12     	; 0x95c <__stack+0x5d>
     950:	00 e2       	ldi	r16, 0x20	; 32
     952:	05 c0       	rjmp	.+10     	; 0x95e <__stack+0x5f>
     954:	0d e2       	ldi	r16, 0x2D	; 45
     956:	03 c0       	rjmp	.+6      	; 0x95e <__stack+0x5f>
     958:	0b e2       	ldi	r16, 0x2B	; 43
     95a:	01 c0       	rjmp	.+2      	; 0x95e <__stack+0x5f>
     95c:	00 e0       	ldi	r16, 0x00	; 0
     95e:	8c 85       	ldd	r24, Y+12	; 0x0c
     960:	8c 70       	andi	r24, 0x0C	; 12
     962:	19 f0       	breq	.+6      	; 0x96a <__stack+0x6b>
     964:	01 11       	cpse	r16, r1
     966:	5a c2       	rjmp	.+1204   	; 0xe1c <__stack+0x51d>
     968:	9b c2       	rjmp	.+1334   	; 0xea0 <__stack+0x5a1>
     96a:	97 fe       	sbrs	r9, 7
     96c:	10 c0       	rjmp	.+32     	; 0x98e <__stack+0x8f>
     96e:	4c 0c       	add	r4, r12
     970:	fc 85       	ldd	r31, Y+12	; 0x0c
     972:	f4 ff       	sbrs	r31, 4
     974:	04 c0       	rjmp	.+8      	; 0x97e <__stack+0x7f>
     976:	8a 81       	ldd	r24, Y+2	; 0x02
     978:	81 33       	cpi	r24, 0x31	; 49
     97a:	09 f4       	brne	.+2      	; 0x97e <__stack+0x7f>
     97c:	4a 94       	dec	r4
     97e:	14 14       	cp	r1, r4
     980:	74 f5       	brge	.+92     	; 0x9de <__stack+0xdf>
     982:	28 e0       	ldi	r18, 0x08	; 8
     984:	24 15       	cp	r18, r4
     986:	78 f5       	brcc	.+94     	; 0x9e6 <__stack+0xe7>
     988:	88 e0       	ldi	r24, 0x08	; 8
     98a:	48 2e       	mov	r4, r24
     98c:	2c c0       	rjmp	.+88     	; 0x9e6 <__stack+0xe7>
     98e:	96 fc       	sbrc	r9, 6
     990:	2a c0       	rjmp	.+84     	; 0x9e6 <__stack+0xe7>
     992:	81 2f       	mov	r24, r17
     994:	90 e0       	ldi	r25, 0x00	; 0
     996:	8c 15       	cp	r24, r12
     998:	9d 05       	cpc	r25, r13
     99a:	9c f0       	brlt	.+38     	; 0x9c2 <__stack+0xc3>
     99c:	3c ef       	ldi	r19, 0xFC	; 252
     99e:	c3 16       	cp	r12, r19
     9a0:	3f ef       	ldi	r19, 0xFF	; 255
     9a2:	d3 06       	cpc	r13, r19
     9a4:	74 f0       	brlt	.+28     	; 0x9c2 <__stack+0xc3>
     9a6:	89 2d       	mov	r24, r9
     9a8:	80 68       	ori	r24, 0x80	; 128
     9aa:	98 2e       	mov	r9, r24
     9ac:	0a c0       	rjmp	.+20     	; 0x9c2 <__stack+0xc3>
     9ae:	e2 e0       	ldi	r30, 0x02	; 2
     9b0:	f0 e0       	ldi	r31, 0x00	; 0
     9b2:	ec 0f       	add	r30, r28
     9b4:	fd 1f       	adc	r31, r29
     9b6:	e1 0f       	add	r30, r17
     9b8:	f1 1d       	adc	r31, r1
     9ba:	80 81       	ld	r24, Z
     9bc:	80 33       	cpi	r24, 0x30	; 48
     9be:	19 f4       	brne	.+6      	; 0x9c6 <__stack+0xc7>
     9c0:	11 50       	subi	r17, 0x01	; 1
     9c2:	11 11       	cpse	r17, r1
     9c4:	f4 cf       	rjmp	.-24     	; 0x9ae <__stack+0xaf>
     9c6:	97 fe       	sbrs	r9, 7
     9c8:	0e c0       	rjmp	.+28     	; 0x9e6 <__stack+0xe7>
     9ca:	44 24       	eor	r4, r4
     9cc:	43 94       	inc	r4
     9ce:	41 0e       	add	r4, r17
     9d0:	81 2f       	mov	r24, r17
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	c8 16       	cp	r12, r24
     9d6:	d9 06       	cpc	r13, r25
     9d8:	2c f4       	brge	.+10     	; 0x9e4 <__stack+0xe5>
     9da:	1c 19       	sub	r17, r12
     9dc:	04 c0       	rjmp	.+8      	; 0x9e6 <__stack+0xe7>
     9de:	44 24       	eor	r4, r4
     9e0:	43 94       	inc	r4
     9e2:	01 c0       	rjmp	.+2      	; 0x9e6 <__stack+0xe7>
     9e4:	10 e0       	ldi	r17, 0x00	; 0
     9e6:	97 fe       	sbrs	r9, 7
     9e8:	06 c0       	rjmp	.+12     	; 0x9f6 <__stack+0xf7>
     9ea:	1c 14       	cp	r1, r12
     9ec:	1d 04       	cpc	r1, r13
     9ee:	34 f4       	brge	.+12     	; 0x9fc <__stack+0xfd>
     9f0:	c6 01       	movw	r24, r12
     9f2:	01 96       	adiw	r24, 0x01	; 1
     9f4:	05 c0       	rjmp	.+10     	; 0xa00 <__stack+0x101>
     9f6:	85 e0       	ldi	r24, 0x05	; 5
     9f8:	90 e0       	ldi	r25, 0x00	; 0
     9fa:	02 c0       	rjmp	.+4      	; 0xa00 <__stack+0x101>
     9fc:	81 e0       	ldi	r24, 0x01	; 1
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	01 11       	cpse	r16, r1
     a02:	01 96       	adiw	r24, 0x01	; 1
     a04:	11 23       	and	r17, r17
     a06:	31 f0       	breq	.+12     	; 0xa14 <__stack+0x115>
     a08:	21 2f       	mov	r18, r17
     a0a:	30 e0       	ldi	r19, 0x00	; 0
     a0c:	2f 5f       	subi	r18, 0xFF	; 255
     a0e:	3f 4f       	sbci	r19, 0xFF	; 255
     a10:	82 0f       	add	r24, r18
     a12:	93 1f       	adc	r25, r19
     a14:	25 2d       	mov	r18, r5
     a16:	30 e0       	ldi	r19, 0x00	; 0
     a18:	82 17       	cp	r24, r18
     a1a:	93 07       	cpc	r25, r19
     a1c:	14 f4       	brge	.+4      	; 0xa22 <__stack+0x123>
     a1e:	58 1a       	sub	r5, r24
     a20:	01 c0       	rjmp	.+2      	; 0xa24 <__stack+0x125>
     a22:	51 2c       	mov	r5, r1
     a24:	89 2d       	mov	r24, r9
     a26:	89 70       	andi	r24, 0x09	; 9
     a28:	49 f4       	brne	.+18     	; 0xa3c <__stack+0x13d>
     a2a:	55 20       	and	r5, r5
     a2c:	39 f0       	breq	.+14     	; 0xa3c <__stack+0x13d>
     a2e:	b7 01       	movw	r22, r14
     a30:	80 e2       	ldi	r24, 0x20	; 32
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     a38:	5a 94       	dec	r5
     a3a:	f7 cf       	rjmp	.-18     	; 0xa2a <__stack+0x12b>
     a3c:	00 23       	and	r16, r16
     a3e:	29 f0       	breq	.+10     	; 0xa4a <__stack+0x14b>
     a40:	b7 01       	movw	r22, r14
     a42:	80 2f       	mov	r24, r16
     a44:	90 e0       	ldi	r25, 0x00	; 0
     a46:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     a4a:	93 fc       	sbrc	r9, 3
     a4c:	09 c0       	rjmp	.+18     	; 0xa60 <__stack+0x161>
     a4e:	55 20       	and	r5, r5
     a50:	39 f0       	breq	.+14     	; 0xa60 <__stack+0x161>
     a52:	b7 01       	movw	r22, r14
     a54:	80 e3       	ldi	r24, 0x30	; 48
     a56:	90 e0       	ldi	r25, 0x00	; 0
     a58:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     a5c:	5a 94       	dec	r5
     a5e:	f7 cf       	rjmp	.-18     	; 0xa4e <__stack+0x14f>
     a60:	97 fe       	sbrs	r9, 7
     a62:	4c c0       	rjmp	.+152    	; 0xafc <__stack+0x1fd>
     a64:	46 01       	movw	r8, r12
     a66:	d7 fe       	sbrs	r13, 7
     a68:	02 c0       	rjmp	.+4      	; 0xa6e <__stack+0x16f>
     a6a:	81 2c       	mov	r8, r1
     a6c:	91 2c       	mov	r9, r1
     a6e:	c6 01       	movw	r24, r12
     a70:	88 19       	sub	r24, r8
     a72:	99 09       	sbc	r25, r9
     a74:	f3 01       	movw	r30, r6
     a76:	e8 0f       	add	r30, r24
     a78:	f9 1f       	adc	r31, r25
     a7a:	fe 87       	std	Y+14, r31	; 0x0e
     a7c:	ed 87       	std	Y+13, r30	; 0x0d
     a7e:	96 01       	movw	r18, r12
     a80:	24 19       	sub	r18, r4
     a82:	31 09       	sbc	r19, r1
     a84:	38 8b       	std	Y+16, r19	; 0x10
     a86:	2f 87       	std	Y+15, r18	; 0x0f
     a88:	01 2f       	mov	r16, r17
     a8a:	10 e0       	ldi	r17, 0x00	; 0
     a8c:	11 95       	neg	r17
     a8e:	01 95       	neg	r16
     a90:	11 09       	sbc	r17, r1
     a92:	3f ef       	ldi	r19, 0xFF	; 255
     a94:	83 16       	cp	r8, r19
     a96:	93 06       	cpc	r9, r19
     a98:	29 f4       	brne	.+10     	; 0xaa4 <__stack+0x1a5>
     a9a:	b7 01       	movw	r22, r14
     a9c:	8e e2       	ldi	r24, 0x2E	; 46
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     aa4:	c8 14       	cp	r12, r8
     aa6:	d9 04       	cpc	r13, r9
     aa8:	4c f0       	brlt	.+18     	; 0xabc <__stack+0x1bd>
     aaa:	8f 85       	ldd	r24, Y+15	; 0x0f
     aac:	98 89       	ldd	r25, Y+16	; 0x10
     aae:	88 15       	cp	r24, r8
     ab0:	99 05       	cpc	r25, r9
     ab2:	24 f4       	brge	.+8      	; 0xabc <__stack+0x1bd>
     ab4:	ed 85       	ldd	r30, Y+13	; 0x0d
     ab6:	fe 85       	ldd	r31, Y+14	; 0x0e
     ab8:	81 81       	ldd	r24, Z+1	; 0x01
     aba:	01 c0       	rjmp	.+2      	; 0xabe <__stack+0x1bf>
     abc:	80 e3       	ldi	r24, 0x30	; 48
     abe:	f1 e0       	ldi	r31, 0x01	; 1
     ac0:	8f 1a       	sub	r8, r31
     ac2:	91 08       	sbc	r9, r1
     ac4:	2d 85       	ldd	r18, Y+13	; 0x0d
     ac6:	3e 85       	ldd	r19, Y+14	; 0x0e
     ac8:	2f 5f       	subi	r18, 0xFF	; 255
     aca:	3f 4f       	sbci	r19, 0xFF	; 255
     acc:	3e 87       	std	Y+14, r19	; 0x0e
     ace:	2d 87       	std	Y+13, r18	; 0x0d
     ad0:	80 16       	cp	r8, r16
     ad2:	91 06       	cpc	r9, r17
     ad4:	2c f0       	brlt	.+10     	; 0xae0 <__stack+0x1e1>
     ad6:	b7 01       	movw	r22, r14
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     ade:	d9 cf       	rjmp	.-78     	; 0xa92 <__stack+0x193>
     ae0:	c8 14       	cp	r12, r8
     ae2:	d9 04       	cpc	r13, r9
     ae4:	41 f4       	brne	.+16     	; 0xaf6 <__stack+0x1f7>
     ae6:	9a 81       	ldd	r25, Y+2	; 0x02
     ae8:	96 33       	cpi	r25, 0x36	; 54
     aea:	20 f4       	brcc	.+8      	; 0xaf4 <__stack+0x1f5>
     aec:	95 33       	cpi	r25, 0x35	; 53
     aee:	19 f4       	brne	.+6      	; 0xaf6 <__stack+0x1f7>
     af0:	3c 85       	ldd	r19, Y+12	; 0x0c
     af2:	34 ff       	sbrs	r19, 4
     af4:	81 e3       	ldi	r24, 0x31	; 49
     af6:	b7 01       	movw	r22, r14
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	4e c0       	rjmp	.+156    	; 0xb98 <__stack+0x299>
     afc:	8a 81       	ldd	r24, Y+2	; 0x02
     afe:	81 33       	cpi	r24, 0x31	; 49
     b00:	19 f0       	breq	.+6      	; 0xb08 <__stack+0x209>
     b02:	9c 85       	ldd	r25, Y+12	; 0x0c
     b04:	9f 7e       	andi	r25, 0xEF	; 239
     b06:	9c 87       	std	Y+12, r25	; 0x0c
     b08:	b7 01       	movw	r22, r14
     b0a:	90 e0       	ldi	r25, 0x00	; 0
     b0c:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     b10:	11 11       	cpse	r17, r1
     b12:	05 c0       	rjmp	.+10     	; 0xb1e <__stack+0x21f>
     b14:	94 fc       	sbrc	r9, 4
     b16:	18 c0       	rjmp	.+48     	; 0xb48 <__stack+0x249>
     b18:	85 e6       	ldi	r24, 0x65	; 101
     b1a:	90 e0       	ldi	r25, 0x00	; 0
     b1c:	17 c0       	rjmp	.+46     	; 0xb4c <__stack+0x24d>
     b1e:	b7 01       	movw	r22, r14
     b20:	8e e2       	ldi	r24, 0x2E	; 46
     b22:	90 e0       	ldi	r25, 0x00	; 0
     b24:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     b28:	1e 5f       	subi	r17, 0xFE	; 254
     b2a:	82 e0       	ldi	r24, 0x02	; 2
     b2c:	01 e0       	ldi	r16, 0x01	; 1
     b2e:	08 0f       	add	r16, r24
     b30:	f3 01       	movw	r30, r6
     b32:	e8 0f       	add	r30, r24
     b34:	f1 1d       	adc	r31, r1
     b36:	80 81       	ld	r24, Z
     b38:	b7 01       	movw	r22, r14
     b3a:	90 e0       	ldi	r25, 0x00	; 0
     b3c:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     b40:	80 2f       	mov	r24, r16
     b42:	01 13       	cpse	r16, r17
     b44:	f3 cf       	rjmp	.-26     	; 0xb2c <__stack+0x22d>
     b46:	e6 cf       	rjmp	.-52     	; 0xb14 <__stack+0x215>
     b48:	85 e4       	ldi	r24, 0x45	; 69
     b4a:	90 e0       	ldi	r25, 0x00	; 0
     b4c:	b7 01       	movw	r22, r14
     b4e:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     b52:	d7 fc       	sbrc	r13, 7
     b54:	06 c0       	rjmp	.+12     	; 0xb62 <__stack+0x263>
     b56:	c1 14       	cp	r12, r1
     b58:	d1 04       	cpc	r13, r1
     b5a:	41 f4       	brne	.+16     	; 0xb6c <__stack+0x26d>
     b5c:	ec 85       	ldd	r30, Y+12	; 0x0c
     b5e:	e4 ff       	sbrs	r30, 4
     b60:	05 c0       	rjmp	.+10     	; 0xb6c <__stack+0x26d>
     b62:	d1 94       	neg	r13
     b64:	c1 94       	neg	r12
     b66:	d1 08       	sbc	r13, r1
     b68:	8d e2       	ldi	r24, 0x2D	; 45
     b6a:	01 c0       	rjmp	.+2      	; 0xb6e <__stack+0x26f>
     b6c:	8b e2       	ldi	r24, 0x2B	; 43
     b6e:	b7 01       	movw	r22, r14
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     b76:	80 e3       	ldi	r24, 0x30	; 48
     b78:	2a e0       	ldi	r18, 0x0A	; 10
     b7a:	c2 16       	cp	r12, r18
     b7c:	d1 04       	cpc	r13, r1
     b7e:	2c f0       	brlt	.+10     	; 0xb8a <__stack+0x28b>
     b80:	8f 5f       	subi	r24, 0xFF	; 255
     b82:	fa e0       	ldi	r31, 0x0A	; 10
     b84:	cf 1a       	sub	r12, r31
     b86:	d1 08       	sbc	r13, r1
     b88:	f7 cf       	rjmp	.-18     	; 0xb78 <__stack+0x279>
     b8a:	b7 01       	movw	r22, r14
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     b92:	b7 01       	movw	r22, r14
     b94:	c6 01       	movw	r24, r12
     b96:	c0 96       	adiw	r24, 0x30	; 48
     b98:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     b9c:	54 c1       	rjmp	.+680    	; 0xe46 <__stack+0x547>
     b9e:	83 36       	cpi	r24, 0x63	; 99
     ba0:	31 f0       	breq	.+12     	; 0xbae <__stack+0x2af>
     ba2:	83 37       	cpi	r24, 0x73	; 115
     ba4:	79 f0       	breq	.+30     	; 0xbc4 <__stack+0x2c5>
     ba6:	83 35       	cpi	r24, 0x53	; 83
     ba8:	09 f0       	breq	.+2      	; 0xbac <__stack+0x2ad>
     baa:	56 c0       	rjmp	.+172    	; 0xc58 <__stack+0x359>
     bac:	20 c0       	rjmp	.+64     	; 0xbee <__stack+0x2ef>
     bae:	56 01       	movw	r10, r12
     bb0:	32 e0       	ldi	r19, 0x02	; 2
     bb2:	a3 0e       	add	r10, r19
     bb4:	b1 1c       	adc	r11, r1
     bb6:	f6 01       	movw	r30, r12
     bb8:	80 81       	ld	r24, Z
     bba:	89 83       	std	Y+1, r24	; 0x01
     bbc:	01 e0       	ldi	r16, 0x01	; 1
     bbe:	10 e0       	ldi	r17, 0x00	; 0
     bc0:	63 01       	movw	r12, r6
     bc2:	12 c0       	rjmp	.+36     	; 0xbe8 <__stack+0x2e9>
     bc4:	56 01       	movw	r10, r12
     bc6:	f2 e0       	ldi	r31, 0x02	; 2
     bc8:	af 0e       	add	r10, r31
     bca:	b1 1c       	adc	r11, r1
     bcc:	f6 01       	movw	r30, r12
     bce:	c0 80       	ld	r12, Z
     bd0:	d1 80       	ldd	r13, Z+1	; 0x01
     bd2:	96 fe       	sbrs	r9, 6
     bd4:	03 c0       	rjmp	.+6      	; 0xbdc <__stack+0x2dd>
     bd6:	61 2f       	mov	r22, r17
     bd8:	70 e0       	ldi	r23, 0x00	; 0
     bda:	02 c0       	rjmp	.+4      	; 0xbe0 <__stack+0x2e1>
     bdc:	6f ef       	ldi	r22, 0xFF	; 255
     bde:	7f ef       	ldi	r23, 0xFF	; 255
     be0:	c6 01       	movw	r24, r12
     be2:	0e 94 75 08 	call	0x10ea	; 0x10ea <strnlen>
     be6:	8c 01       	movw	r16, r24
     be8:	f9 2d       	mov	r31, r9
     bea:	ff 77       	andi	r31, 0x7F	; 127
     bec:	14 c0       	rjmp	.+40     	; 0xc16 <__stack+0x317>
     bee:	56 01       	movw	r10, r12
     bf0:	22 e0       	ldi	r18, 0x02	; 2
     bf2:	a2 0e       	add	r10, r18
     bf4:	b1 1c       	adc	r11, r1
     bf6:	f6 01       	movw	r30, r12
     bf8:	c0 80       	ld	r12, Z
     bfa:	d1 80       	ldd	r13, Z+1	; 0x01
     bfc:	96 fe       	sbrs	r9, 6
     bfe:	03 c0       	rjmp	.+6      	; 0xc06 <__stack+0x307>
     c00:	61 2f       	mov	r22, r17
     c02:	70 e0       	ldi	r23, 0x00	; 0
     c04:	02 c0       	rjmp	.+4      	; 0xc0a <__stack+0x30b>
     c06:	6f ef       	ldi	r22, 0xFF	; 255
     c08:	7f ef       	ldi	r23, 0xFF	; 255
     c0a:	c6 01       	movw	r24, r12
     c0c:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <strnlen_P>
     c10:	8c 01       	movw	r16, r24
     c12:	f9 2d       	mov	r31, r9
     c14:	f0 68       	ori	r31, 0x80	; 128
     c16:	9f 2e       	mov	r9, r31
     c18:	f3 fd       	sbrc	r31, 3
     c1a:	1a c0       	rjmp	.+52     	; 0xc50 <__stack+0x351>
     c1c:	85 2d       	mov	r24, r5
     c1e:	90 e0       	ldi	r25, 0x00	; 0
     c20:	08 17       	cp	r16, r24
     c22:	19 07       	cpc	r17, r25
     c24:	a8 f4       	brcc	.+42     	; 0xc50 <__stack+0x351>
     c26:	b7 01       	movw	r22, r14
     c28:	80 e2       	ldi	r24, 0x20	; 32
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     c30:	5a 94       	dec	r5
     c32:	f4 cf       	rjmp	.-24     	; 0xc1c <__stack+0x31d>
     c34:	f6 01       	movw	r30, r12
     c36:	97 fc       	sbrc	r9, 7
     c38:	85 91       	lpm	r24, Z+
     c3a:	97 fe       	sbrs	r9, 7
     c3c:	81 91       	ld	r24, Z+
     c3e:	6f 01       	movw	r12, r30
     c40:	b7 01       	movw	r22, r14
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     c48:	51 10       	cpse	r5, r1
     c4a:	5a 94       	dec	r5
     c4c:	01 50       	subi	r16, 0x01	; 1
     c4e:	11 09       	sbc	r17, r1
     c50:	01 15       	cp	r16, r1
     c52:	11 05       	cpc	r17, r1
     c54:	79 f7       	brne	.-34     	; 0xc34 <__stack+0x335>
     c56:	f7 c0       	rjmp	.+494    	; 0xe46 <__stack+0x547>
     c58:	84 36       	cpi	r24, 0x64	; 100
     c5a:	11 f0       	breq	.+4      	; 0xc60 <__stack+0x361>
     c5c:	89 36       	cpi	r24, 0x69	; 105
     c5e:	61 f5       	brne	.+88     	; 0xcb8 <__stack+0x3b9>
     c60:	56 01       	movw	r10, r12
     c62:	97 fe       	sbrs	r9, 7
     c64:	09 c0       	rjmp	.+18     	; 0xc78 <__stack+0x379>
     c66:	24 e0       	ldi	r18, 0x04	; 4
     c68:	a2 0e       	add	r10, r18
     c6a:	b1 1c       	adc	r11, r1
     c6c:	f6 01       	movw	r30, r12
     c6e:	60 81       	ld	r22, Z
     c70:	71 81       	ldd	r23, Z+1	; 0x01
     c72:	82 81       	ldd	r24, Z+2	; 0x02
     c74:	93 81       	ldd	r25, Z+3	; 0x03
     c76:	0a c0       	rjmp	.+20     	; 0xc8c <__stack+0x38d>
     c78:	f2 e0       	ldi	r31, 0x02	; 2
     c7a:	af 0e       	add	r10, r31
     c7c:	b1 1c       	adc	r11, r1
     c7e:	f6 01       	movw	r30, r12
     c80:	60 81       	ld	r22, Z
     c82:	71 81       	ldd	r23, Z+1	; 0x01
     c84:	07 2e       	mov	r0, r23
     c86:	00 0c       	add	r0, r0
     c88:	88 0b       	sbc	r24, r24
     c8a:	99 0b       	sbc	r25, r25
     c8c:	f9 2d       	mov	r31, r9
     c8e:	ff 76       	andi	r31, 0x6F	; 111
     c90:	9f 2e       	mov	r9, r31
     c92:	97 ff       	sbrs	r25, 7
     c94:	09 c0       	rjmp	.+18     	; 0xca8 <__stack+0x3a9>
     c96:	90 95       	com	r25
     c98:	80 95       	com	r24
     c9a:	70 95       	com	r23
     c9c:	61 95       	neg	r22
     c9e:	7f 4f       	sbci	r23, 0xFF	; 255
     ca0:	8f 4f       	sbci	r24, 0xFF	; 255
     ca2:	9f 4f       	sbci	r25, 0xFF	; 255
     ca4:	f0 68       	ori	r31, 0x80	; 128
     ca6:	9f 2e       	mov	r9, r31
     ca8:	2a e0       	ldi	r18, 0x0A	; 10
     caa:	30 e0       	ldi	r19, 0x00	; 0
     cac:	a3 01       	movw	r20, r6
     cae:	0e 94 de 08 	call	0x11bc	; 0x11bc <__ultoa_invert>
     cb2:	c8 2e       	mov	r12, r24
     cb4:	c6 18       	sub	r12, r6
     cb6:	3f c0       	rjmp	.+126    	; 0xd36 <__stack+0x437>
     cb8:	09 2d       	mov	r16, r9
     cba:	85 37       	cpi	r24, 0x75	; 117
     cbc:	21 f4       	brne	.+8      	; 0xcc6 <__stack+0x3c7>
     cbe:	0f 7e       	andi	r16, 0xEF	; 239
     cc0:	2a e0       	ldi	r18, 0x0A	; 10
     cc2:	30 e0       	ldi	r19, 0x00	; 0
     cc4:	1d c0       	rjmp	.+58     	; 0xd00 <__stack+0x401>
     cc6:	09 7f       	andi	r16, 0xF9	; 249
     cc8:	8f 36       	cpi	r24, 0x6F	; 111
     cca:	91 f0       	breq	.+36     	; 0xcf0 <__stack+0x3f1>
     ccc:	18 f4       	brcc	.+6      	; 0xcd4 <__stack+0x3d5>
     cce:	88 35       	cpi	r24, 0x58	; 88
     cd0:	59 f0       	breq	.+22     	; 0xce8 <__stack+0x3e9>
     cd2:	c3 c0       	rjmp	.+390    	; 0xe5a <__stack+0x55b>
     cd4:	80 37       	cpi	r24, 0x70	; 112
     cd6:	19 f0       	breq	.+6      	; 0xcde <__stack+0x3df>
     cd8:	88 37       	cpi	r24, 0x78	; 120
     cda:	11 f0       	breq	.+4      	; 0xce0 <__stack+0x3e1>
     cdc:	be c0       	rjmp	.+380    	; 0xe5a <__stack+0x55b>
     cde:	00 61       	ori	r16, 0x10	; 16
     ce0:	04 ff       	sbrs	r16, 4
     ce2:	09 c0       	rjmp	.+18     	; 0xcf6 <__stack+0x3f7>
     ce4:	04 60       	ori	r16, 0x04	; 4
     ce6:	07 c0       	rjmp	.+14     	; 0xcf6 <__stack+0x3f7>
     ce8:	94 fe       	sbrs	r9, 4
     cea:	08 c0       	rjmp	.+16     	; 0xcfc <__stack+0x3fd>
     cec:	06 60       	ori	r16, 0x06	; 6
     cee:	06 c0       	rjmp	.+12     	; 0xcfc <__stack+0x3fd>
     cf0:	28 e0       	ldi	r18, 0x08	; 8
     cf2:	30 e0       	ldi	r19, 0x00	; 0
     cf4:	05 c0       	rjmp	.+10     	; 0xd00 <__stack+0x401>
     cf6:	20 e1       	ldi	r18, 0x10	; 16
     cf8:	30 e0       	ldi	r19, 0x00	; 0
     cfa:	02 c0       	rjmp	.+4      	; 0xd00 <__stack+0x401>
     cfc:	20 e1       	ldi	r18, 0x10	; 16
     cfe:	32 e0       	ldi	r19, 0x02	; 2
     d00:	56 01       	movw	r10, r12
     d02:	07 ff       	sbrs	r16, 7
     d04:	09 c0       	rjmp	.+18     	; 0xd18 <__stack+0x419>
     d06:	84 e0       	ldi	r24, 0x04	; 4
     d08:	a8 0e       	add	r10, r24
     d0a:	b1 1c       	adc	r11, r1
     d0c:	f6 01       	movw	r30, r12
     d0e:	60 81       	ld	r22, Z
     d10:	71 81       	ldd	r23, Z+1	; 0x01
     d12:	82 81       	ldd	r24, Z+2	; 0x02
     d14:	93 81       	ldd	r25, Z+3	; 0x03
     d16:	08 c0       	rjmp	.+16     	; 0xd28 <__stack+0x429>
     d18:	f2 e0       	ldi	r31, 0x02	; 2
     d1a:	af 0e       	add	r10, r31
     d1c:	b1 1c       	adc	r11, r1
     d1e:	f6 01       	movw	r30, r12
     d20:	60 81       	ld	r22, Z
     d22:	71 81       	ldd	r23, Z+1	; 0x01
     d24:	80 e0       	ldi	r24, 0x00	; 0
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	a3 01       	movw	r20, r6
     d2a:	0e 94 de 08 	call	0x11bc	; 0x11bc <__ultoa_invert>
     d2e:	c8 2e       	mov	r12, r24
     d30:	c6 18       	sub	r12, r6
     d32:	0f 77       	andi	r16, 0x7F	; 127
     d34:	90 2e       	mov	r9, r16
     d36:	96 fe       	sbrs	r9, 6
     d38:	0b c0       	rjmp	.+22     	; 0xd50 <__stack+0x451>
     d3a:	09 2d       	mov	r16, r9
     d3c:	0e 7f       	andi	r16, 0xFE	; 254
     d3e:	c1 16       	cp	r12, r17
     d40:	50 f4       	brcc	.+20     	; 0xd56 <__stack+0x457>
     d42:	94 fe       	sbrs	r9, 4
     d44:	0a c0       	rjmp	.+20     	; 0xd5a <__stack+0x45b>
     d46:	92 fc       	sbrc	r9, 2
     d48:	08 c0       	rjmp	.+16     	; 0xd5a <__stack+0x45b>
     d4a:	09 2d       	mov	r16, r9
     d4c:	0e 7e       	andi	r16, 0xEE	; 238
     d4e:	05 c0       	rjmp	.+10     	; 0xd5a <__stack+0x45b>
     d50:	dc 2c       	mov	r13, r12
     d52:	09 2d       	mov	r16, r9
     d54:	03 c0       	rjmp	.+6      	; 0xd5c <__stack+0x45d>
     d56:	dc 2c       	mov	r13, r12
     d58:	01 c0       	rjmp	.+2      	; 0xd5c <__stack+0x45d>
     d5a:	d1 2e       	mov	r13, r17
     d5c:	04 ff       	sbrs	r16, 4
     d5e:	0d c0       	rjmp	.+26     	; 0xd7a <__stack+0x47b>
     d60:	fe 01       	movw	r30, r28
     d62:	ec 0d       	add	r30, r12
     d64:	f1 1d       	adc	r31, r1
     d66:	80 81       	ld	r24, Z
     d68:	80 33       	cpi	r24, 0x30	; 48
     d6a:	11 f4       	brne	.+4      	; 0xd70 <__stack+0x471>
     d6c:	09 7e       	andi	r16, 0xE9	; 233
     d6e:	09 c0       	rjmp	.+18     	; 0xd82 <__stack+0x483>
     d70:	02 ff       	sbrs	r16, 2
     d72:	06 c0       	rjmp	.+12     	; 0xd80 <__stack+0x481>
     d74:	d3 94       	inc	r13
     d76:	d3 94       	inc	r13
     d78:	04 c0       	rjmp	.+8      	; 0xd82 <__stack+0x483>
     d7a:	80 2f       	mov	r24, r16
     d7c:	86 78       	andi	r24, 0x86	; 134
     d7e:	09 f0       	breq	.+2      	; 0xd82 <__stack+0x483>
     d80:	d3 94       	inc	r13
     d82:	03 fd       	sbrc	r16, 3
     d84:	11 c0       	rjmp	.+34     	; 0xda8 <__stack+0x4a9>
     d86:	00 ff       	sbrs	r16, 0
     d88:	06 c0       	rjmp	.+12     	; 0xd96 <__stack+0x497>
     d8a:	1c 2d       	mov	r17, r12
     d8c:	d5 14       	cp	r13, r5
     d8e:	80 f4       	brcc	.+32     	; 0xdb0 <__stack+0x4b1>
     d90:	15 0d       	add	r17, r5
     d92:	1d 19       	sub	r17, r13
     d94:	0d c0       	rjmp	.+26     	; 0xdb0 <__stack+0x4b1>
     d96:	d5 14       	cp	r13, r5
     d98:	58 f4       	brcc	.+22     	; 0xdb0 <__stack+0x4b1>
     d9a:	b7 01       	movw	r22, r14
     d9c:	80 e2       	ldi	r24, 0x20	; 32
     d9e:	90 e0       	ldi	r25, 0x00	; 0
     da0:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     da4:	d3 94       	inc	r13
     da6:	f7 cf       	rjmp	.-18     	; 0xd96 <__stack+0x497>
     da8:	d5 14       	cp	r13, r5
     daa:	10 f4       	brcc	.+4      	; 0xdb0 <__stack+0x4b1>
     dac:	5d 18       	sub	r5, r13
     dae:	01 c0       	rjmp	.+2      	; 0xdb2 <__stack+0x4b3>
     db0:	51 2c       	mov	r5, r1
     db2:	04 ff       	sbrs	r16, 4
     db4:	10 c0       	rjmp	.+32     	; 0xdd6 <__stack+0x4d7>
     db6:	b7 01       	movw	r22, r14
     db8:	80 e3       	ldi	r24, 0x30	; 48
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     dc0:	02 ff       	sbrs	r16, 2
     dc2:	17 c0       	rjmp	.+46     	; 0xdf2 <__stack+0x4f3>
     dc4:	01 fd       	sbrc	r16, 1
     dc6:	03 c0       	rjmp	.+6      	; 0xdce <__stack+0x4cf>
     dc8:	88 e7       	ldi	r24, 0x78	; 120
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	02 c0       	rjmp	.+4      	; 0xdd2 <__stack+0x4d3>
     dce:	88 e5       	ldi	r24, 0x58	; 88
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	b7 01       	movw	r22, r14
     dd4:	0c c0       	rjmp	.+24     	; 0xdee <__stack+0x4ef>
     dd6:	80 2f       	mov	r24, r16
     dd8:	86 78       	andi	r24, 0x86	; 134
     dda:	59 f0       	breq	.+22     	; 0xdf2 <__stack+0x4f3>
     ddc:	01 ff       	sbrs	r16, 1
     dde:	02 c0       	rjmp	.+4      	; 0xde4 <__stack+0x4e5>
     de0:	8b e2       	ldi	r24, 0x2B	; 43
     de2:	01 c0       	rjmp	.+2      	; 0xde6 <__stack+0x4e7>
     de4:	80 e2       	ldi	r24, 0x20	; 32
     de6:	07 fd       	sbrc	r16, 7
     de8:	8d e2       	ldi	r24, 0x2D	; 45
     dea:	b7 01       	movw	r22, r14
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     df2:	c1 16       	cp	r12, r17
     df4:	38 f4       	brcc	.+14     	; 0xe04 <__stack+0x505>
     df6:	b7 01       	movw	r22, r14
     df8:	80 e3       	ldi	r24, 0x30	; 48
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     e00:	11 50       	subi	r17, 0x01	; 1
     e02:	f7 cf       	rjmp	.-18     	; 0xdf2 <__stack+0x4f3>
     e04:	ca 94       	dec	r12
     e06:	f3 01       	movw	r30, r6
     e08:	ec 0d       	add	r30, r12
     e0a:	f1 1d       	adc	r31, r1
     e0c:	80 81       	ld	r24, Z
     e0e:	b7 01       	movw	r22, r14
     e10:	90 e0       	ldi	r25, 0x00	; 0
     e12:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     e16:	c1 10       	cpse	r12, r1
     e18:	f5 cf       	rjmp	.-22     	; 0xe04 <__stack+0x505>
     e1a:	15 c0       	rjmp	.+42     	; 0xe46 <__stack+0x547>
     e1c:	f4 e0       	ldi	r31, 0x04	; 4
     e1e:	f5 15       	cp	r31, r5
     e20:	60 f5       	brcc	.+88     	; 0xe7a <__stack+0x57b>
     e22:	84 e0       	ldi	r24, 0x04	; 4
     e24:	58 1a       	sub	r5, r24
     e26:	93 fe       	sbrs	r9, 3
     e28:	1f c0       	rjmp	.+62     	; 0xe68 <__stack+0x569>
     e2a:	01 11       	cpse	r16, r1
     e2c:	27 c0       	rjmp	.+78     	; 0xe7c <__stack+0x57d>
     e2e:	2c 85       	ldd	r18, Y+12	; 0x0c
     e30:	23 ff       	sbrs	r18, 3
     e32:	2a c0       	rjmp	.+84     	; 0xe88 <__stack+0x589>
     e34:	08 e6       	ldi	r16, 0x68	; 104
     e36:	10 e0       	ldi	r17, 0x00	; 0
     e38:	39 2d       	mov	r19, r9
     e3a:	30 71       	andi	r19, 0x10	; 16
     e3c:	93 2e       	mov	r9, r19
     e3e:	f8 01       	movw	r30, r16
     e40:	84 91       	lpm	r24, Z
     e42:	81 11       	cpse	r24, r1
     e44:	24 c0       	rjmp	.+72     	; 0xe8e <__stack+0x58f>
     e46:	55 20       	and	r5, r5
     e48:	09 f4       	brne	.+2      	; 0xe4c <__stack+0x54d>
     e4a:	e4 cc       	rjmp	.-1592   	; 0x814 <vfprintf+0x58>
     e4c:	b7 01       	movw	r22, r14
     e4e:	80 e2       	ldi	r24, 0x20	; 32
     e50:	90 e0       	ldi	r25, 0x00	; 0
     e52:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     e56:	5a 94       	dec	r5
     e58:	f6 cf       	rjmp	.-20     	; 0xe46 <__stack+0x547>
     e5a:	f7 01       	movw	r30, r14
     e5c:	86 81       	ldd	r24, Z+6	; 0x06
     e5e:	97 81       	ldd	r25, Z+7	; 0x07
     e60:	26 c0       	rjmp	.+76     	; 0xeae <__stack+0x5af>
     e62:	8f ef       	ldi	r24, 0xFF	; 255
     e64:	9f ef       	ldi	r25, 0xFF	; 255
     e66:	23 c0       	rjmp	.+70     	; 0xeae <__stack+0x5af>
     e68:	b7 01       	movw	r22, r14
     e6a:	80 e2       	ldi	r24, 0x20	; 32
     e6c:	90 e0       	ldi	r25, 0x00	; 0
     e6e:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     e72:	5a 94       	dec	r5
     e74:	51 10       	cpse	r5, r1
     e76:	f8 cf       	rjmp	.-16     	; 0xe68 <__stack+0x569>
     e78:	d8 cf       	rjmp	.-80     	; 0xe2a <__stack+0x52b>
     e7a:	51 2c       	mov	r5, r1
     e7c:	b7 01       	movw	r22, r14
     e7e:	80 2f       	mov	r24, r16
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     e86:	d3 cf       	rjmp	.-90     	; 0xe2e <__stack+0x52f>
     e88:	0c e6       	ldi	r16, 0x6C	; 108
     e8a:	10 e0       	ldi	r17, 0x00	; 0
     e8c:	d5 cf       	rjmp	.-86     	; 0xe38 <__stack+0x539>
     e8e:	91 10       	cpse	r9, r1
     e90:	80 52       	subi	r24, 0x20	; 32
     e92:	b7 01       	movw	r22, r14
     e94:	90 e0       	ldi	r25, 0x00	; 0
     e96:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     e9a:	0f 5f       	subi	r16, 0xFF	; 255
     e9c:	1f 4f       	sbci	r17, 0xFF	; 255
     e9e:	cf cf       	rjmp	.-98     	; 0xe3e <__stack+0x53f>
     ea0:	23 e0       	ldi	r18, 0x03	; 3
     ea2:	25 15       	cp	r18, r5
     ea4:	10 f4       	brcc	.+4      	; 0xeaa <__stack+0x5ab>
     ea6:	83 e0       	ldi	r24, 0x03	; 3
     ea8:	bd cf       	rjmp	.-134    	; 0xe24 <__stack+0x525>
     eaa:	51 2c       	mov	r5, r1
     eac:	c0 cf       	rjmp	.-128    	; 0xe2e <__stack+0x52f>
     eae:	60 96       	adiw	r28, 0x10	; 16
     eb0:	e2 e1       	ldi	r30, 0x12	; 18
     eb2:	0c 94 77 07 	jmp	0xeee	; 0xeee <__epilogue_restores__>

00000eb6 <__prologue_saves__>:
     eb6:	2f 92       	push	r2
     eb8:	3f 92       	push	r3
     eba:	4f 92       	push	r4
     ebc:	5f 92       	push	r5
     ebe:	6f 92       	push	r6
     ec0:	7f 92       	push	r7
     ec2:	8f 92       	push	r8
     ec4:	9f 92       	push	r9
     ec6:	af 92       	push	r10
     ec8:	bf 92       	push	r11
     eca:	cf 92       	push	r12
     ecc:	df 92       	push	r13
     ece:	ef 92       	push	r14
     ed0:	ff 92       	push	r15
     ed2:	0f 93       	push	r16
     ed4:	1f 93       	push	r17
     ed6:	cf 93       	push	r28
     ed8:	df 93       	push	r29
     eda:	cd b7       	in	r28, 0x3d	; 61
     edc:	de b7       	in	r29, 0x3e	; 62
     ede:	ca 1b       	sub	r28, r26
     ee0:	db 0b       	sbc	r29, r27
     ee2:	0f b6       	in	r0, 0x3f	; 63
     ee4:	f8 94       	cli
     ee6:	de bf       	out	0x3e, r29	; 62
     ee8:	0f be       	out	0x3f, r0	; 63
     eea:	cd bf       	out	0x3d, r28	; 61
     eec:	09 94       	ijmp

00000eee <__epilogue_restores__>:
     eee:	2a 88       	ldd	r2, Y+18	; 0x12
     ef0:	39 88       	ldd	r3, Y+17	; 0x11
     ef2:	48 88       	ldd	r4, Y+16	; 0x10
     ef4:	5f 84       	ldd	r5, Y+15	; 0x0f
     ef6:	6e 84       	ldd	r6, Y+14	; 0x0e
     ef8:	7d 84       	ldd	r7, Y+13	; 0x0d
     efa:	8c 84       	ldd	r8, Y+12	; 0x0c
     efc:	9b 84       	ldd	r9, Y+11	; 0x0b
     efe:	aa 84       	ldd	r10, Y+10	; 0x0a
     f00:	b9 84       	ldd	r11, Y+9	; 0x09
     f02:	c8 84       	ldd	r12, Y+8	; 0x08
     f04:	df 80       	ldd	r13, Y+7	; 0x07
     f06:	ee 80       	ldd	r14, Y+6	; 0x06
     f08:	fd 80       	ldd	r15, Y+5	; 0x05
     f0a:	0c 81       	ldd	r16, Y+4	; 0x04
     f0c:	1b 81       	ldd	r17, Y+3	; 0x03
     f0e:	aa 81       	ldd	r26, Y+2	; 0x02
     f10:	b9 81       	ldd	r27, Y+1	; 0x01
     f12:	ce 0f       	add	r28, r30
     f14:	d1 1d       	adc	r29, r1
     f16:	0f b6       	in	r0, 0x3f	; 63
     f18:	f8 94       	cli
     f1a:	de bf       	out	0x3e, r29	; 62
     f1c:	0f be       	out	0x3f, r0	; 63
     f1e:	cd bf       	out	0x3d, r28	; 61
     f20:	ed 01       	movw	r28, r26
     f22:	08 95       	ret

00000f24 <__ftoa_engine>:
     f24:	28 30       	cpi	r18, 0x08	; 8
     f26:	08 f0       	brcs	.+2      	; 0xf2a <__ftoa_engine+0x6>
     f28:	27 e0       	ldi	r18, 0x07	; 7
     f2a:	33 27       	eor	r19, r19
     f2c:	da 01       	movw	r26, r20
     f2e:	99 0f       	add	r25, r25
     f30:	31 1d       	adc	r19, r1
     f32:	87 fd       	sbrc	r24, 7
     f34:	91 60       	ori	r25, 0x01	; 1
     f36:	00 96       	adiw	r24, 0x00	; 0
     f38:	61 05       	cpc	r22, r1
     f3a:	71 05       	cpc	r23, r1
     f3c:	39 f4       	brne	.+14     	; 0xf4c <__ftoa_engine+0x28>
     f3e:	32 60       	ori	r19, 0x02	; 2
     f40:	2e 5f       	subi	r18, 0xFE	; 254
     f42:	3d 93       	st	X+, r19
     f44:	30 e3       	ldi	r19, 0x30	; 48
     f46:	2a 95       	dec	r18
     f48:	e1 f7       	brne	.-8      	; 0xf42 <__ftoa_engine+0x1e>
     f4a:	08 95       	ret
     f4c:	9f 3f       	cpi	r25, 0xFF	; 255
     f4e:	30 f0       	brcs	.+12     	; 0xf5c <__ftoa_engine+0x38>
     f50:	80 38       	cpi	r24, 0x80	; 128
     f52:	71 05       	cpc	r23, r1
     f54:	61 05       	cpc	r22, r1
     f56:	09 f0       	breq	.+2      	; 0xf5a <__ftoa_engine+0x36>
     f58:	3c 5f       	subi	r19, 0xFC	; 252
     f5a:	3c 5f       	subi	r19, 0xFC	; 252
     f5c:	3d 93       	st	X+, r19
     f5e:	91 30       	cpi	r25, 0x01	; 1
     f60:	08 f0       	brcs	.+2      	; 0xf64 <__ftoa_engine+0x40>
     f62:	80 68       	ori	r24, 0x80	; 128
     f64:	91 1d       	adc	r25, r1
     f66:	df 93       	push	r29
     f68:	cf 93       	push	r28
     f6a:	1f 93       	push	r17
     f6c:	0f 93       	push	r16
     f6e:	ff 92       	push	r15
     f70:	ef 92       	push	r14
     f72:	19 2f       	mov	r17, r25
     f74:	98 7f       	andi	r25, 0xF8	; 248
     f76:	96 95       	lsr	r25
     f78:	e9 2f       	mov	r30, r25
     f7a:	96 95       	lsr	r25
     f7c:	96 95       	lsr	r25
     f7e:	e9 0f       	add	r30, r25
     f80:	ff 27       	eor	r31, r31
     f82:	e6 53       	subi	r30, 0x36	; 54
     f84:	ff 4f       	sbci	r31, 0xFF	; 255
     f86:	99 27       	eor	r25, r25
     f88:	33 27       	eor	r19, r19
     f8a:	ee 24       	eor	r14, r14
     f8c:	ff 24       	eor	r15, r15
     f8e:	a7 01       	movw	r20, r14
     f90:	e7 01       	movw	r28, r14
     f92:	05 90       	lpm	r0, Z+
     f94:	08 94       	sec
     f96:	07 94       	ror	r0
     f98:	28 f4       	brcc	.+10     	; 0xfa4 <__ftoa_engine+0x80>
     f9a:	36 0f       	add	r19, r22
     f9c:	e7 1e       	adc	r14, r23
     f9e:	f8 1e       	adc	r15, r24
     fa0:	49 1f       	adc	r20, r25
     fa2:	51 1d       	adc	r21, r1
     fa4:	66 0f       	add	r22, r22
     fa6:	77 1f       	adc	r23, r23
     fa8:	88 1f       	adc	r24, r24
     faa:	99 1f       	adc	r25, r25
     fac:	06 94       	lsr	r0
     fae:	a1 f7       	brne	.-24     	; 0xf98 <__ftoa_engine+0x74>
     fb0:	05 90       	lpm	r0, Z+
     fb2:	07 94       	ror	r0
     fb4:	28 f4       	brcc	.+10     	; 0xfc0 <__ftoa_engine+0x9c>
     fb6:	e7 0e       	add	r14, r23
     fb8:	f8 1e       	adc	r15, r24
     fba:	49 1f       	adc	r20, r25
     fbc:	56 1f       	adc	r21, r22
     fbe:	c1 1d       	adc	r28, r1
     fc0:	77 0f       	add	r23, r23
     fc2:	88 1f       	adc	r24, r24
     fc4:	99 1f       	adc	r25, r25
     fc6:	66 1f       	adc	r22, r22
     fc8:	06 94       	lsr	r0
     fca:	a1 f7       	brne	.-24     	; 0xfb4 <__ftoa_engine+0x90>
     fcc:	05 90       	lpm	r0, Z+
     fce:	07 94       	ror	r0
     fd0:	28 f4       	brcc	.+10     	; 0xfdc <__ftoa_engine+0xb8>
     fd2:	f8 0e       	add	r15, r24
     fd4:	49 1f       	adc	r20, r25
     fd6:	56 1f       	adc	r21, r22
     fd8:	c7 1f       	adc	r28, r23
     fda:	d1 1d       	adc	r29, r1
     fdc:	88 0f       	add	r24, r24
     fde:	99 1f       	adc	r25, r25
     fe0:	66 1f       	adc	r22, r22
     fe2:	77 1f       	adc	r23, r23
     fe4:	06 94       	lsr	r0
     fe6:	a1 f7       	brne	.-24     	; 0xfd0 <__ftoa_engine+0xac>
     fe8:	05 90       	lpm	r0, Z+
     fea:	07 94       	ror	r0
     fec:	20 f4       	brcc	.+8      	; 0xff6 <__ftoa_engine+0xd2>
     fee:	49 0f       	add	r20, r25
     ff0:	56 1f       	adc	r21, r22
     ff2:	c7 1f       	adc	r28, r23
     ff4:	d8 1f       	adc	r29, r24
     ff6:	99 0f       	add	r25, r25
     ff8:	66 1f       	adc	r22, r22
     ffa:	77 1f       	adc	r23, r23
     ffc:	88 1f       	adc	r24, r24
     ffe:	06 94       	lsr	r0
    1000:	a9 f7       	brne	.-22     	; 0xfec <__ftoa_engine+0xc8>
    1002:	84 91       	lpm	r24, Z
    1004:	10 95       	com	r17
    1006:	17 70       	andi	r17, 0x07	; 7
    1008:	41 f0       	breq	.+16     	; 0x101a <__ftoa_engine+0xf6>
    100a:	d6 95       	lsr	r29
    100c:	c7 95       	ror	r28
    100e:	57 95       	ror	r21
    1010:	47 95       	ror	r20
    1012:	f7 94       	ror	r15
    1014:	e7 94       	ror	r14
    1016:	1a 95       	dec	r17
    1018:	c1 f7       	brne	.-16     	; 0x100a <__ftoa_engine+0xe6>
    101a:	e0 e7       	ldi	r30, 0x70	; 112
    101c:	f0 e0       	ldi	r31, 0x00	; 0
    101e:	68 94       	set
    1020:	15 90       	lpm	r1, Z+
    1022:	15 91       	lpm	r17, Z+
    1024:	35 91       	lpm	r19, Z+
    1026:	65 91       	lpm	r22, Z+
    1028:	95 91       	lpm	r25, Z+
    102a:	05 90       	lpm	r0, Z+
    102c:	7f e2       	ldi	r23, 0x2F	; 47
    102e:	73 95       	inc	r23
    1030:	e1 18       	sub	r14, r1
    1032:	f1 0a       	sbc	r15, r17
    1034:	43 0b       	sbc	r20, r19
    1036:	56 0b       	sbc	r21, r22
    1038:	c9 0b       	sbc	r28, r25
    103a:	d0 09       	sbc	r29, r0
    103c:	c0 f7       	brcc	.-16     	; 0x102e <__ftoa_engine+0x10a>
    103e:	e1 0c       	add	r14, r1
    1040:	f1 1e       	adc	r15, r17
    1042:	43 1f       	adc	r20, r19
    1044:	56 1f       	adc	r21, r22
    1046:	c9 1f       	adc	r28, r25
    1048:	d0 1d       	adc	r29, r0
    104a:	7e f4       	brtc	.+30     	; 0x106a <__ftoa_engine+0x146>
    104c:	70 33       	cpi	r23, 0x30	; 48
    104e:	11 f4       	brne	.+4      	; 0x1054 <__ftoa_engine+0x130>
    1050:	8a 95       	dec	r24
    1052:	e6 cf       	rjmp	.-52     	; 0x1020 <__ftoa_engine+0xfc>
    1054:	e8 94       	clt
    1056:	01 50       	subi	r16, 0x01	; 1
    1058:	30 f0       	brcs	.+12     	; 0x1066 <__ftoa_engine+0x142>
    105a:	08 0f       	add	r16, r24
    105c:	0a f4       	brpl	.+2      	; 0x1060 <__ftoa_engine+0x13c>
    105e:	00 27       	eor	r16, r16
    1060:	02 17       	cp	r16, r18
    1062:	08 f4       	brcc	.+2      	; 0x1066 <__ftoa_engine+0x142>
    1064:	20 2f       	mov	r18, r16
    1066:	23 95       	inc	r18
    1068:	02 2f       	mov	r16, r18
    106a:	7a 33       	cpi	r23, 0x3A	; 58
    106c:	28 f0       	brcs	.+10     	; 0x1078 <__ftoa_engine+0x154>
    106e:	79 e3       	ldi	r23, 0x39	; 57
    1070:	7d 93       	st	X+, r23
    1072:	2a 95       	dec	r18
    1074:	e9 f7       	brne	.-6      	; 0x1070 <__ftoa_engine+0x14c>
    1076:	10 c0       	rjmp	.+32     	; 0x1098 <__ftoa_engine+0x174>
    1078:	7d 93       	st	X+, r23
    107a:	2a 95       	dec	r18
    107c:	89 f6       	brne	.-94     	; 0x1020 <__ftoa_engine+0xfc>
    107e:	06 94       	lsr	r0
    1080:	97 95       	ror	r25
    1082:	67 95       	ror	r22
    1084:	37 95       	ror	r19
    1086:	17 95       	ror	r17
    1088:	17 94       	ror	r1
    108a:	e1 18       	sub	r14, r1
    108c:	f1 0a       	sbc	r15, r17
    108e:	43 0b       	sbc	r20, r19
    1090:	56 0b       	sbc	r21, r22
    1092:	c9 0b       	sbc	r28, r25
    1094:	d0 09       	sbc	r29, r0
    1096:	98 f0       	brcs	.+38     	; 0x10be <__ftoa_engine+0x19a>
    1098:	23 95       	inc	r18
    109a:	7e 91       	ld	r23, -X
    109c:	73 95       	inc	r23
    109e:	7a 33       	cpi	r23, 0x3A	; 58
    10a0:	08 f0       	brcs	.+2      	; 0x10a4 <__ftoa_engine+0x180>
    10a2:	70 e3       	ldi	r23, 0x30	; 48
    10a4:	7c 93       	st	X, r23
    10a6:	20 13       	cpse	r18, r16
    10a8:	b8 f7       	brcc	.-18     	; 0x1098 <__ftoa_engine+0x174>
    10aa:	7e 91       	ld	r23, -X
    10ac:	70 61       	ori	r23, 0x10	; 16
    10ae:	7d 93       	st	X+, r23
    10b0:	30 f0       	brcs	.+12     	; 0x10be <__ftoa_engine+0x19a>
    10b2:	83 95       	inc	r24
    10b4:	71 e3       	ldi	r23, 0x31	; 49
    10b6:	7d 93       	st	X+, r23
    10b8:	70 e3       	ldi	r23, 0x30	; 48
    10ba:	2a 95       	dec	r18
    10bc:	e1 f7       	brne	.-8      	; 0x10b6 <__ftoa_engine+0x192>
    10be:	11 24       	eor	r1, r1
    10c0:	ef 90       	pop	r14
    10c2:	ff 90       	pop	r15
    10c4:	0f 91       	pop	r16
    10c6:	1f 91       	pop	r17
    10c8:	cf 91       	pop	r28
    10ca:	df 91       	pop	r29
    10cc:	99 27       	eor	r25, r25
    10ce:	87 fd       	sbrc	r24, 7
    10d0:	90 95       	com	r25
    10d2:	08 95       	ret

000010d4 <strnlen_P>:
    10d4:	fc 01       	movw	r30, r24
    10d6:	05 90       	lpm	r0, Z+
    10d8:	61 50       	subi	r22, 0x01	; 1
    10da:	70 40       	sbci	r23, 0x00	; 0
    10dc:	01 10       	cpse	r0, r1
    10de:	d8 f7       	brcc	.-10     	; 0x10d6 <strnlen_P+0x2>
    10e0:	80 95       	com	r24
    10e2:	90 95       	com	r25
    10e4:	8e 0f       	add	r24, r30
    10e6:	9f 1f       	adc	r25, r31
    10e8:	08 95       	ret

000010ea <strnlen>:
    10ea:	fc 01       	movw	r30, r24
    10ec:	61 50       	subi	r22, 0x01	; 1
    10ee:	70 40       	sbci	r23, 0x00	; 0
    10f0:	01 90       	ld	r0, Z+
    10f2:	01 10       	cpse	r0, r1
    10f4:	d8 f7       	brcc	.-10     	; 0x10ec <strnlen+0x2>
    10f6:	80 95       	com	r24
    10f8:	90 95       	com	r25
    10fa:	8e 0f       	add	r24, r30
    10fc:	9f 1f       	adc	r25, r31
    10fe:	08 95       	ret

00001100 <fputc>:
    1100:	0f 93       	push	r16
    1102:	1f 93       	push	r17
    1104:	cf 93       	push	r28
    1106:	df 93       	push	r29
    1108:	fb 01       	movw	r30, r22
    110a:	23 81       	ldd	r18, Z+3	; 0x03
    110c:	21 fd       	sbrc	r18, 1
    110e:	03 c0       	rjmp	.+6      	; 0x1116 <fputc+0x16>
    1110:	8f ef       	ldi	r24, 0xFF	; 255
    1112:	9f ef       	ldi	r25, 0xFF	; 255
    1114:	2c c0       	rjmp	.+88     	; 0x116e <fputc+0x6e>
    1116:	22 ff       	sbrs	r18, 2
    1118:	16 c0       	rjmp	.+44     	; 0x1146 <fputc+0x46>
    111a:	46 81       	ldd	r20, Z+6	; 0x06
    111c:	57 81       	ldd	r21, Z+7	; 0x07
    111e:	24 81       	ldd	r18, Z+4	; 0x04
    1120:	35 81       	ldd	r19, Z+5	; 0x05
    1122:	42 17       	cp	r20, r18
    1124:	53 07       	cpc	r21, r19
    1126:	44 f4       	brge	.+16     	; 0x1138 <fputc+0x38>
    1128:	a0 81       	ld	r26, Z
    112a:	b1 81       	ldd	r27, Z+1	; 0x01
    112c:	9d 01       	movw	r18, r26
    112e:	2f 5f       	subi	r18, 0xFF	; 255
    1130:	3f 4f       	sbci	r19, 0xFF	; 255
    1132:	31 83       	std	Z+1, r19	; 0x01
    1134:	20 83       	st	Z, r18
    1136:	8c 93       	st	X, r24
    1138:	26 81       	ldd	r18, Z+6	; 0x06
    113a:	37 81       	ldd	r19, Z+7	; 0x07
    113c:	2f 5f       	subi	r18, 0xFF	; 255
    113e:	3f 4f       	sbci	r19, 0xFF	; 255
    1140:	37 83       	std	Z+7, r19	; 0x07
    1142:	26 83       	std	Z+6, r18	; 0x06
    1144:	14 c0       	rjmp	.+40     	; 0x116e <fputc+0x6e>
    1146:	8b 01       	movw	r16, r22
    1148:	ec 01       	movw	r28, r24
    114a:	fb 01       	movw	r30, r22
    114c:	00 84       	ldd	r0, Z+8	; 0x08
    114e:	f1 85       	ldd	r31, Z+9	; 0x09
    1150:	e0 2d       	mov	r30, r0
    1152:	09 95       	icall
    1154:	89 2b       	or	r24, r25
    1156:	e1 f6       	brne	.-72     	; 0x1110 <fputc+0x10>
    1158:	d8 01       	movw	r26, r16
    115a:	16 96       	adiw	r26, 0x06	; 6
    115c:	8d 91       	ld	r24, X+
    115e:	9c 91       	ld	r25, X
    1160:	17 97       	sbiw	r26, 0x07	; 7
    1162:	01 96       	adiw	r24, 0x01	; 1
    1164:	17 96       	adiw	r26, 0x07	; 7
    1166:	9c 93       	st	X, r25
    1168:	8e 93       	st	-X, r24
    116a:	16 97       	sbiw	r26, 0x06	; 6
    116c:	ce 01       	movw	r24, r28
    116e:	df 91       	pop	r29
    1170:	cf 91       	pop	r28
    1172:	1f 91       	pop	r17
    1174:	0f 91       	pop	r16
    1176:	08 95       	ret

00001178 <sprintf>:
    1178:	ae e0       	ldi	r26, 0x0E	; 14
    117a:	b0 e0       	ldi	r27, 0x00	; 0
    117c:	e2 ec       	ldi	r30, 0xC2	; 194
    117e:	f8 e0       	ldi	r31, 0x08	; 8
    1180:	0c 94 69 07 	jmp	0xed2	; 0xed2 <__prologue_saves__+0x1c>
    1184:	0d 89       	ldd	r16, Y+21	; 0x15
    1186:	1e 89       	ldd	r17, Y+22	; 0x16
    1188:	86 e0       	ldi	r24, 0x06	; 6
    118a:	8c 83       	std	Y+4, r24	; 0x04
    118c:	1a 83       	std	Y+2, r17	; 0x02
    118e:	09 83       	std	Y+1, r16	; 0x01
    1190:	8f ef       	ldi	r24, 0xFF	; 255
    1192:	9f e7       	ldi	r25, 0x7F	; 127
    1194:	9e 83       	std	Y+6, r25	; 0x06
    1196:	8d 83       	std	Y+5, r24	; 0x05
    1198:	ae 01       	movw	r20, r28
    119a:	47 5e       	subi	r20, 0xE7	; 231
    119c:	5f 4f       	sbci	r21, 0xFF	; 255
    119e:	6f 89       	ldd	r22, Y+23	; 0x17
    11a0:	78 8d       	ldd	r23, Y+24	; 0x18
    11a2:	ce 01       	movw	r24, r28
    11a4:	01 96       	adiw	r24, 0x01	; 1
    11a6:	0e 94 de 03 	call	0x7bc	; 0x7bc <vfprintf>
    11aa:	ef 81       	ldd	r30, Y+7	; 0x07
    11ac:	f8 85       	ldd	r31, Y+8	; 0x08
    11ae:	e0 0f       	add	r30, r16
    11b0:	f1 1f       	adc	r31, r17
    11b2:	10 82       	st	Z, r1
    11b4:	2e 96       	adiw	r28, 0x0e	; 14
    11b6:	e4 e0       	ldi	r30, 0x04	; 4
    11b8:	0c 94 85 07 	jmp	0xf0a	; 0xf0a <__epilogue_restores__+0x1c>

000011bc <__ultoa_invert>:
    11bc:	fa 01       	movw	r30, r20
    11be:	aa 27       	eor	r26, r26
    11c0:	28 30       	cpi	r18, 0x08	; 8
    11c2:	51 f1       	breq	.+84     	; 0x1218 <__ultoa_invert+0x5c>
    11c4:	20 31       	cpi	r18, 0x10	; 16
    11c6:	81 f1       	breq	.+96     	; 0x1228 <__ultoa_invert+0x6c>
    11c8:	e8 94       	clt
    11ca:	6f 93       	push	r22
    11cc:	6e 7f       	andi	r22, 0xFE	; 254
    11ce:	6e 5f       	subi	r22, 0xFE	; 254
    11d0:	7f 4f       	sbci	r23, 0xFF	; 255
    11d2:	8f 4f       	sbci	r24, 0xFF	; 255
    11d4:	9f 4f       	sbci	r25, 0xFF	; 255
    11d6:	af 4f       	sbci	r26, 0xFF	; 255
    11d8:	b1 e0       	ldi	r27, 0x01	; 1
    11da:	3e d0       	rcall	.+124    	; 0x1258 <__ultoa_invert+0x9c>
    11dc:	b4 e0       	ldi	r27, 0x04	; 4
    11de:	3c d0       	rcall	.+120    	; 0x1258 <__ultoa_invert+0x9c>
    11e0:	67 0f       	add	r22, r23
    11e2:	78 1f       	adc	r23, r24
    11e4:	89 1f       	adc	r24, r25
    11e6:	9a 1f       	adc	r25, r26
    11e8:	a1 1d       	adc	r26, r1
    11ea:	68 0f       	add	r22, r24
    11ec:	79 1f       	adc	r23, r25
    11ee:	8a 1f       	adc	r24, r26
    11f0:	91 1d       	adc	r25, r1
    11f2:	a1 1d       	adc	r26, r1
    11f4:	6a 0f       	add	r22, r26
    11f6:	71 1d       	adc	r23, r1
    11f8:	81 1d       	adc	r24, r1
    11fa:	91 1d       	adc	r25, r1
    11fc:	a1 1d       	adc	r26, r1
    11fe:	20 d0       	rcall	.+64     	; 0x1240 <__ultoa_invert+0x84>
    1200:	09 f4       	brne	.+2      	; 0x1204 <__ultoa_invert+0x48>
    1202:	68 94       	set
    1204:	3f 91       	pop	r19
    1206:	2a e0       	ldi	r18, 0x0A	; 10
    1208:	26 9f       	mul	r18, r22
    120a:	11 24       	eor	r1, r1
    120c:	30 19       	sub	r19, r0
    120e:	30 5d       	subi	r19, 0xD0	; 208
    1210:	31 93       	st	Z+, r19
    1212:	de f6       	brtc	.-74     	; 0x11ca <__ultoa_invert+0xe>
    1214:	cf 01       	movw	r24, r30
    1216:	08 95       	ret
    1218:	46 2f       	mov	r20, r22
    121a:	47 70       	andi	r20, 0x07	; 7
    121c:	40 5d       	subi	r20, 0xD0	; 208
    121e:	41 93       	st	Z+, r20
    1220:	b3 e0       	ldi	r27, 0x03	; 3
    1222:	0f d0       	rcall	.+30     	; 0x1242 <__ultoa_invert+0x86>
    1224:	c9 f7       	brne	.-14     	; 0x1218 <__ultoa_invert+0x5c>
    1226:	f6 cf       	rjmp	.-20     	; 0x1214 <__ultoa_invert+0x58>
    1228:	46 2f       	mov	r20, r22
    122a:	4f 70       	andi	r20, 0x0F	; 15
    122c:	40 5d       	subi	r20, 0xD0	; 208
    122e:	4a 33       	cpi	r20, 0x3A	; 58
    1230:	18 f0       	brcs	.+6      	; 0x1238 <__ultoa_invert+0x7c>
    1232:	49 5d       	subi	r20, 0xD9	; 217
    1234:	31 fd       	sbrc	r19, 1
    1236:	40 52       	subi	r20, 0x20	; 32
    1238:	41 93       	st	Z+, r20
    123a:	02 d0       	rcall	.+4      	; 0x1240 <__ultoa_invert+0x84>
    123c:	a9 f7       	brne	.-22     	; 0x1228 <__ultoa_invert+0x6c>
    123e:	ea cf       	rjmp	.-44     	; 0x1214 <__ultoa_invert+0x58>
    1240:	b4 e0       	ldi	r27, 0x04	; 4
    1242:	a6 95       	lsr	r26
    1244:	97 95       	ror	r25
    1246:	87 95       	ror	r24
    1248:	77 95       	ror	r23
    124a:	67 95       	ror	r22
    124c:	ba 95       	dec	r27
    124e:	c9 f7       	brne	.-14     	; 0x1242 <__ultoa_invert+0x86>
    1250:	00 97       	sbiw	r24, 0x00	; 0
    1252:	61 05       	cpc	r22, r1
    1254:	71 05       	cpc	r23, r1
    1256:	08 95       	ret
    1258:	9b 01       	movw	r18, r22
    125a:	ac 01       	movw	r20, r24
    125c:	0a 2e       	mov	r0, r26
    125e:	06 94       	lsr	r0
    1260:	57 95       	ror	r21
    1262:	47 95       	ror	r20
    1264:	37 95       	ror	r19
    1266:	27 95       	ror	r18
    1268:	ba 95       	dec	r27
    126a:	c9 f7       	brne	.-14     	; 0x125e <__ultoa_invert+0xa2>
    126c:	62 0f       	add	r22, r18
    126e:	73 1f       	adc	r23, r19
    1270:	84 1f       	adc	r24, r20
    1272:	95 1f       	adc	r25, r21
    1274:	a0 1d       	adc	r26, r0
    1276:	08 95       	ret

00001278 <_exit>:
    1278:	f8 94       	cli

0000127a <__stop_program>:
    127a:	ff cf       	rjmp	.-2      	; 0x127a <__stop_program>
